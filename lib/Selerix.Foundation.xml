<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Selerix.Foundation</name>
    </assembly>
    <members>
        <member name="T:Selerix.Foundation.AddDependentReason">
            <summary>
            Reasons for adding a dependent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.Birth">
            <summary>Birth of dependent</summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.Adoption">
            <summary>Adoption of dependent</summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.Marriage">
            <summary>Marriage</summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.Divorce">
            <summary>Divorce</summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.RegainCustody">
            <summary>Regain custody of dependent</summary>
        </member>
        <member name="F:Selerix.Foundation.AddDependentReason.CourtOrdered">
            <summary>Court ordered dependent change</summary>
        </member>
        <member name="T:Selerix.Foundation.Relationship">
            <summary>
            Enum. Type of relationship
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Employee">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Spouse">
            <summary>
            Spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Child">
            <summary>
            Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Grandchild">
            <summary>
            Grandchild.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.DomesticPartner">
            <summary>
            Domestic partner.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Grandparent">
            <summary>
            Grandparent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.AdultBenefitRecipient">
            <summary>
            Adult Benefit Recipient.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Beneficiary">
            <summary>
            Beneficiary.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.ExSpouse">
            <summary>
            Ex-Spouse
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Relationship.AdultDependent">
            <summary>
            The adult dependent
            </summary>
        </member>
        <member name="T:Selerix.Foundation.RelationshipCode">
            <summary>
            Enumeration for the Relationship table based on "RelationshipCode".
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.E">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.S">
            <summary>
            Spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.C">
            <summary>
            Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.G">
            <summary>
            Grandchild.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.D">
            <summary>
            Dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.P">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.GP">
            <summary>
            Grandparent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.A">
            <summary>
            Adult benefit recipient
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.EX">
            <summary>
            Ex-Spouse
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RelationshipCode.AD">
            <summary>
            The adult dependent
            </summary>
        </member>
        <member name="T:Selerix.Foundation.LegalStatus">
            <summary>
            Enum. Legal status of relationship to applicant.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Employee">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Spouse">
            <summary>
            Spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.CommonLawSpouse">
            <summary>
            Common law spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Child">
            <summary>
            Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.AdoptedChild">
            <summary>
            Adopted child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.CollateralDependent">
            <summary>
            Collateral dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.CustodialGrandchild">
            <summary>
            Custodial grandchild.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.FosterChild">
            <summary>
            Foster child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Stepchild">
            <summary>
            Stepchild.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Ward">
            <summary>
            Ward.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.CustodialNieceOrNephew">
            <summary>
            Custodial niece or nephew.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.DomesticPartnersChild">
            <summary>
            Domestic partner's child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.ChildOfCivilUnionPartner">
            <summary>
            Child of Civil Union Partner
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Grandchild">
            <summary>
            Grandchild.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.DomesticPartner">
            <summary>
            Domestic partner.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.CivilUnionPartner">
            <summary>
            Civil union partner.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Grandparent">
            <summary>
            Grandparent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.AdultBenefitRecipient">
            <summary>
            Adult benefit recipient.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.ExSpouse">
            <summary>
            Ex-spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.AdultDependent">
            <summary>
            The adult dependent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Beneficiary">
            <summary>
            Beneficiary.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Trust">
            <summary>
            Trust.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.AuntOrUncle">
            <summary>
            Aunt or Uncle.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.NephewOrNiece">
            <summary>
            Nephew or Niece.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Sibling">
            <summary>
            Sibling.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Cousin">
            <summary>
            Cousin.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LegalStatus.Charity">
            <summary>
            Charity.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.MaritalStatus">
            <summary>
            Enum. Marital Status of applicant.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Married">
            <summary>
            Married.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Single">
            <summary>
            Single.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Divorced">
            <summary>
            Divorced.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Widowed">
            <summary>
            Widowed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Separated">
            <summary>
            Legally Separated.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Commonlaw">
            <summary>
            Common Law (Defacto).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.DomesticPartnership">
            <summary>
            Domestic Partnership.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.CivilUnion">
            <summary>
            Civil Union.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaritalStatus.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SmokerStatus">
            <summary>
            Enum. Smoker status of applicant.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SmokerStatus.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SmokerStatus.Never">
            <summary>
            Never used tobacco in any form.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SmokerStatus.Prior">
            <summary>
            Prior tobacco user.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SmokerStatus.Current">
            <summary>
            Current tobacco user.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SmokerStatus.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DependentNumberGeneration">
            <summary>
            Enumeration that specified how to generate the next dependent number value.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentNumberGeneration.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentNumberGeneration.SequentialEmployee0">
            <summary>
            Sequential by database entry, with the employee set to 0
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentNumberGeneration.SequentialEmployee1">
            <summary>
            Sequential by database entry, with the employee set to 1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentNumberGeneration.SequentialEmployee0_Dependents10">
            <summary>
            Sequential by database entry, with the employee set to 0, Dependents = 10
            </summary>
        </member>
        <member name="T:Selerix.Foundation.BeneficiaryNumberGeneration">
            <summary>
            Enumeration that specified how to generate the next beneficiary number value.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BeneficiaryNumberGeneration.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BeneficiaryNumberGeneration.SequentialStarting101">
            <summary>
            Sequential by database entry, starting from 101
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ApplicationStatus">
            <summary>
            Enum. Specifies the status of the application.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Trash">
            <summary>
            Trash. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Incomplete">
            <summary>
            Incomplete.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Signed">
            <summary>
            Signed. Coverage not created.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Pending">
            <summary>
            Pending. Coverage not created. Waiting response from carrier.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Complete">
            <summary>
            Complete. Coverage created
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.ReadyToSign">
            <summary>
            Ready to sign.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Maintenance">
            <summary>
            Maintenance update. Like synchronization of covergaes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationStatus.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.UnderwritingMode">
            <summary>
            Enum. Indicates the underwriting mode of application.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UnderwritingMode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UnderwritingMode.Gi">
            <summary>
            Gi.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UnderwritingMode.Cgi">
            <summary>
            Cgi.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UnderwritingMode.Si">
            <summary>
            Si.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.RiderPaymentContribution">
            <summary>
            Determine who pays rider cost
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RiderPaymentContribution.Split">
            <summary>
            Split cost between employee and employer by percent set into config
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RiderPaymentContribution.EmployerPay">
            <summary>
            Employer pay 100% of rider cost
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RiderPaymentContribution.EmployeePay">
            <summary>
            Employee pay 100% of rider cost
            </summary>
        </member>
        <member name="T:Selerix.Foundation.IZipArchive">
            <summary>
            Represents a package of compressed files in the zip archive format.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.IZipArchive.Entries">
            <summary>
            Gets the collection of entries that are currently in the zip archive.
            </summary>
            <exception cref="T:System.NotSupportedException">The zip archive does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">The zip archive has been disposed.</exception>
            <exception cref="T:System.IO.InvalidDataException"> The zip archive is corrupt, and its entries cannot be retrieved.</exception>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.CreateEntry(System.String)">
            <summary>
            Creates an empty entry that has the specified path and entry name in the zip archive.
            </summary>
            <param name="entryName">A path, relative to the root of the archive, that specifies the name of the entry to be created.</param>
            <returns>An empty entry in the zip archive.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="entryName"/> is <see cref="F:System.String.Empty"/>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entryName"/> is null./>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The zip archive does not support writing.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The zip archive has been disposed.
            </exception>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.CreateEntry(System.String,System.IO.Stream,System.Nullable{System.DateTime})">
            <summary>
            Creates an entry with data.
            <para>For more information see <see cref="M:Selerix.Foundation.IZipArchive.CreateEntry(System.String)"/></para>
            </summary>
            <param name="entryName"></param>
            <param name="inputStream"></param>
            <param name="writeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.CreateEntry(System.String,System.Byte[],System.Int32,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Creates an entry with data.
            <para>For more information see <see cref="M:Selerix.Foundation.IZipArchive.CreateEntry(System.String)"/></para>
            </summary>
            <param name="entryName"></param>
            <param name="buffer"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <param name="writeTime"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.GetEntry(System.String)">
            <summary>
            Retrieves a wrapper for the specified entry in the zip archive.
            </summary>
            <param name="entryName">A path, relative to the root of the archive, that identifies the entry to retrieve.</param>
            <returns>A wrapper for the specified entry in the archive; null if the entry does not exist in the archive.</returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="entryName"/> is <see cref="F:System.String.Empty"/>
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="entryName"/> is null./>
            </exception>
            <exception cref="T:System.NotSupportedException">
            The zip archive does not support reading.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            The zip archive has been disposed.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            The zip archive is corrupt, and its entries cannot be retrieved.
            </exception>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.SetLevel(System.Int32)">
            <summary>
            Sets the Compression Level for all zip archive entries.
            </summary>
            <param name="compressionLevel">number from 0 to 9 - compression lowest to highest.</param>
            <exception cref="T:System.ArgumentException"><paramref name="compressionLevel"/> is not in required range.</exception>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.AppendAllFileSystemEntries(System.String)">
            <summary>
            Append all file system entries form the specified directory.
            </summary>
            <param name="directoryPath">The directory path on disk.</param>
            <returns>Count of entries added in to the archive.</returns>
        </member>
        <member name="M:Selerix.Foundation.IZipArchive.AppendFileSystemEntries(System.String,System.String[])">
            <summary>
            Append all file system entries form the specified related directory of file path.
            </summary>
            <param name="directoryPath">The directory path on disk.</param>
            <param name="entries">The list of entry paths on disk.</param>
            <returns>Count of entries added in to the archive.</returns>
        </member>
        <member name="T:Selerix.Foundation.IZipArchiveEntry">
            <summary>
            Represents a compressed file within a zip archive.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.CompressedLength">
            <summary>
            Gets the compressed size of the entry in the zip archive.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value of the property is not available because the entry has been modified.
            </exception>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.FullName">
            <summary>
            Gets the relative path of the entry in the zip archive.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.LastWriteTime">
            <summary>
            Gets or sets the last time the entry in the zip archive was changed.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The attempt to set this property failed, because the zip archive for the entry is in 'Read' mode.
            </exception>
            <exception cref="T:System.IO.IOException">
            The archive mode is set to 'Create' or 'Update' mode and the entry has been opened.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            An attempt was made to set this property to a value that is either earlier than
            1980 January 1 0:00:00 (midnight) or later than 2107 December 31 23:59:58 (one second before midnight).
            </exception>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.Length">
            <summary>
            Gets the uncompressed size of the entry in the zip archive.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The value of the property is not available because the entry has been modified.
            </exception>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.Name">
            <summary>
            Gets the file name of the entry in the zip archive.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.IZipArchiveEntry.Delete">
            <summary>
            Deletes the entry from the zip archive.
            </summary>
            <exception cref="T:System.IO.IOException">
            The entry is already open for reading or writing.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The zip archive for this entry was opened in a mode other than 'Update'.
            </exception>
        </member>
        <member name="M:Selerix.Foundation.IZipArchiveEntry.Open">
            <summary>
            Opens the entry from the zip archive.
            </summary>
            <returns>The stream that represents the contents of the entry.</returns>
            <exception cref="T:System.IO.IOException">
            The entry is already currently open for writing or the entry has been deleted from the archive.
            Or the archive for this entry was opened with the 'Create' mode, and this entry has already been written to.
            </exception>
            <exception cref="T:System.IO.InvalidDataException">
            The entry is either missing from the archive or is corrupt and cannot be read.
            Or the entry has been compressed by using a compression method that is not supported.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Opens the entry from the zip archive.
            </exception>
        </member>
        <member name="P:Selerix.Foundation.IZipArchiveEntry.Comment">
            <summary>
            Optional Comment.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Compression">
            <summary>
            Helper class to work with archiving.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Compression.CompressionType">
            <summary>
            Indicates the type of compression
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Compression.CompressionType.Deflate">
            <summary>
            Deflate (raw compression algorithm used by both 'Zip' and 'GZip' formats)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Compression.CompressionType.GZip">
            <summary>
            GZip
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Compression.CompressionType.DeflateSilverlight">
            <summary>
            Deflate for Silverlight control (raw compression algorithm used by both 'Zip' and 'GZip' formats)
            Silverlight infragistics implementation has a bug which requires to add additional 4096 bytes to output.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Compression.GZip">
            <summary>
            Activates the GZip format compression.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Compression.Deflate">
            <summary>
            Activates the Deflate algorithm compression.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Compression.DeflateSilverlight">
            <summary>
            Activates the Deflate algorithm compression.
            (DO NOT USE for non-silverlight control)
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Compression.ZipArchiveCreate(System.IO.Stream)">
            <summary>
            Creates a new zip archive.
            </summary>
            <param name="outputStream">A <see cref="T:System.IO.Stream"/> for writing a compressed data into.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.ZipArchiveRead(System.IO.Stream)">
            <summary>
            Reads an existing zip archive.
            </summary>
            <param name="inputStream">A <see cref="T:System.IO.Stream"/> for reading a compressed data from.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.ZipArchiveUpdate(System.IO.Stream)">
            <summary>
            Updates an existing zip archive.
            </summary>
            <param name="ioStream">A <see cref="T:System.IO.Stream"/> for reading and writing a compressed data.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.ExtractZip(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Extracts all Zip Archive entries into the target folder.
            </summary>
            <param name="zipFilePath">The path to the Zip file to extract.</param>
            <param name="targetDir">
            <param name="merge">Merge the entries from the archive with entries in the target folder.</param>
            <param name="rewrite">Overwrite existing entries in the target folder.</param>
            The full path to the destination folder.
            <para>If <paramref name="targetDir"/> does not exist, a new folder will be created.</para>
            <para>If <paramref name="targetDir"/> is not empty and "merge" flag is false, <see cref="T:System.ArgumentException"/> will be thrown.</para>
            </param>
            <exception cref="T:System.ArgumentException">Zip file doesn't exist or destination folder is not empty and "merge" flag is false.</exception>
            <returns>A count of extracted files.</returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.#ctor(Selerix.Foundation.Compression.CompressionType)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Compression"/> class.
            </summary>
            <param name="compressionType">Type of the compression.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.OutputStream(System.IO.Stream)">
            <summary>
            Creates a compression stream based on the given output stream.
            <para>After disposing this <see cref="T:System.IO.Stream"/> an underling <see cref="T:System.IO.Stream"/> remains open.</para>
            </summary>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.OutputStream(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a compression stream based on the given output stream.
            <para>After disposing this <see cref="T:System.IO.Stream"/> an underling <see cref="T:System.IO.Stream"/> remains open.</para>
            </summary>
            <param name="outputStream">The output stream.</param>
            <param name="leaveOpen">Leave original stream open after dispose.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.InputStream(System.IO.Stream)">
            <summary>
            Creates a decompression stream based on the given input stream.
            <para>After disposing this <see cref="T:System.IO.Stream"/> an underling <see cref="T:System.IO.Stream"/> remains open.</para>
            </summary>
            <param name="inputStream">The input stream.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.InputStream(System.IO.Stream,System.Boolean)">
            <summary>
            Creates a decompression stream based on the given input stream.
            <para>After disposing this <see cref="T:System.IO.Stream"/> an underling <see cref="T:System.IO.Stream"/> remains open.</para>
            </summary>
            <param name="inputStream">The input stream.</param>
            <param name="leaveOpen">Leave original stream open after dispose.</param>
        </member>
        <member name="M:Selerix.Foundation.Compression.Compress(System.Byte[])">
            <summary>
            Compresses the specified bytes.
            </summary>
            <param name="bytesToCompress">The bytes to compress.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.Compress(System.String)">
            <summary>
            Compresses the specified string.
            </summary>
            <param name="stringToCompress">The string to compress.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.CompressToByte(System.String)">
            <summary>
            Compresses to byte.
            </summary>
            <param name="stringToCompress">The string to compress.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.DeCompress(System.String)">
            <summary>
            Decompress string.
            </summary>
            <param name="stringToDecompress">The string to decompress.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.DeCompress(System.Byte[])">
            <summary>
            Decompress bytes.
            </summary>
            <param name="bytesToDecompress">The bytes to decompress.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.UnzipEntireArchive(Selerix.Foundation.IZipArchive)">
            <summary>
            Unzip the entire archive into a dictionary[FileName,FileContents]
            </summary>
            <param name="zip">The zip archive to unzip</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.UnzipEntireArchive(System.IO.Stream)">
            <summary>
            Unzip the entire archive into a dictionary[FileName,FileContents]
            </summary>
            <param name="inputStream">The file stream of the file to unzip</param>
            <returns>Returns a Dictionary[fileName,fileByteArray]</returns>
        </member>
        <member name="M:Selerix.Foundation.Compression.UnzipEntireArchive(System.String)">
            <summary>
            Unzip the entire archive into a dictionary[FileName,FileContents]
            </summary>
            <param name="zipFile">The zip file on the hard drive to unzip</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.MSZipArchive.UnzipEntireArchive">
            <summary>
            Unzip the entire archive into a dictionary[FileName,FileContents]
            </summary>
            <returns>Returns a Dictionary[fileName,fileData]</returns>
        </member>
        <member name="T:Selerix.Foundation.Conveyor.AbstractStep`1">
            <summary>
            Conveyor step 
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.ID">
            <summary>
            The step id
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Conveyor.AbstractStep`1._TaskID">
            <summary>
            Id of task that execute this step
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.PushLockObject">
            <summary>
            Syncronize object for input data
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.FetchLockObject">
            <summary>
            Syncronize object for output data
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.Finished">
            <summary>
            Finished flag
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.IsReady">
            <summary>
            IsReady flag - means that there are no more Push in future and step need to be proceded even if 
            other flags is false
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.AbstractStep`1.IsSerialStep">
            <summary>
            indicated that step shoul be executed by only one task in serial mode
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.AbstractStep`1.Push(`0)">
            <summary>
            Add Input Queue
            </summary>
            <param name="input">The input object</param>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.AbstractStep`1.Fetch(System.Nullable{System.Int32})">
            <summary>
            Get next result of step execution
            </summary>
            <returns>Next result</returns>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.AbstractStep`1.SetReady">
            <summary>
            Notify step to calculate data anyway
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Conveyor.Conveyor`1">
            <summary>
            Class for parallel execution 
            </summary>
        </member>
        <member name="E:Selerix.Foundation.Conveyor.Conveyor`1.RowReceived">
            <summary>
            Event that raised when every row passed troght all steps
            </summary>
        </member>
        <member name="E:Selerix.Foundation.Conveyor.Conveyor`1.ResultReceived">
            <summary>
            Event that raised when all rows passed troght all steps
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Conveyor.Conveyor`1._Tasks">
            <summary>
            List of running tasks
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.Conveyor`1.#ctor">
            <summary>
            Conveyour constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.Conveyor`1.#ctor(System.Threading.CancellationTokenSource,System.Int32)">
            <summary>
            Conveyour constructor
            </summary>
            <param name="tokenSource">Cancellation TokenSource</param>
            <param name="taskLimit">Max processor count</param>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.Conveyor`1.NotifyResultReceived(System.Threading.Tasks.Task)">
            <summary>
            Notify that Result is done
            </summary>
            <param name="result">the result</param>        
        </member>
        <member name="M:Selerix.Foundation.Conveyor.Conveyor`1.Execute(System.Collections.Generic.IList{Selerix.Foundation.Conveyor.AbstractStep{`0}})">
            <summary>
            Executes the specified steps.
            </summary>
            <param name="steps">The steps.</param>
        </member>
        <member name="T:Selerix.Foundation.Conveyor.ResultReceivedEventArgs">
            <summary>
            ResultReceivedEventArgs
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.ResultReceivedEventArgs.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="result">result</param>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.ResultReceivedEventArgs.Result">
            <summary>
            get the result
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Conveyor.StepsCollection`1">
            <summary>
            Collection of Conveyor steps, that implements MoveNext/Prev methods 
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.StepsCollection`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.StepsCollection`1.#ctor(System.Collections.Generic.List{Selerix.Foundation.Conveyor.AbstractStep{`0}})">
            <summary>
            Constructor
            </summary>
            <param name="list">List of steps</param>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.StepsCollection`1.Current">
            <summary>
            Current step
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.StepsCollection`1.MoveNext">
            <summary>
            MoveNext
            </summary>
            <returns>Returns false if current step is the last step in collection, else returns true</returns>
        </member>
        <member name="P:Selerix.Foundation.Conveyor.StepsCollection`1.Next">
            <summary>
            Get the next step in collection without moving.
            If Current step is the last step returns null
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Conveyor.StepsCollection`1.MovePrevious">
            <summary>
            MovePrevious
            </summary>
            <returns>Returns false if current step is the first step in collection, else returns true</returns>
        </member>
        <member name="T:Selerix.Foundation.CustomFieldType">
            <summary>
            Enum. Specifies the attributes for the custom field type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Int">
            <summary>
            Number.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.String">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.DateTime">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Boolean">
            <summary>
            Yes/No.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Decimal">
            <summary>
            Decimal.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.ComboBox">
            <summary>
            Combo Box.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Money">
            <summary>
            Money.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.ZipCode">
            <summary>
            ZipCode.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.ZipCodePlus4">
            <summary>
            Zip Code + 4.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.PhoneNumber">
            <summary>
            Phone number.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.SSN">
            <summary>
            Social Security Number.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CustomFieldScope">
            <summary>
            List of Custom Field Scopes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldScope.Employee">
            <summary>
            Employee level custom field
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldScope.Person">
            <summary>
            Person level custom field
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CustomFieldScope.Coverage">
            <summary>
            Coverage level custom field
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DatabaseKind">
            <summary>
            What type of database is this?
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DatabaseKind.Transactional">
            <summary>
            The main database where data is read from and written to.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DatabaseKind.ReadOnlyReport">
            <summary>
            A reporting database that is updated periodically from the transactional database.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.ScriptableAttribute">
            <summary>
            Specifies the attributes of the script.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.ScriptableAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Attribute"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Selerix.Foundation.Data.AbstractEntityObject">
            <summary>
            Abstract Entity Object.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractEntityObject.ShouldSerializeID">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeID) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.LocalUpdateTime">
            <summary>
            DateTime when object was last updated. Used by synchronization
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractEntityObject.ShouldSerializeLocalUpdateTime">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeXmlAsOfDate) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.BySiteGuid">
            <summary>
            Gets or sets the by site GUID. Udentifier of site that updated object.
            </summary>
            <value>The by site GUID.</value>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractEntityObject.ShouldSerializeBySiteGuid">
            <summary>
            Shoulds the serialize by site GUID.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.Notes">
            <summary>
            Gets or sets the notes.
            </summary>
            <value>The notes.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractEntityObject.ShouldSerializeNotes">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeNotes) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractEntityObject.HasChildren">
            <summary>
            Determines whether this instance has children.
            </summary>
            <returns>
              <c>true</c> if this instance has children; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.EntityUserCount">
            <summary>
            Gets or sets the entity user count.
            </summary>
            <value>
            The entity user count.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.OwnerUserID">
            <summary>
            Gets or sets the owner user ID.
            </summary>
            <value>
            The owner user ID.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.OwnerFullName">
            <summary>
            Gets or sets the full name of the owner.
            </summary>
            <value>
            The full name of the owner.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractEntityObject.HideEntityFromView">
            <summary>
            Gets or sets a value indicating whether to hide entity from view.
            </summary>
            <value><c>true</c> if to hide entity from view; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Selerix.Foundation.Data.AbstractModelObject">
            <summary>
            Base implimentation of Mode l object.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.ID">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Override">
            <summary>
            Indicates this object will override the same object while storyline merging.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.MergingID">
            <summary>
            Gets the merging ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.MergePlace">
            <summary>
            Gets or sets the merge place.
            </summary>
            <value>
            The merge place.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Readonly">
            <summary>
            Gets or sets a value indicating whether this object is readonly.
            </summary>
            <value><c>true</c> if readonly; otherwise, <c>false</c>.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.UniqueID">
            <summary>
            Gets or sets the unique ID.
            </summary>
            <value>The unique ID.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.ShouldSerializeUniqueID">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeUniqueID) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.LockStatus">
            <summary>
            Read-only property on top-level object that
            indicates the lock state of the object.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.ShortName">
            <summary>
            Gets or sets the short name.
            </summary>
            <value>The short name.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.NameTextItem">
            <summary>
            Gets or sets the name text item.
            </summary>
            <value>The name text item.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.NameAttribute">
            <summary>
            Gets or sets the name attribute.
            </summary>
            <value>The name attribute.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Selerix.Foundation.Data.AbstractModelObject"/> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.Verified">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Selerix.Foundation.Data.AbstractModelObject"/> is verified.
            </summary>
            <value><c>true</c> if verified; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.AsOfDate">
            <summary>
            Date when object was last updated.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.XmlAsOfDate">
            <summary>
            Gets or sets the XML as of date.
            </summary>
            <value>The XML as of date.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.ShouldSerializeXmlAsOfDate">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeXmlAsOfDate) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.XmlAsOfDateTicks">
            <summary>
            Gets or sets the XML as of date.
            </summary>
            <value>The XML as of date.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.ShouldSerializeXmlAsOfDateTicks">
            <summary>
            Shoulds the serialize XML as of date ticks.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Selerix.Foundation.Data.AbstractModelObject.ExtEngineConfigs">
            <summary>
            Gets or sets the external engine configurations.
            </summary>
            <value>The external engine configs.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.ShouldSerializeID">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeID) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.ShouldSerializeExtEngineConfigs">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeExtEngineConfigs) that returns true or false. XML serialization enables an object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.GetConfig(System.String)">
            <summary>
            Gets the config.
            </summary>
            <param name="configID">The config ID.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.AbstractModelObject.UpgradeModel">
            <summary>
            Upgrades the model.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.BOXmlObservableItemAttribute">
            <summary>
            Attributes used by QXAdmin to indicate whether or not to include this class/property in xml tree.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.Type">
            <summary>
            Gets class/property type
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.Mask">
            <summary>
            Gets text mask for xml node.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.NodeName">
            <summary>
            Gets xml node name. Needed to find node in xml.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.Visible">
            <summary>
            Indicates whether this node should be visible in xml tree.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.Observable">
            <summary>
            Indicates whether or not this node has children.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlObservableItemAttribute.IsEmpty">
            <summary>
            Indicates this node is empty.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlObservableItemAttribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlObservableItemAttribute.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">Node Type</param>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlObservableItemAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.BOXmlObservableItemAttribute"/> class.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
            <param name="observable">if set to <c>true</c> [observable].</param>
            <param name="type">The type.</param>
            <param name="mask">The mask.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlObservableItemAttribute.#ctor(System.String,System.Boolean,System.Boolean,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.BOXmlObservableItemAttribute"/> class.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
            <param name="observable">if set to <c>true</c> [observable].</param>
            <param name="type">The type.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.BOXmlListObservableItemAttribute">
            <summary>
            Attributes used by QXAdmin to indicate whether or not to include this collection property in xml tree.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlListObservableItemAttribute.Mask">
            <summary>
            Gets text mask for xml node.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlListObservableItemAttribute.NodeName">
            <summary>
            Gets xml node name. Needed to find node in xml.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.BOXmlListObservableItemAttribute.Visible">
            <summary>
            Indicates whether or not this node should be visible in xml tree.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlListObservableItemAttribute.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.BOXmlListObservableItemAttribute"/> class.
            </summary>
            <param name="mask">The mask.</param>
            <param name="nodeName">Name of the node.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
        </member>
        <member name="M:Selerix.Foundation.Data.BOXmlListObservableItemAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.BOXmlListObservableItemAttribute"/> class.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
        </member>
        <member name="T:Selerix.Foundation.Data.DataObjectAttribute">
            <summary>
            Defines type of the data object in view/model/data architecture.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.DataObjectAttribute.Type">
            <summary>
            Data object in view/model/data architecture.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.DataObjectAttribute.TypeName">
            <summary>
            Data object name in view/model/data architecture.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataObjectAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.DataObjectAttribute"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.DataObjectAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.DataObjectAttribute"/> class.
            </summary>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.EntityCollection`1">
            <summary>
            Collection of entity objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.EntityCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.EntityCollection`1"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.EntityCollection`1"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="P:Selerix.Foundation.Data.EntityCollection`1.Item(System.Guid)">
            <summary>
            Gets the <see cref="T:Selerix.Foundation.Data.AbstractEntityObject"/> with the specified unique ID.
            </summary>
            <value></value>
        </member>
        <member name="P:Selerix.Foundation.Data.EntityCollection`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:Selerix.Foundation.Data.AbstractEntityObject"/> with the specified id.
            </summary>
            <value></value>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the range.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the attribute.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes all.
            </summary>
            <param name="match">The match.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.EntityCollection`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.EnumeratorManipulation">
            <summary>
            Class EnumeratorManipulation.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.#ctor">
            <summary>
            EnumeratorManipulation ctor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.EnumSortOrder(System.Enum)">
            <summary>
            Get the sort attribute of an emum
            </summary>
            <param name="value">enum to evaluate</param>
            <returns>Sort attribute value</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.GetEnumDescription(System.Enum)">
            <summary>
            Gets the enum description for value parameter of Enum.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.GetEnumDescription``1(``0)">
            <summary>
            Gets the enum description for value parameter of generic type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.GetEnumDescription``1(``0,``0)">
            <summary>
            Gets the enum description for value parameter of generic type or provides a default description.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="default">Default Value.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.GetEnumByDescription(System.Type,System.String,System.Boolean)">
            <summary>
            Gets the enum by provided description.
            </summary>
            <param name="enumType">The enumeration type.</param>
            <param name="description">The descritpion.</param>
            <param name="ignoreCase">Ignore case.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.GetEnumByDescription``1(System.String,System.Boolean)">
            <summary>
            Gets the enum by provided description.
            </summary>
            <typeparam name="T">The enumeration type.</typeparam>
            <param name="description">The descritpion.</param>
            <param name="ignoreCase">Ignore case.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumeratorManipulation.ProperSpace(System.String)">
            <summary>
            Propers the space.
            </summary>
            <param name="relationshipText">The relationship text.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Selerix.Foundation.Data.SortEnumComparer`1">
            <summary>
            Summary description for sort enum comparer
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Selerix.Foundation.Data.SortEnumComparer`1.GetSortedEnumList">
            <summary>
            Gets the sorted enum list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SortEnumComparer`1.Compare(`0,`0)">
            <summary>
            Compares the specified a.
            </summary>
            <param name="a">a.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Data.DataValidationException">
            <summary>
            Data validation exception.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataValidationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataValidationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Selerix.Foundation.Data.DataValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="T:Selerix.Foundation.Data.DataRequiredException">
            <summary>
            Data required exception
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataRequiredException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataRequiredException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Selerix.Foundation.Data.DataRequiredException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="T:Selerix.Foundation.Data.DataExistsException">
            <summary>
            Data already exists exception
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataExistsException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataExistsException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Selerix.Foundation.Data.DataExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="T:Selerix.Foundation.Data.DataMissingException">
            <summary>
            Data missing exception
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataMissingException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.DataMissingException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
        </member>
        <member name="M:Selerix.Foundation.Data.DataMissingException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Error message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="T:Selerix.Foundation.Data.RelatedType">
            <summary>
            Related type. Related ID in plugin configuration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.RelatedType.None">
            <summary>
            Plugin doesn't have related id defined
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.RelatedType.Employer">
            <summary>
            The employer
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.RelatedType.Broker">
            <summary>
            The broker
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.RelatedType.Payer">
            <summary>
            The payer
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.ExtEngineConfig">
            <summary>
            Configuration of vendor system.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.ExtEngineConfig.GetConfig">
            <summary>
            Return actual base config file.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ID">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.RelatedID">
            <summary>
            Gets or sets related id for check access to the associated entity.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.RelatedType">
            <summary>
            Gets or sets related type for filter.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtSponsor">
            <summary>
            Gets or sets the ext sponsor.
            </summary>
            <value>The ext sponsor.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtEngine">
            <summary>
            External engine name. Used for integration with foreign application.
            </summary>
            <value>The external engine.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtWebService">
            <summary>
            URL of external QX Web Service. Used for integration with Benefits-Selection.
            </summary>
            <value>The external web service.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtUser">
            <summary>
            User name for external QX Web Service.
            </summary>
            <value>The external user.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtPasswd">
            <summary>
            Password for external QX Web Service.
            </summary>
            <value>The external passwd.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtPortfolioID">
            <summary>
            Guid of external portfolio.
            </summary>
            <value>The ext portfolio ID.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ExtFileLocation">
            <summary>
            Virtual folder name to access external files such as forms, presentations, images.
            </summary>
            <value>The external file location.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ReturnUrl">
            <summary>
            Public accessors for the ReturnUrl property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.SAMLReturnUrl">
            <summary>
            Gets or sets the SAML return URL. URL that used to post SAML back to caller.
            </summary>
            <value>The SAML return URL.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.AddStatusToReturnUrl">
            <summary>
            Gets and sets the flag to add parameter 'status' to return Url.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.PassOnTheNameID">
            <summary>
            Gets and sets the passing the gotten NameID at login to output SAML response.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowHeaderAndFooter">
            <summary>
            Public accessors for the ShowHeaderAndFooter property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowTopMenu">
            <summary>
            Gets or sets the show top menu.
            </summary>
            <value>The show top menu.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowSidebar">
            <summary>
            Public accessors for the ShowSidebar property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowPersonalInfo">
            <summary>
            Public accessors for the ShowPersonalInfo property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowBenefitSnapshot">
            <summary>
            Public accessors for the ShowBenefitSnapshot property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.LandingPage">
            <summary>
            Gets or sets the landing page.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.KeepAliveUrl">
            <summary>
            Gets or sets keep alive url.
            </summary>
            <value>keep alive url.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.KeepAliveTimeout">
            <summary>
            Gets or sets keep alive timeout.
            </summary>
            <value>keep alive timeout.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.CensusAutoAddDepartments">
            <summary>
            Gets or sets whether census upload should auto add departments.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.SiteCSS">
            <summary>
            Gets or sets additional site css files.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowWelcome">
            <summary>
            Gets or sets the Welcome page. The Welcome page displays the currently selected case.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ShowReview">
            <summary>
            Gets or sets GetElementValue "Review."
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.FirstPlan">
            <summary>
            Gets or sets the first plan.
            </summary>
            <value>
            The first plan.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.EnrolleeSignaturePIN">
            <summary>
            Gets or sets the enrollee signature PIN.
            </summary>
            <value>
            The enrollee signature PIN.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.EnrollerSignaturePIN">
            <summary>
            Gets or sets the enroller signature PIN.
            </summary>
            <value>
            The enroller signature PIN.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.EnrollerID">
            <summary>
            Public accessors for the EnrollerID property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.EnrolleeID">
            <summary>
            Gets or sets the enrollee ID.
            </summary>
            <value>
            The enrollee ID.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.GroupNumber">
            <summary>
            Public accessors for the GroupNumber property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.SessionType">
            <summary>
            Public accessor for the SessionType property.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.BSTEngineID">
            <summary>
            Gets or sets the BST Engine ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.ImportData">
            <summary>
            Gets or sets the import data.
            </summary>
            <value>The import data.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.XmlImportData">
            <summary>
            Gets or sets the XML import data.
            </summary>
            <value>The XML import data.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.ExtEngineConfig.ShouldSerializeXmlImportData">
            <summary>
            A ShouldSerialize[Object] method (ShouldSerializeXmlImportData) that returns true or false. XML serialization enables an 
            object's public fields and properties to be saved and loaded to/from an XML file. Typically, XML serialization will be desired 
            for an object that is not null or empty and has a value such as a string object or a list object that is not null and has at least one element.
            </summary>
            <returns>bool true/false</returns>
        </member>
        <member name="F:Selerix.Foundation.Data.ExtEngineConfig.Attributes">
            <summary>
            Custom attributes
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.ExtEngineConfig.Elements">
            <summary>
            Gets or sets the custom elements.
            </summary>
            <value>The elements.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.ExtEngineConfig.SetValues(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the values.
            </summary>
            <param name="inputData">The input data.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.ExtEngineConfig.SetElementValue(System.String,System.String)">
            <summary>
            Sets the element value.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.ExtEngineConfig.GetElementValue(System.String)">
            <summary>
            Gets the element value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Data.HelpLink">
            <summary>
            Help link for JScript support.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.Data.HelpLink.HelpChapter">
            <summary>
            Help chapter.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.HelpLink.HelpChapterUrl">
            <summary>
            Link to help page.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.HelpLink.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.HelpLink"/> class.
            </summary>
            <param name="chapter">The chapter.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.IExcelFileConnection">
            <summary>
            Excel File Connection
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.ColCount">
            <summary>
            Returns the number of columns.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.CurrentTable">
            <summary>
            Gets the current table.
            </summary>
            <value>The current table.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.HasDuplicates">
            <summary>
            Gets a value indicating whether this instance has duplicates.
            </summary>
            <value><c>true</c> if this instance has duplicates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.HasHeader">
            <summary>
            Gets a value indicating whether this instance has header.
            </summary>
            <value><c>true</c> if this instance has header; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.HeaderRow">
            <summary>
            Gets the header row.
            </summary>
            <value>The header row.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.ImportType">
            <summary>
            Gets the type of the import.
            </summary>
            <value>The type of the import.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.AddRow(System.Int32,System.Object[])">
            <summary>
            Adds the row.
            </summary>
            <param name="rowIndex">Index of the row.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.DeleteMarkedRows">
            <summary>
            Deletes the marked rows.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.DeleteSheet(System.String)">
            <summary>
            Deletes the sheet.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsDate(System.Int32,System.Int32)">
            <summary>
            Gets the cell value as date.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.Cells(System.Int32,System.Int32)">
            <summary>
            Gets the cell value directly, ignoring column headings.
            </summary>
            <param name="columnIndex">Data column starting with 1.</param>
            <param name="rowIndex">Data row starting with 1.</param>
            <returns>Returns the value in the cell.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsDate(System.String,System.Int32)">
            <summary>
            Gets the cell value as date.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsDecimal(System.Int32,System.Int32)">
            <summary>
            Gets the cell value as decimal.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;System.Decimal&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsDecimal(System.String,System.Int32)">
            <summary>
            Gets the cell value as decimal.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;System.Decimal&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsInt(System.Int32,System.Int32)">
            <summary>
            Gets the cell value as int.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsInt(System.String,System.Int32)">
            <summary>
            Gets the cell value as int.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.Nullable&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsString(System.Int32,System.Int32)">
            <summary>
            Gets the cell value as string.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetCellValueAsString(System.String,System.Int32)">
            <summary>
            Gets the cell value as string.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetNormolizedColumnsIndexes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the normolized columns indexes.
            </summary>
            <param name="columns">The columns.</param>
            <returns>System.Int32[].</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.GetTables">
            <summary>
            Gets the tables.
            </summary>
            <returns>List&lt;System.String&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.MarkRowForDeletion(System.Int32)">
            <summary>
            Marks the row for deletion.
            </summary>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.Save(System.String,Selerix.Foundation.Data.ReportOutputFormat)">
            <summary>
            Saves this instance to <paramref name="fileName"/> as <paramref name="fileFormat"/>
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.SelectFirstSheet">
            <summary>
            Selects the first sheet.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.SetCellValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the cell value.
            </summary>
            <param name="columnIndex">Index of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.SetCellValue(System.String,System.Int32,System.Object)">
            <summary>
            Sets the cell value.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.SetCurrentTable(System.String,System.Int32,System.Boolean)">
            <summary>
            Sets the current table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="headerRow">The header row.</param>
            <param name="hasHeader">if set to <c>true</c> [has header].</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.UpdateSheet(System.String,System.Data.DataTable)">
            <summary>
            Updates the sheet.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.UpdateSheet(System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            Updates the sheet.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="data">The data.</param>
            <param name="byColNames">if set to <c>true</c> [by col names].</param>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.UpdateSheet(System.String,System.Data.DataTable,System.Boolean,System.Boolean)">
            <summary>
            Updates the sheet.
            </summary>
            <param name="sheetName">Name of the sheet.</param>
            <param name="data">The data.</param>
            <param name="byColNames">if set to <c>true</c> [by col names].</param>
            <param name="clearUnused">if set to <c>true</c> [clear unused].</param>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.HightlightErrantRow">
            <summary>
            Gets or sets whether to hightlight errant rows.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IExcelFileConnection.ErrantColumnName">
            <summary>
            Gets or sets the errant column to check for a value.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IExcelFileConnection.AutoFitColumnWidth">
            <summary>
            Auto fit column with for the file.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.IFactoryObject">
            <summary>
            Factory object. Base class for all objects managed by the object factory.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IFactoryObject.PK">
            <summary>
            Gets or sets the PK.
            </summary>
            <value>The PK.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IFactoryObject.AsOfDate">
            <summary>
            Gets or sets the as of date. Date when object was last time updated.
            </summary>
            <value>As of date.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.IFactoryObject.ToModel">
            <summary>
            Creates model object based on database object
            </summary>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Data.IModelObject">
            <summary>
            Model object interface.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IModelObject.AsOfDate">
            <summary>
            Gets as of date.
            </summary>
            <value>As of date.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IModelObject.ExtEngineConfigs">
            <summary>
            Gets the ext engine configs.
            </summary>
            <value>The ext engine configs.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IModelObject.Verified">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Selerix.Foundation.Data.IModelObject"/> is verified.
            </summary>
            <value><c>true</c> if verified; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IModelObject.Readonly">
            <summary>
            Gets a value indicating whether this <see cref="T:Selerix.Foundation.Data.IModelObject"/> is readonly.
            </summary>
            <value><c>true</c> if readonly; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IModelObject.Deleted">
            <summary>
            Gets a value indicating whether this <see cref="T:Selerix.Foundation.Data.IModelObject"/> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.IModelObject.UpgradeModel">
            <summary>
            Upgrades the model.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.ImportType">
            <summary>
            Enum ImportType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ImportType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ImportType.Access">
            <summary>
            The access
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ImportType.Excel">
            <summary>
            The excel
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ImportType.Txt">
            <summary>
            The text
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.IOwnable">
            <summary>
            Interface that defines ownership functionality of the object.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IOwnable.UniqueID">
            <summary>
            Gets or sets the unique ID.
            </summary>
            <value>The unique ID.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.IOwnable.Owner">
            <summary>
            Gets or sets owner of object.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.IsoLanguageCodeAttribute">
            <summary>
            Attribute used to designate a ISO coding for language 
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.IsoLanguageCodeAttribute.Code">
            <summary>
            Language-Country code (e.g. "en-US")
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.IsoLanguageCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.IsoLanguageCodeAttribute"/> class.
            </summary>
            <param name="code">Language-Country code</param>
        </member>
        <member name="T:Selerix.Foundation.Data.KeyValuePairList`2">
            <summary>
            Define template for list of key-value pair
            </summary>
            <typeparam name="TKey">type of key</typeparam>
            <typeparam name="TValue">type of key</typeparam>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList`2.#ctor">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;TKey, TValue&gt; class that
            is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;TKey, TValue&gt; class that
            is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;TKey, TValue&gt; class that
            contains elements copied from the specified collection and has sufficient capacity
            to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.KeyValuePairList">
            <summary>
            Specialized class KeyValuePairList &lt;string, string&gt;
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList.#ctor">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;string, string&gt; class that
            is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;string, string&gt; class that
            is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.KeyValuePairList.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initializes a new instance of the KeyValuePairList &lt;string, string&gt; class that
            contains elements copied from the specified collection and has sufficient capacity
            to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.LanguageCountryAttribute">
            <summary>
            Attribute used to designate a related Language Country
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.LanguageCountryAttribute.Language">
            <summary>
            Language code (e.g. "en")
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.LanguageCountryAttribute.Country">
            <summary>
            Country code (e.g. "US")
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.LanguageCountryAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.LanguageCountryAttribute"/> class.
            </summary>
            <param name="language">Language code</param>
            <param name="country">Country code</param>
        </member>
        <member name="T:Selerix.Foundation.Data.Levenshtein">
            <summary>
            Class that helps calculate difference between two strings
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Levenshtein.CalcEditDistance(System.String,System.String)">
            <summary>
            Compute Levenshtein distance. 
            http://www.merriampark.com/ld.htm
            </summary>
            <returns>Distance between the two strings.
            The larger the number, the bigger the difference.
            </returns>
        </member>
        <member name="T:Selerix.Foundation.Data.NameValuePair">
            <summary>
            Name/Value entity
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.NameValuePair.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.NameValuePair.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.NameValuePair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.NameValuePair"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.NameValuePair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.NameValuePair"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.NameObjectPair">
            <summary>
            Name/Value entity
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.NameObjectPair.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.NameObjectPair.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.NameObjectPair.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.NameValuePair"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.NameObjectPair.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.NameValuePair"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.BaseEntityType">
            <summary>
            Base entity type of standart note
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.BaseEntityType.Portfolio">
            <summary>
            The portfolio
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.BaseEntityType.Offering">
            <summary>
            The offering
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.BaseEntityType.Product">
            <summary>
            The product
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.BaseEntityType.OfferingProduct">
            <summary>
            The offering product
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.SubjectType">
            <summary>
            Subject type enum of a standard note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Broker">
            <summary>
            Broker note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.CustomFieldInfo">
            <summary>
            Custom field note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.EDIParameters">
            <summary>
            EDI parameters note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.EligibilityRule">
            <summary>
            Eligibility rule note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.EnrollmentRule">
            <summary>
            Enrollment rule note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.JobClass">
            <summary>
            JobClass note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Location">
            <summary>
            Location note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Offering">
            <summary>
            Offering note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.OfferingProduct">
            <summary>
            Offering product note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Payer">
            <summary>
            Payer note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.PayGroup">
            <summary>
            Pay group note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.PayrollProvider">
            <summary>
            Payroll provider note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Presentation">
            <summary>
            Presentation note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Product">
            <summary>
            Product note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Question">
            <summary>
            Question note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Region">
            <summary>
            Region note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Tier">
            <summary>
            Tier note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Portfolio">
            <summary>
            Portfolio.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.GeneralRules">
            <summary>
            General rules.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.SubjectType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.Note">
            <summary>
            Specifies the attributes of a note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Note.SubjectType">
            <summary>
            Subject of the note.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Note.NoteText">
            <summary>
            Text of the note.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.Note.EnrollerID">
            <summary>
            Gets or sets the enroller ID.
            </summary>
            <value>The enroller ID</value>
        </member>
        <member name="T:Selerix.Foundation.Data.NoteCollection">
            <summary>
            Creates a collection of notes.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.NoteCollection.Item(Selerix.Foundation.Data.SubjectType)">
            <summary>
            Gets the <see cref="T:Selerix.Foundation.Data.Note"/> with the specified subject type.
            </summary>
            <value></value>
        </member>
        <member name="T:Selerix.Foundation.Data.PersistentStoreAttribute">
            <summary>
            Describes how an Entity should be persisted into a secondary Persistent Store.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.IdentityTableName">
            <summary>
            Gets or sets an identity table name in case when separate identity table should be used for the target Entity.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.UseParentUID">
            <summary>
            Gets a value indicating whether a parent Unique Identity value should be used by Persistent Store for the given Entity.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.UseParentID">
            <summary>
            Gets a value indicating whether a parent Identity value should be used by Persistent Store for the given Entity.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.ParentReferencePropertyName">
            <summary>
            Gets or sets a property name of the target Entity which could be used for parent entity determination.
            <para>This one parent of many possible parents typically used only for collision resolution.</para>
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.ParentUIDPropertyName">
            <summary>
            Gets or sets a name of UID property of the parent Entity which should be used by Persistent Store.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.StoreCollectionInOneDocument">
            <summary>
            Gets or sets a value indicating whether a collection of Entities belonging to the same parent should be stored into one document or not.
            <para>
            Setting this property into <c>true</c> would take an effect only when the <see cref="P:Selerix.Foundation.Data.PersistentStoreAttribute.ParentReferencePropertyName"/> property is set.
            </para>
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.StoreCollectionInParentDocument">
            <summary>
            Gets or sets a value indicating whether a collection of Entities belonging to the same parent should be stored into parent document or not.
            <para>
            Setting this property into <c>true</c> allowed when the <see cref="P:Selerix.Foundation.Data.PersistentStoreAttribute.ParentReferencePropertyName"/> property 
            is set and parent Entity also marked with <see cref="T:Selerix.Foundation.Data.PersistentStoreAttribute"/>.
            Otherwise an Exception will be thrown by the engine.
            </para>
            <para>
            When property set to <c>true</c> value of <see cref="P:Selerix.Foundation.Data.PersistentStoreAttribute.StoreCollectionInOneDocument"/> property will be ignored.
            </para>
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentStoreAttribute.DoNotCheckPrimaryStorageOnLoad">
            <summary>
            Skip cheking primary storage for entity before trying to load in from external storage.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.PersistentPropertyAttribute">
            <summary>
            Indicates that a property marked with this attribute would be used for unmapped property persistence.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.PersistentPropertyAttribute.ValueProperty">
            <summary>
            Gets or sets the target unmapped proeprty name.
            <para>
            A value of the target property would be retreivend and stored to the persistance store
            during the each 'Insert' or 'Update' operations as dirty value.
            </para>
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.Initializable`1">
            <summary>
            The same as <see cref="T:System.Nullable`1"/> but for classes.
            <para>
            We are not alone: https://github.com/dotnet/roslyn/issues/5032 
            </para>
            </summary>
            <typeparam name="T">Any class.</typeparam>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.Initializable`1"/> struct to the specified value.
            </summary>
            <param name="value">A value.</param>
        </member>
        <member name="P:Selerix.Foundation.Data.Initializable`1.HasValue">
            <summary>
            Gets a value indicating whether the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object has a valid value of its underlying type.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.Initializable`1.Value">
            <summary>
             Gets the value of the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object if it has been assigned a valid underlying value.
            </summary>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>false</c>.</exception>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.Equals(System.Object)">
            <summary>
            Indicates whether the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object is equal to a specified object.
            </summary>
            <param name="other">An other object</param>
            <returns>
            <c>true</c> if the other parameter is equal to the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.GetHashCode">
            <summary>
            Retrieves the hash code of the object returned by the <see cref="P:Selerix.Foundation.Data.Initializable`1.Value"/> property.
            </summary>
            <returns>
            The hash code of the object returned by the <see cref="P:Selerix.Foundation.Data.Initializable`1.Value"/> property
            if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>true</c>, or zero if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.GetValueOrDefault">
            <summary>
            Retrieves the value of the current System.Nullable`1 object, or the object's default value.
            </summary>
            <returns>A value.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.GetValueOrDefault(`0)">
            <summary>
            Retrieves the value of the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object, or the specified default value.
            </summary>
            <param name="defaultValue">A value to return if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>false</c>.</param>
            <returns>
            The value of <see cref="P:Selerix.Foundation.Data.Initializable`1.Value"/> property if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/>property is <c>true</c>; 
            otherwise, the <paramref name="defaultValue"/> parameter value.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.ToString">
            <summary>
            Returns the text representation of the value of the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object.
            </summary>
            <returns>
            The text representation of the value of the current <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object
            if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>true</c>, or an empty string ("") if the <see cref="P:Selerix.Foundation.Data.Initializable`1.HasValue"/> property is <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.op_Implicit(`0)~Selerix.Foundation.Data.Initializable{`0}">
            <summary>
            Creates a new <see cref="T:Selerix.Foundation.Data.Initializable`1"/> object initialized to a specified value.
            </summary>
            <param name="value">A value.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Initializable`1.op_Explicit(Selerix.Foundation.Data.Initializable{`0})~`0">
            <summary>
            Returns the value of a specified <see cref="T:Selerix.Foundation.Data.Initializable`1"/> value.
            </summary>
            <param name="value">A initializable value.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.ReportOutputFormat">
            <summary>
            ReportOutputFormat Enum.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.PDF">
            <summary>
            PDF
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.XML">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.CSV">
            <summary>
            CSV
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.HTML">
            <summary>
            HTML
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.RTF">
            <summary>
            RTF
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.TXT">
            <summary>
            TXT
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.EXCEL">
            <summary>
            EXCEL
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.ReportOutputFormat.CUSTOM">
            <summary>
            CUSTOM
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.SafeDictionary`2">
            <summary>
            Dictionary that doesn't throw exception if item doesn't exists in [] access. Acts like Hashtable
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.SafeDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <returns>
            The value associated with the specified key. If the specified key is not found, a get operation throws 
            a <see cref="T:System.Collections.Generic.KeyNotFoundException"/>, and a set operation creates a new element with the specified key.
              </returns>
              
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/> is null.
              </exception>
              
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The property is retrieved and <paramref name="key"/> does not exist in the collection.
              </exception>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SafeDictionary`2.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:Selerix.Foundation.Data.SafeDictionary`2"/> contains the specified key. Acts like Hashtable.
            </summary>
            <param name="key">The key to locate in the <see cref="T:Selerix.Foundation.Data.SafeDictionary`2"/>.</param>
            <returns><code>true</code> if the <see cref="T:Selerix.Foundation.Data.SafeDictionary`2"/> contains an element with the specified key; otherwise, <code>false</code>.</returns>
        </member>
        <member name="T:Selerix.Foundation.Data.SerializableDictionary">
            <summary>
            Serializable version of Dictionary
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.SerializableDictionary.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.SerializableDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializableDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.SerializableDictionary"/> class.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.SerializationHelper">
            <summary>
            Helps to deserialize object from xml file or stream;
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.SerializationHelper.Log">
            <summary>
            Gets the log.
            </summary>
            <value>The log.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.Serialize(System.Object)">
            <summary>
            Serializes the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.GetXmlSerializer(System.Type)">
            <summary>
            Gets the XML serializer.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes the specified reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.DeserializeFromString(System.String,System.Type)">
            <summary>
            Deserializes from string.
            </summary>
            <param name="xml">The XML.</param>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.CreateShadowCopy(System.Object)">
            <summary>
            Creates the shadow copy of the object.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.CreateShadowCopy``1(``0)">
            <summary>
            Creates the shadow copy of the object.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.CreateShadowCopyAsType(System.Object,System.Type)">
            <summary>
            Creates the type of the shadow copy as.
            </summary>
            <param name="data">The data.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.SerializeToString(System.Object)">
            <summary>
            Serializes to string.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.SerializeToString(System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
            <summary>
            Serializes to string.
            </summary>
            <param name="data">The data.</param>
            <param name="ns">The ns.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.SerializeToZipString(System.Object)">
            <summary>
            Serializes to zip string.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.DeserializeFromZipString(System.String,System.Type)">
            <summary>
            Deserializes from zip string.
            </summary>
            <param name="data">The data.</param>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.DeserializeFromZipStream(System.IO.Stream,System.Type)">
            <summary>
            Deserializes from zip stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="objectType">Type of the object.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.SerializeToZipStream(System.IO.Stream,System.Object)">
            <summary>
            Serializes to zip stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.ReadTypedObject(System.Xml.XmlReader)">
            <summary>
            Reads the typed object.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SerializationHelper.WriteTypedObject(System.Xml.XmlWriter,System.Xml.Serialization.IXmlSerializable)">
            <summary>
            Writes the typed object.
            </summary>
            <param name="writer">The writer.</param>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.SmartList`1">
            <summary>
            List of objects that has speed optimized methods then IList
            </summary>
            <typeparam name="T"></typeparam>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.GetEqualityComparer">
            <summary>
            Gets the equality comparer.
            </summary>
            <returns>IEqualityComparer{`0}.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.SmartList`1" /> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.SmartList`1" /> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.SmartList`1" /> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="P:Selerix.Foundation.Data.SmartList`1.Count">
            <summary>
            Gets the count.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.SmartList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read-only.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.SmartList`1.Item(System.Int32)">
            <summary>
            Gets or sets the item of list at the specified index.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the range.
            </summary>
            <param name="collection">The collection.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns><c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the attribute.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.RemoveRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Remove list of items
            </summary>
            <param name="indexes">Sorted list of indexes.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.RemoveAll(System.Predicate{`0})">
            <summary>
            Removes all.
            </summary>
            <param name="match">The match.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Find(System.Predicate{`0})">
            <summary>
            Finds the specified match.
            </summary>
            <param name="match">The match.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.FindAll(System.Predicate{`0})">
            <summary>
            Finds all.
            </summary>
            <param name="match">The match.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Exists(System.Predicate{`0})">
            <summary>
            Existses the specified match.
            </summary>
            <param name="match">The match.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets the range.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the specified comparer.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the specified comparison.
            </summary>
            <param name="comparison">The comparison.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.IndexOf(`0)">
            <summary>
            Indexes the of.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.UpdateIndexOf">
            <summary>
            Updates the index of.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.UpdateIndexOf(`0)">
            <summary>
            Updates the index of.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.SmartList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the System.Collections.Generic.ICollection`1 to an list, starting at a particular list index.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="T:Selerix.Foundation.Data.TextFieldDefinition">
            <summary>
            Text file field info
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.TextFieldDefinition.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.TextFieldDefinition.ColumnLength">
            <summary>
            Gets or sets the length of the column.
            </summary>
            <value>The length of the column.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.Data.TextFieldDefinition.StartPosition">
            <summary>
            Gets or sets the start position.
            </summary>
            <value>The start position.</value>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.TextFieldDefinition.#ctor">
            <summary>
            for serialization ONLY!
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.TextFieldDefinition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.TextFieldDefinition"/> class.
            </summary>
            <param name="columnName">Name of the column.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.TextFieldDefinition.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.TextFieldDefinition"/> class.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="startPosition">The start position.</param>
            <param name="length">The length.</param>
            <remarks></remarks>
        </member>
        <member name="T:Selerix.Foundation.Data.TextFileType">
            <summary>
            Text file type
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.Data.TextFileType.Delimited">
            <summary>
            Delimeted values, like CSV
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.TextFileType.FixedWidth">
            <summary>
            Fixed width text file
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.TextItem">
            <summary>
            The TextItem class specifies the attributes of a text item.
            </summary>
            <remarks/>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.PK">
            <summary>
            Gets or sets the PK.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.MergingID">
            <summary>
            Gets the merging ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.TextModeID">
            <summary>
            Gets or sets the text mode ID.
            </summary>
            <value>The text mode ID.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.Language">
            <summary>
            Gets or sets the language specific question.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItem.Portal">
            <summary>
            Gets or sets the portal text bank is defined for.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.TextItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Data.TextItem"/> class.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.TextItemCollection">
            <summary>
            Creates a list of text items.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Data.TextItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Selerix.Foundation.Data.TextItem"/> with the specified text ID.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.TextItemCollection.GetTextItem(Selerix.Foundation.Languages,Selerix.Foundation.Enumerations.Portal,System.String)">
            <summary>
            Gets the text item.
            </summary>
            <param name="language">The language.</param>
            <param name="portalId">The portal id.</param>
            <param name="textID">The text ID.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.TextItemCollection.Add(Selerix.Foundation.Data.TextItem)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Selerix.Foundation.Data.TextQualifier">
            <summary>
            TextQualifier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.TextQualifier.DoubleQuote">
            <summary>
            Double quote
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.TextQualifier.SingleQuote">
            <summary>
            Single quote
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.TextQualifier.None">
            <summary>
            FixedLength
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Data.TokenHelper">
            <summary>
            Summary description for TokenHelper.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.TokenHelper.ReplaceField(System.String,System.String,System.Object)">
            <summary>
            Replaces the field.
            </summary>
            <param name="description">The description.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="val">The value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.TokenHelper.ReplaceField(System.String,System.String,System.Func{System.String})">
            <summary>
            Replaces the field.
            </summary>
            <param name="description">The description.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="valueDelegate">The value delegate.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.TokenHelper.CleanUp(System.String)">
            <summary>
            Cleans up.
            </summary>
            <param name="description">The description.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Selerix.Foundation.Data.Utils">
            <summary>
            Collection of some useful stuff - conversion utilities, formatting, error messages.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.EmptyString">
            <summary>
            Placeholder for empty string
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.PASSWORD_REPLACE_TEXT">
            <summary>
            Passwords are replaced with this when output to client's browser.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.STREAM_BUFFER_SIZE">
            <summary>
            Default <see cref="T:System.IO.Stream"/> buffer size.
            <para>Typically could be used with such a .Net classes as <see cref="T:System.IO.StreamWriter"/> or <see cref="T:System.IO.StreamReader"/>.</para>
            <para>
            For other purposes please use <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)"/> 
            and <see cref="M:System.IO.MemoryStream.#ctor"/> instead, if possible.
            </para>
            <para>For more information please see 
            https://referencesource.microsoft.com/#mscorlib/system/io/stream.cs
            </para>
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.CENSUS_FILE_BUFFER_SIZE">
            <summary>
            File stream buffer size for Census upload
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.PHONE_LENGTH">
            <summary>
            Phone number length
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.PHONE_AREA_CODE_LENGTH">
            <summary>
            Phone number length
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.SSN_LENGTH">
            <summary>
            SSN length
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.EIN_LENGTH">
            <summary>
            EIN length
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Min(System.DateTime,System.DateTime)">
            <summary>
            Return min of two datetimes
            </summary>
            <param name="baseDateTime"></param>
            <param name="comparedTo"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Max(System.DateTime,System.DateTime)">
            <summary>
            Return the max of two datetimes
            </summary>
            <param name="baseDateTime"></param>
            <param name="comparedTo"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GenerateTicketNumber">
            <summary>
            Generates new ticket number which can be used for error reporting.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetNewId">
            <summary>
            Generates new integer id.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetDeterministicGuid(System.String)">
            <summary>
            Gets the deterministic GUID.
            </summary>
            <param name="source">The source.</param>
            <returns>hash GUID</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.RelationshipFromLegalStatus(Selerix.Foundation.LegalStatus)">
            <summary>
            The RelationshipFromLegalStatus object specifies the legal status of the applicant's beneficiaries.
            </summary>
            <param name="legalStatus">The legal status.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetExceptionDetails(System.Exception,System.Boolean,System.Collections.Generic.IList{System.Type},System.String)">
            <summary>Gets the stack trace.</summary>
            <param name="exception">The exception.</param>
            <param name="addStackTrace">if set to <c>true</c> [add stack trace].</param>
            <param name="types">The types.</param>
            <param name="delimeter">The delimeter.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.AddIfNew``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Add key-value pair to dictionary if key does not exist
            </summary>
            <typeparam name="TKey">key Type</typeparam>
            <typeparam name="TValue">value Type</typeparam>
            <param name="dictionary">dictionary to add the key-value pair</param>
            <param name="key">dictionary key</param>
            <param name="value">dictionary value</param>
            <returns>resulting dictionary</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Add/update key-value pair to dictionary
            </summary>
            <typeparam name="TKey">key Type</typeparam>
            <typeparam name="TValue">value Type</typeparam>
            <param name="dictionary">dictionary to add/update the key-value pair</param>
            <param name="key">dictionary key</param>
            <param name="value">dictionary value</param>
            <returns>resulting dictionary</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonAlpha(System.String)">
            <summary>
            Deletes all non alpha chars from string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonAlphaNum(System.String)">
            <summary>
            Deletes all non alpha-num chars from string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonAlphaNumWhitespace(System.String)">
            <summary>
            Deletes all non alpha-num-whitespace chars from string.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonAlphaNumWhitespace(System.String,System.String)">
            <summary>
            Deletes all non alpha-num-whitespace chars from string.
            </summary>
            <param name="text">String that may contain non alpha-num-whitespace characters</param>
            <param name="strExcept">Allow these characters to be included even if they're non-numeric</param>
            <returns>String containing only the alpha-num-whitespace characters from
            the input string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonNumerics(System.String)">
            <summary>
            Utility function that removes all non-numeric characters from 
            a string and returns just the numbers.  This is used when
            storing SSN's, ZIP Codes, etc.
            </summary>
            <param name="strIN">String that may contain non-numeric characters</param>
            <returns>String containing only the numeric characters from
            the input string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonNumerics(System.String,System.String)">
            <summary>
            Utility function that removes all non-numeric characters from 
            a string and returns just the numbers.  This is used when
            storing SSN's, ZIP Codes, etc.
            </summary>
            <param name="strIN">String that may contain non-numeric characters</param>
            <param name="strExcept">Allow these characters to be included even if they're non-numeric</param>
            <returns>String containing only the numeric characters from
            the input string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonNumericWithinLength(System.String,System.Int32,System.Int32@)">
            <summary>
            Utility function that removes all non numeric from input string
            and returns result. Also check length of result and if it bigger than withingLength, returns  
            position of last character from result in input string.
            Used for check max length of SSN\ZIP\PHONE 
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <param name="withingLength">Max length of result</param>
            <param name="checkedLength">Position of the last checked character from input</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripControlChars(System.String)">
            <summary>
            Utility function that removes all control characters from string
            and returns result.
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonPrintableChars(System.String)">
            <summary>
            Utility function that removes all control and whitespace characters from string
            and returns result.
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripInvalidFileNameChars(System.String)">
            <summary>
            Utility function that removes all characters that are not allowed in file names from string
            and returns result.
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripInvalidPathChars(System.String)">
            <summary>
            Utility function that removes all characters that are not allowed in path names from string
            and returns result.
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsPrintableAsciiChar(System.Char)">
            <summary>
            Is this char a printable, ASCII char?
            </summary>
            <param name="c">char to test</param>
            <returns>true if printable ASCII char</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DefaultIfNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Set default value if string is null or whitespace
            </summary>
            <param name="inString"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripNonPrintableAsciiCharacters(System.String)">
            <summary>
            This will strip all chars not in the \u0020 to \u007E range like is
            required for RFC2822 mail headers
            </summary>
            <param name="inString">input string</param>
            <returns>string with only printable ASCII chars</returns>
        </member>
        <member name="T:Selerix.Foundation.Data.Utils.VerificatorDelegate">
            <summary>
            Use this delegate to define filter to strip character. It run for each <paramref name="ch"/>
            if delegate return false, the <paramref name="ch"/> erase from result
            </summary>
            <param name="ch">char to verify</param>
            <returns>true if <paramref name="ch"/> is allowed</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.StripChars(System.String,Selerix.Foundation.Data.Utils.VerificatorDelegate,System.Nullable{System.Int32},System.Int32@)">
            <summary>
            Utility function that removes all characters from string which do not satisfy <paramref name="isValidCharFunc"/> filter
            and length of result has to be limited by <paramref name="maxResultLength"/>.
            </summary>
            <param name="strIN">String that may contain characters that should be ignored</param>
            <param name="isValidCharFunc">filter delegate. call for each character. if it returns false then character is discarded</param>
            <param name="maxResultLength">This is nullable. Max length of result. If it is null then do not strip result</param>
            <param name="checkedLength">Position of the last checked character from input</param>
            <returns>Result string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ReplaceNonAlphaNum(System.String,System.String)">
            <summary>
            Replaces all non alpha-num chars from string with new string.
            </summary>
            <param name="text">The string.</param>
            <param name="replacement">The replacement string.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ListToXmlString(System.Collections.IList,System.String,System.String)">
            <summary>
            Lists to XML string.
            </summary>
            <param name="list">The list.</param>
            <param name="rootElementName">Name of the root element.</param>
            <param name="itemElementName">Name of the item element.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeIdentifier(System.String)">
            <summary>
            Utility function that removes all non-alphanumeric characters from
            a string and returns just the numbers and letters, permits underscore, and prepends with
            underscore if the identifier starts with a number.  This is used for converting
            text valid XML tags, for example.
            </summary>
            <param name="stringIN">The string IN.</param>
            <returns>String containing only the alphanumeric characters and underscores from
            the input string</returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeXmlIdentifier(System.String)">
            <summary>
            Utility function that removes all non-alphanumeric and '.', ':', '-', '_' characters from
            a string and returns just the numbers, letters and this spec characters,
            Prepends with underscore if the identifier starts with a number or '.' or'-'.
            This is used for converting text valid XML tags and attributes.
            </summary>
            <param name="stringIN">The string IN.</param>
            <returns>String containing only the alphanumeric characters and underscores from
            the input string</returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.BytesToHexString(System.Byte[])">
            <summary>
            Convert bytes to string of hex codes.
            </summary>
            <param name="data">data to convert</param>
            <returns>hex codes</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.EncodeBase64URLSafeString(System.Byte[])">
            <summary>
            Encodes binary data using a URL-safe variation of the base64 algorithm but does not chunk the output.
            The url-safe variation emits - and _ instead of + and / characters.
            </summary>
            <param name="toEncode"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Trim(System.String)">
            <summary>
            Trim string
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.LeftStr(System.String,System.Int32)">
            <summary>
            Lefts the string. Trims string to specified lenght
            </summary>
            <param name="str">string</param>
            <param name="len">lenght</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.LeftStr(System.Object,System.Int32)">
            <summary>
            Get ToString() for <paramref name="obj"/> and truncate to specific length. For null object return <code>String.Emplty</code>
            </summary>
            <param name="obj"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CompareIgnoreNulls(System.String,System.String)">
            <summary>
            Compares two strings and returns true if they are the same. For the comparison, nulls and empty strings are treated as equal and leading and trailing spaces are ignored. 
            </summary>
            <param name="str1"></param>
            <param name="str2"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Collate(System.String[])">
            <summary>
            Return the first string that is not null or whitespace
            </summary>
            <param name="values">array of strings</param>
            <returns>first string not null or whitespace</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FirstIntergerValueIfPiped(System.String)">
            <summary>
            Find first integer-like value in <paramref name="option"/> string and return its string representation
            </summary>
            <param name="option">string contains parts joined by '|' character</param>
            <returns>string with found integer value or <paramref name="option"/> otherwise</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MailHeaderSafeString(System.String)">
            <summary>
            Create a string which is RFC2822 Header Compliant
            </summary>
            <param name="text">input string</param>
            <returns>RFC2822 Header Compliant string</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.RemoveDiacritics(System.String)">
            <summary>
            Replaces characters like u with umlaut to u and unmappable chars like Cyrillic chars to ?
            </summary>
            <param name="text">input string</param>
            <returns>string with diacritical marks removed</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CompareToPolicyNumber(System.String,System.String)">
            <summary>
            Compare policy number to provided pattern. Comparing to null means match to any policy number.
            </summary>
            <param name="policyNumber">Policy number we compare.</param>
            <param name="pattern">Pattern we compare policy number to.</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            Does the string body contain the string value, ignoring case
            </summary>
            <param name="body">The main string to check its contents</param>
            <param name="value">Does this value exist in the body string</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ParseMaritalStatus(System.String)">
            <summary>
            Parse MaritalStatus from a string
            </summary>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsGuid(System.String)">
            <summary>
            Determines whether the specified GUID string is GUID.
            </summary>
            <param name="guidString">The GUID string.</param>
            <returns>
              <c>true</c> if the specified GUID string is GUID; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeSSN(System.String,System.Boolean)">
            <summary>
            Checks that SSN has the right format.
            </summary>
            <param name="ssn">ssn</param>
            <param name="doNotCheck">do not check test ssn</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CheckSSN(System.String,Selerix.Foundation.LegalStatus)">
            <summary>
            Checks the SSN.
            </summary>
            <param name="strSSN">The social security number.</param>
            <param name="legalStatus">Legal status.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CheckSSN(System.String,Selerix.Foundation.CaseType,Selerix.Foundation.LegalStatus)">
            <summary>
            Checks the SSN
            </summary>
            <param name="strSSN">The social security number.</param>
            <param name="caseType">Case type.</param>
            <param name="legalStatus">Legal status.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeSSN(System.String)">
            <summary>
            Normalizes the SSN.
            </summary>
            <param name="ssn">The SSN.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatSSN(System.String)">
            <summary>
            Formats SSN as ###-##-####
            </summary>
            <param name="strSSN">unformatted SSN</param>
            <returns>formatted SSN</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MaskSSN(System.String)">
            <summary>
            Returns masked SSN
            </summary>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeEIN(System.String)">
            <summary>
            Normalizes the EIN.
            </summary>
            <param name="strEIN">The EIN.</param>
            <returns>normilized EIN</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatEIN(System.String)">
            <summary>
            Formats EIN as ##-#######
            </summary>
            <param name="strEIN">unformatted EIN</param>
            <returns>formatted EIN</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatPhone(System.String)">
            <summary>
            Takes in a phone number as stored in the database 
            and returns the  string to be displayed to the user.
            </summary>
            <param name="phone">Phone Number without punctuation</param>
            <returns>Displayable form for the Phone Number</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatPhone(System.String,System.String)">
            <summary>
            Takes in a phone number as stored in the database 
            and returns the  string to be displayed to the user.
            </summary>
            <param name="phone">Phone Number without punctuation</param>
            <param name="extension">Abbreviation for phone extension</param>
            <returns>Displayable form for the Phone Number</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetPhoneParts(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Splits phone in parts and returns those parts.
            </summary>
            <param name="phone">Phone number</param>
            <param name="countryCode">Country code</param>
            <param name="areaCode">Area code</param>
            <param name="localNumber">Local number</param>
            <param name="extension">Extension</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MaskPhone(System.String,System.String)">
            <summary>
            Returns a phone number with the first six characters masked with the character passed to it. 
            </summary>
            <param name="input">The string you want to mask</param>
            <param name="newChar">The character you want to use to mask the string</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsValidCellPhone(System.String,System.Boolean)">
            <summary>
            Adapted for use from Stack Overflow:
            
            https://stackoverflow.com/questions/29970244/how-to-validate-a-phone-number
            </summary>
            <param name="phone">Cell number</param>
            <param name="IsRequired">Required</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CompareCellPhoneNumbers(System.String,System.String)">
            <summary>
            Compare 2 phone numbers.
            </summary>
            <param name="a">Cell one</param>
            <param name="b">Cell two</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatPhoneToDBString(System.String)">
            <summary>
            Strip string of non numberic characters and 
            take the maximum of 20 characters to store in the db.
            </summary>
            <param name="number">Phone Number</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MaskEmail(System.String,System.String)">
            <summary>
            Will mask all but the first two characters before the @ and all but the first two characters of the domain up to the last dot.
            </summary>
            <param name="input">The string you want to mask</param>
            <param name="newChar">The character you want to replace the original with</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsValidEmailAddress(System.String)">
            <summary>
            Validates email address to match pattern.
            </summary>
            <param name="emailAddress">Email address</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatCity(System.String)">
            <summary>
            Formats the city. Ensures that the first letter for a city is a capital letter.
            </summary>
            <param name="city">The city.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ConvertValueToBooleanString(System.String)">
            <summary>
            Converts the value to boolean string.
            </summary>
            <param name="value">The value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ConvertStringValueToBoolean(System.String)">
            <summary>
            Converts the value to boolean string.
            </summary>
            <param name="value">The value.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FileCompare(System.String,System.String)">
            <summary>
            Compares two files by matching content and returns true if they are identical; otherwise returns false.
            </summary>
            <param name="file1"></param>
            <param name="file2"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FileCompareEx(System.String,System.String)">
            <summary>
            This method accepts two strings the represent two files to compare. A return value of 0 
            indicates that the contents of the files are the same. A return value of any other value 
            indicates that the files are not the same.
            </summary>
            <param name="file1"></param>
            <param name="file2"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsMDBFile(System.String)">
            <summary>
            If file is MSAccess database
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsZipFile(System.String)">
            <summary>
            If file is PKZip Archive
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsXMLFile(System.String)">
            <summary>
            Determines whether [is XML file] [the specified file name].
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
                <c>true</c> if [is XML file] [the specified file name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsJsonFile(System.String)">
            <summary>
            Determines whether [is JSON file] [the specified file name].
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
                <c>true</c> if [is JSON file] [the specified file name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsXLSFile(System.String)">
            <summary>
            Is file Microsoft XLS
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>
                <c>true</c> if [is XLS file] [the specified file name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.HasFileSignature(System.String,System.Byte[])">
            <summary>
            Does file contain signature in begin
            </summary>
            <param name="fileName">Name of file to verify</param>
            <param name="signature">signature</param>
            <returns>
                <c>true</c> if file contains the signature; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MakeFileNameSafe(System.String)">
            <summary>
            Makes the file name safe.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>"Safe" file name</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.WaitFile(System.String,System.IO.FileAccess,System.Int32)">
            <summary>
            Pauses execution until a file is available for the given access. An exception is thrown if the given time limit is exceeded without the file becoming available.
            </summary>
            <param name="fileName">The file which for which access availability is being tested</param>
            <param name="fa">The file access level to test for</param>
            <param name="minutesToWait">The amount of time to wait until throwing an exception to indicate that the file is not available</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CreateSevenZipSFX(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the seven zip selef extract exe.
            </summary>
            <param name="pathToSfxFile">The path to SFX file.</param>
            <param name="configString">The config string.</param>
            <param name="pathToSourceArchive">The path to source archive.</param>
            <param name="destinationFileName">Name of the destination file.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatFileSize(System.Int64)">
            <summary>
            Returns a formatted file size
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsFileNameSafe(System.String)">
            <summary>
            Checks if the file name is safe for the system
            and does not point to unauthorized locations
            </summary>
            <param name="fileName">The file name</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.IsFilePathSafe(System.String)">
            <summary>
            Checks if the file path is safe for the system
            and does not point to unauthorized locations
            </summary>
            <param name="filePath">The file path</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GenerateTempFileName(System.String)">
            <summary>
            Generates file name from filename parameter with tilde suffix and new Guid that can be used as temporary file name.
            </summary>
            <param name="fileName">File name with full path</param>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.WSPDateFormat">
            <summary>
            WSP date format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.WSPTimeFormat">
            <summary>
            WSP date time format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.SQLTimeFormat">
            <summary>
            SQL Server date time format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.UITimeFormat">
            <summary>
            UI date time format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.SQLDateFormat">
            <summary>
            SQL Server date format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.StdDateFormat">
            <summary>
            Standard date format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.XmlTimeFormat">
            <summary>
            XML standard dateTime format. http://www.w3.org/TR/xmlschema-2/#dateTime
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.SmallDateTimeMinValue">
            <summary>
            Min date for SQL SmallDateTime value
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.SmallDateTimeMaxValue">
            <summary>
            Max date for SQL SmallDateTime value
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DateToStringWithMaxDefault(System.Nullable{System.DateTime})">
            <summary>
            DateTime to String conversion.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DateToStringWithMaxDefault(System.Nullable{System.DateTime},System.String)">
            <summary>
            DateTime to String conversion.
            </summary>
            <param name="date"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DateFromStringWithMaxDefault(System.String)">
            <summary>
            String to DateTime conversion.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="P:Selerix.Foundation.Data.Utils.DefaultLongDateFormatString">
            <summary>
            Gets the default long date format string.
            </summary>
            <value>The default long date format string.</value>
        </member>
        <member name="P:Selerix.Foundation.Data.Utils.DefaultShortDateFormatString">
            <summary>
            Gets the default short date format string.
            </summary>
            <value>The default short date format string.</value>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.DateTime)">
            <summary>
            Returns a formatted date string
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.DateTime,Selerix.Foundation.Data.Utils.DateFormat)">
            <summary>
            Returns a formatted date string
            </summary>
            <param name="d"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Returns a formatted date based on ToString formatting
            </summary>
            <param name="dt">Nullable DateTime</param>
            <param name="format">Date format example: dd/mm/yyyy hh:mm</param>
            <param name="valueIfNull">What value to return if DateTime is null</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.Nullable{System.DateTime})">
            <summary>
            Returns a formatted date string
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.Nullable{System.DateTime},System.String)">
            <summary>
            Format Date or Time depending on date be current day or not
            </summary>
            <param name="date"></param>
            <param name="valueIfNull"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDate(System.Nullable{System.DateTime},Selerix.Foundation.Data.Utils.DateFormat)">
            <summary>
            Returns a formatted date string
            </summary>
            <param name="d"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Data.Utils.DateFormat">
            <summary>
            Date formats for FormatDate method
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.DateFormat.Long">
            <summary>
            Long format with UTC
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Data.Utils.DateFormat.Short">
            <summary>
            Short format
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FormatDateOrTime(System.Nullable{System.DateTime},System.String)">
            <summary>
            Format Date or Time depending on date be current day or not
            </summary>
            <param name="date"></param>
            <param name="valueIfNull"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ParseDate(System.String)">
            <summary>
            Try Parse Date from String.
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ParseDate(System.String,System.DateTime)">
            <summary>
            Parses the date.
            </summary>
            <param name="date">The date.</param>
            <param name="valueIfNull">The value if null.</param>
            <returns>DateTime.</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ParseInt(System.String)">
            <summary>
            Parses the int.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.SameDay(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Compare dates for same day.
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MillisecondsFromMinValue">
            <summary>
            Calculate milliseconds passed from Jan 1, 0001
            </summary>
            <returns>whole quantity of milliseconds</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MillisecondsFromBeginThisCentury">
            <summary>
            Calculate milliseconds passed from Jan 1, 2001
            </summary>
            <returns>whole quantity of milliseconds</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.MillisecondsFromDate(System.DateTime)">
            <summary>
            Calculate milliseconds passed from <paramref name="baseDateTime"/>
            </summary>
            <param name="baseDateTime">Base date to calculate</param>
            <returns>whole quantity of milliseconds from base date to now</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.LastSecondOfDay(System.DateTime)">
            <summary>
            Given a date time return a new date time that
            has it's time as the last second of the day.
            </summary>
            <param name="dt">Date</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetTimeInTimeZoneOrLocal(System.DateTime,System.String)">
            <summary>
            Get date time in time zone.
            </summary>
            <param name="dt">Date Time</param>
            <param name="timeZoneId">Time zone Id</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.EqualArrayComparison(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>
            Compares 2 arrays and determines if equal.
            </summary>
            <param name="firstArrayList">The first array list.</param>
            <param name="secondArrayList">The second array list.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Retry``1(System.Func{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Run and rerun a func up to retryCount times with a msdelay delay between each try
            </summary>
            <param name="func">function to run</param>
            <param name="retryCount">number of times to retry func</param>
            <param name="msdelay">ms delay between retrys</param>
            <param name="msg">message to identify calling function on failure</param>
            <returns>return value of func</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CompareMoneyValues(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            Compare two decimal numbers as SQL Money type
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Round2Digits(System.Decimal)">
            <summary> Round value to 2 digits after period. This hack allow to put decimal value to SOAP with two digits after period</summary>
            <param name="value">the value to round</param>
            <returns>the rounded value</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.NormalizeZIP(System.String,System.Int32)">
            <summary>
            Normalizes the ZIP Code
            </summary>
            <param name="zipCode">zipCode</param>        
            <param name="nationId">nationId</param>
            <returns>normilized ZIP Code</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.BankingMask(System.String)">
            <summary>
            Extension method which returns a banking number with all but the last 4 digits masked out
            </summary>
            <param name="value">bank number</param>
            <returns>masked bank number</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DescriptionAttr``1(``0)">
            <summary>
            Get the description of an enum
            </summary>
            <typeparam name="T">enum type</typeparam>
            <param name="source">enum value</param>
            <returns>[(Description)] field</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CompareZIPCodes(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Compares two ZIP codes and returns true if same.
            </summary>
            <param name="zip1">zip1</param>
            <param name="zip2">zip2</param>
            <param name="nationId">nationId</param>
            <param name="length">length</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.ReplaceXMLEncodedCharacters(System.String)">
            <summary>
            Replace character references with actual character
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.RemoveInvalidXmlCharacters(System.String)">
            <summary>
            Removes control characters and other non-UTF-8 characters
            </summary>
            <param name="inString">The string to process</param>
            <returns>A string with only valid XML characters</returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetUtcTime(System.DateTime)">
            <summary>
            Gets UTC date and time. 
            </summary>
            <param name="value">Any date and time value.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.FindSystemTimeZoneById(System.String)">
            <summary>
            Finds time zone by string ID, such as 'pacific standard time'. Safe to call with NULL or bad ID.
            </summary>
            <param name="timeZoneId">ID, such as "Central Standard Time"</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetTimeZoneAbbr(System.String)">
            <summary>
            Gets abbreviated time zone, such as "CST"
            </summary>
            <param name="timeZoneId">ID, such as "Central Standard Time"</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.Truncate(System.String,System.Int32)">
            <summary>
            Extension method that returns a truncated string if it is longer than maxChars
            </summary>
            <param name="value">String to truncate if too ling.</param>
            <param name="maxChars">maximum lenght of the string</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.GetCertificateCN(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Gets the CN field value from subject the <paramref name="certificate"/>.
            </summary>
            <param name="certificate">The certificate.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CertificateSubjectExtractFieldCN(System.String)">
            <summary>
            Extract CN field value from the <paramref name="subject"/> getting from <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/>
            </summary>
            <param name="subject">subject of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CommentScript(System.String)">
            <summary>
            Comments the script.
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CutScript(System.String)">
            <summary>
            Cuts the script
            </summary>
            <param name="script">The script.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CutScript(System.String,System.Boolean)">
            <summary>
            Cuts the script
            </summary>
            <param name="script">The script.</param>
            <param name="htmlEncode">Encode html text</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CutScript(System.String,System.Int32)">
            <summary>
            Cuts the script
            </summary>
            <param name="script">The script.</param>
            <param name="lineCount">How man lines to return</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.CutScript(System.String,System.Int32,System.Boolean)">
            <summary>
            Cuts the script
            </summary>
            <param name="script">The script.</param>
            <param name="lineCount">How man lines to return</param>
            <param name="htmlEncode">Encode html text</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DeepCloneArray``1(``0[])">
            <summary>
            Clones sigle dimension array.
            </summary>
            <param name="sourceArray">Source array</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DeepCloneArray``1(``0[][])">
            <summary>
            Clones two dimension array.
            </summary>
            <param name="sourceArray">Source array</param>
        </member>
        <member name="M:Selerix.Foundation.Data.Utils.DeepCloneArray``1(``0[][][])">
            <summary>
            Clones three dimension array.
            </summary>
            <param name="sourceArray">Source array</param>
        </member>
        <member name="T:Selerix.Foundation.Data.EnumDescriptionDictionary`1">
            <summary>
            Helper to parse the string value to enum according [Description] attributes.
            [DefaulValue] attribute assigns the value using when unable to find association
            </summary>
            <typeparam name="T">enum with [Description] attributes</typeparam>
        </member>
        <member name="M:Selerix.Foundation.Data.EnumDescriptionDictionary`1.GetValue(System.String)">
            <summary>
            Try to find enum value assigned with [Description] attribute
            </summary>
            <param name="description">value to parse</param>
        </member>
        <member name="T:Selerix.Foundation.Data.XmlUtils">
            <summary>
            Helper methods to handle xml.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.XmlUtils.RemoveXMLAttribute(System.String,System.String)">
            <summary>
            Removes the XML attribute.
            </summary>
            <param name="strParentXML">The STR parent XML.</param>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.XmlUtils.InsertXMLChild(System.String,System.String)">
            <summary>
            Inserts the XML child.
            </summary>
            <param name="strParentXML">The STR parent XML.</param>
            <param name="strChildXML">The STR child XML.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Data.XmlUtils.InsertXMLAttribute(System.String,System.String,System.Object)">
            <summary>
            Inserts the XML attribute. Won't insert attribute if value is null or empty.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Data.XmlUtils.InsertXMLAttribute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Inserts the list of XML attributes. Won't insert attribute if value is null or empty.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DateTimeExtensions">
            <summary>
            Extensions methods for DateTime.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.DateTimeExtensions.TruncateMilliseconds(System.DateTime)">
            <summary>
            Truncates milliseconds from DateTime 
            </summary>
            <param name="dateTime">The datetime.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.DateTimeExtensions.TruncateMinutes(System.DateTime)">
            <summary>
            Truncates minutes from DateTime 
            </summary>
            <param name="dateTime">The datetime.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.DateTimeExtensions.Truncate(System.DateTime,System.TimeSpan)">
            <summary>
            Truncates specific TimeSpan from DateTime 
            </summary>
            <param name="dateTime">The datetime.</param>
            <param name="timeSpan">The time span.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.IAdvertising`1">
            <summary>
            Advertising interface.
            </summary>
            <typeparam name="T">The type of Id key.</typeparam>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertising`1.ProductId">
            <summary>
            Product ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertising`1.PlanId">
            <summary>
            Plan ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertising`1.Enabled">
            <summary>
            Is advertising enabled.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertising`1.Name">
            <summary>
            Advertising name.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertising`1.DisplayForProducts">
            <summary>
            List of plans where advertising should be presented.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.IAdvertisingDisplayFor">
            <summary>
            Advertising display for product type reference.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertisingDisplayFor.ProductType">
            <summary>
            Product type.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.IAdvertisingResponse`1">
            <summary>
            Advertising response interface.
            </summary>
            <typeparam name="T">The type of Id key.</typeparam>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertisingResponse`1.AdvertisingId">
            <summary>
            Advertising id.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertisingResponse`1.PlanId">
            <summary>
            Plan ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertisingResponse`1.ProductId">
            <summary>
            Product ID.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.IAdvertisingResponse`1.Interested">
            <summary>
            Did applicant got interest in advertising.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.Medical.IHealthPrescriptionCopayTier">
            <summary>
            Health product prescription copay tier settings.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthPrescriptionCopayTier.Cost">
            <summary>
            Prescription copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthPrescriptionCopayTier.CostPercent">
            <summary>
            Prescription copay Percent.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1">
            <summary>
            Health product settings.
            </summary>
            <typeparam name="T">The type of identity fields.</typeparam>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.DeductibleSingle">
            <summary>
            Deductible for employee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.DeductibleFamily">
            <summary>
            Deductible for family.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.MaxSingle">
            <summary>
            Max out-of-pocket for emplyoee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.MaxFamily">
            <summary>
            Max out-of-pocket for family.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CoinsuranceAfterDeductible">
            <summary>
            Coinsurance after deductible.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CoinsuranceBeforeDeductible">
            <summary>
            Coinsurance before deductible.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopaysAfterDeductibleEnabled">
            <summary>
            Apply copays after deductible met.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayPrimaryPhysician">
            <summary>
            Primary Physician copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayPrimaryPhysicianPercent">
            <summary>
            Primary Physician copay Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopaySpecialist">
            <summary>
            Specialist copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopaySpecialistPercent">
            <summary>
            Specialist copay Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayUrgentCare">
            <summary>
            Urgent care copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayUrgentCarePercent">
            <summary>
            Urgent care copay Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayEmergencyCare">
            <summary>
            Emergency care copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayEmergencyCarePercent">
            <summary>
            Emergency care copay Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayPrescriptionTiers">
            <summary>
            Prescription copay tiers.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayPrescription">
            <summary>
            Prescription copay.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.CopayPrescriptionPercent">
            <summary>
            Prescription copay Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCoinsuranceAfterDeductible">
            <summary>
            Coinsurance after deductible for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCoinsuranceBeforeDeductible">
            <summary>
            Coinsurance before deductible for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopaysAfterDeductibleEnabled">
            <summary>
            Apply copays after deductible met.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayEmergencyCare">
            <summary>
            Emergency care copay for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayEmergencyCarePercent">
            <summary>
            Emergency care copay for out of network Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayPrescriptionTiers">
            <summary>
            Prescription copay tiers for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayPrescription">
            <summary>
            Prescription copay for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayPrescriptionPercent">
            <summary>
            Prescription copay for out of network Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayPrimaryPhysician">
            <summary>
            Primary Physician copay for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayPrimaryPhysicianPercent">
            <summary>
            Primary Physician copay for out of network Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopaySpecialist">
            <summary>
            Specialist copay for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopaySpecialistPercent">
            <summary>
            Specialist copay for out of network Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayUrgentCare">
            <summary>
            Urgent care copay for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutCopayUrgentCarePercent">
            <summary>
            Urgent care copay for out of network Percent.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutDeductibleFamily">
            <summary>
            Deductible for family for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutDeductibleSingle">
            <summary>
            Deductible for employee for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutMaxFamily">
            <summary>
            Max out-of-pocket for family for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.OutMaxSingle">
            <summary>
            Max out-of-pocket for employee for out of network.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAEnabled">
            <summary>
            HSA/HRA enabled status for this product.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HideInDecisionSupport">
            <summary>
            Hidden in decision support status for this product.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMatchPercentSingle">
            <summary>
            HSA/HRA match percentage for employee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMaxMatchSingle">
            <summary>
            HSA/HRA maximum match by employer for employee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMaxAnnualSingle">
            <summary>
            HSA/HRA maximum annual contribution for employee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAAdditionalSingle">
            <summary>
            HSA/HRA additional contribution for employee.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMatchPercentFamily">
            <summary>
            HSA/HRA match percentage for family.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMaxMatchFamily">
            <summary>
            HSA/HRA maximum match by employer for family.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAMaxAnnualFamily">
            <summary>
            HSA/HRA maximum annual contribution for family.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IHealthProductSettings`1.HSAAdditionalFamily">
            <summary>
            HSA/HRA additional contribution for family.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings">
            <summary>
            Medical engine settings interface.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostPerPrimary">
            <summary>
            Primary care physician cost per visit.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostPerSpecialist">
            <summary>
            Specialist cost per visit.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostPerPrescription">
            <summary>
            Prescription cost per fill.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostPerUrgent">
            <summary>
            Urgent case cost per visit.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostPerEmergency">
            <summary>
            Emergency care cost per visit.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostOutpatientProcedure">
            <summary>
            Outpatient cost per procedure.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.CostInpatientSurgery">
            <summary>
            Inpatient cost per surgery.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.IncomeTaxRateFederal">
            <summary>
            Federal income tax rate.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.IncomeTaxRateState">
            <summary>
            State income tax rate.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.PayrollTaxRate">
            <summary>
            Payroll tax rate.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.DecisionSupport.Medical.IMedicalEngineSettings.ExciseTaxRate">
            <summary>
            Excise tax rate.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.FileCheckSum">
            <summary>
            Class FileCheckSum. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.GetSHA1Hash(System.String)">
            <summary>
            Calculates SHA1 hash for file.
            </summary>
            <param name="pathName">Path to file</param>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.GetSHA256Hash(System.String)">
            <summary>
            Calculates SHA256 hash for file.
            </summary>
            <param name="pathName">Path to file</param>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.GetMD5Hash(System.String)">
            <summary>
            Calculates MD5 hash for file.
            </summary>
            <param name="pathName">Path to file</param>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.GetSHA256Hash(System.IO.Stream)">
            <summary>
            Calculates SHA256 hash for data stream.
            </summary>
            <param name="dataStream">Data Stream</param>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.GetMD5Hash(System.IO.Stream)">
            <summary>
            Calculates MD5 hash for data stream.
            </summary>
            <param name="dataStream">Path to file</param>
        </member>
        <member name="M:Selerix.Foundation.FileCheckSum.EncryptorHashToFileCheckSum(System.String)">
            <summary>
            Converts <see cref="T:Selerix.Foundation.Encryptor"/> hash string to <see cref="T:Selerix.Foundation.FileCheckSum"/> hash string.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Encryptor">
            <summary>
            Class Encryptor. This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Encryptor.Phrase">
            <value>Set the phrase used to generate the secret key.</value>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="SecretPhrase">Secret phrase to generate key</param>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.Encrypt(System.String)">
            <summary>
            Encrypt the given value with the Rijndael algorithm.
            </summary>
            <param name="data">The data.</param>
            <returns>Encrypted value.</returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.Decrypt(System.String)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.MD5(System.IO.Stream)">
            <summary>
            Calculate MD5 hash for stream.
            </summary>
            <param name="sourceStream">Source stream.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.MD5Hex(System.IO.Stream)">
            <summary>
            Calculate MD5 hash for stream.
            </summary>
            <param name="sourceStream">Source stream.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.SHA256(System.IO.Stream)">
            <summary>
            Shes the a256.
            </summary>
            <param name="sourceStream">The source stream.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.MD5(System.String)">
            <summary>
            ms the d5.
            </summary>
            <param name="source">The source.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.MD5Hex(System.String)">
            <summary>
            ms the d5 hexadecimal.
            </summary>
            <param name="source">The source.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.SHA2(System.String)">
            <summary>
            Computes SHA2 hash from source string.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Encryptor.SHA2Hex(System.String)">
            <summary>
            Computes SHA2 hash from source string and return in hex format.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Base32">
            <summary>
            Class Base32. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Base32.Encode(System.Byte[])">
            <summary>
            Encodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Selerix.Foundation.EngagementParentEvent">
            <summary>
            Engagement Parent Event.
            
            This is used to partition sub events.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementParentEvent.LifeEvent">
            <summary>
            Life event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementParentEvent.EmploymentStatusChange">
            <summary>
            Employment status change
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EngagementEventSubType">
            <summary>
            List of valid engagement event sub types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.None">
            <summary>
            No sub event type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.Married">
            <summary>
            Married, civil union or domestic partnership.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.Divorced">
            <summary>
            Divorced spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.Death">
            <summary>
            Death of a spouse or dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.AgeLimit">
            <summary>
            A dependent reached their age limit for benefits.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.SpouseEmployementStatusChange">
            <summary>
            Spouse changed employement status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.DependentRegainedStatus">
            <summary>
            Dependent has regained dependent status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.Absense">
            <summary>
            Taking approved leave of absense.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LostOrGainedCoverage">
            <summary>
            I/dependent recently lost or gained similar coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.CourtOrderChange">
            <summary>
            Change to benefits due to a court order.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.NewChild">
            <summary>
            New child
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceAll">
            <summary>
            All Leave of Absence events.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceDisability">
            <summary>
            Leave of absence - disability
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceFMLA">
            <summary>
            Leave of absence - FMLA
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceFurlough">
            <summary>
            Leave of absence - Furlough
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceMilitary">
            <summary>
            Leave of absence - Military
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsencePregnancy">
            <summary>
            Leave of absence - Pregnancy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceWithoutPay">
            <summary>
            Leave of absence - Without Pay
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.LeaveOfAbsenceWorkersComp">
            <summary>
            Leave of absence - Worker's comp
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationAll">
            <summary>
            All Terminations
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationDeath">
            <summary>
            Death termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationGrossMisconduct">
            <summary>
            Gross misconduct termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationLayoff">
            <summary>
            Layoff termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationLeaveExpired">
            <summary>
            Leave expired termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationOtherInvoluntary">
            <summary>
            Other Involuntary termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationUnspecified">
            <summary>
            Unspecified termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationResignation">
            <summary>
            Resignation termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationRetired">
            <summary>
            Retired termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationVoluntary">
            <summary>
            Voluntary termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventSubType.TerminationEndOfAssignment">
            <summary>
            End of assignment
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EngagementLifeEventSubType">
            <summary>
            Sub events for a life event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.Married">
            <summary>
            Married, civil union or domestic partnership.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.Divorced">
            <summary>
            Divorced spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.Death">
            <summary>
            Death of a spouse or dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.AgeLimit">
            <summary>
            A dependent reached their age limit for benefits.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.SpouseEmployementStatusChange">
            <summary>
            Spouse changed employement status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.DependentRegainedStatus">
            <summary>
            Dependent has regained dependent status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.Absense">
            <summary>
            Taking approved leave of absense.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.LostOrGainedCoverage">
            <summary>
            I/dependent recently lost or gained similar coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.CourtOrderChange">
            <summary>
            Change to benefits due to a court order.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementLifeEventSubType.NewChild">
            <summary>
            New child
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType">
            <summary>
            Sub events for an employment status change event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceAll">
            <summary>
            Leave of absence all
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceDisability">
            <summary>
            Leave of absence disability
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceFMLA">
            <summary>
            Leave of absence FMLA
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceFurlough">
            <summary>
            Leave of absence furlough
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceMilitary">
            <summary>
            Leave of absence military
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsencePregnancy">
            <summary>
            Leave of absence pregnancy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceWithoutPay">
            <summary>
            Leave of absence without pay
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.LeaveOfAbsenceWorkersComp">
            <summary>
            Leave of absence workers comp
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationAll">
            <summary>
            Capture all termination events.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationDeath">
            <summary>
            Death
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationGrossMisconduct">
            <summary>
            Gross misconduct
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationLayoff">
            <summary>
            Layoff
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationLeaveExpired">
            <summary>
            Leave expired
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationOtherInvoluntary">
            <summary>
            Other Involuntary 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationUnspecified">
            <summary>
            Unspecified
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationResignation">
            <summary>
            Resignation
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationRetired">
            <summary>
            Retired
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationVoluntary">
            <summary>
            Voultary
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEmploymentStatusChangeEventSubType.TerminationEndOfAssignment">
            <summary>
            End of Assignment
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EngagementEventType">
            <summary>
            List of valid engagement event types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.NewHire">
            <summary>
            New Hire event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.LifeEvent">
            <summary>
            Life event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.AttainedAge">
            <summary>
            Attained age event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.JobClassChanged">
            <summary>
            Job class changed event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.SalaryChange">
            <summary>
            Salary changed event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.EmploymentStatusChange">
            <summary>
            Termination event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.Transfer">
            <summary>
            Transfer event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.CustomJS">
            <summary>
            Custom JS event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.EnrollmentComplete">
            <summary>
            Enrollment complete.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.HireDateChange">
            <summary>
            Hire Date Change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.Rehire">
            <summary>
            Rehire
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.AddedEmployee">
            <summary>
            Added Employee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.Termination">
            <summary>
            Termination
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.Birthday">
            <summary>
            Birthday
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngagementEventType.WorkAnniversary">
            <summary>
            Work Anniversary
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmCustomFieldType">
            <summary>
            Enum. Specifies the custom field type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.Int32">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.String">
            <summary>
            String. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.DateTime">
            <summary>
            Date/Time.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.Boolean">
            <summary>
            True/False.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.Money">
            <summary>
            Currency.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmCustomFieldType.ComboBox">
            <summary>
            Combo box.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DefaultPINType">
            <summary>
            Enum. Specifies the PIN type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.RANDOM_4_DIGIT">
            <summary>
            Random four-digit PIN.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.LAST_4_DIGIT_SSN">
            <summary>
            Last four digits of SSN used for PIN.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.RANDOM_5_DIGIT">
            <summary>
            Random five-digit PIN.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.LAST_4_DIGIT_SSN_LAST_2_DIGIT_DOB">
            <summary>
            PIN consisting of last four digits of the Social Security number and the last two digits of the date of birth.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.LOWER_CASE_INITIALS_8_DIGIT_DOB">
            <summary>
            Pin consists of the employee's initials, lower case, plus their DOB as MMddyyyy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.LAST_4_DIGIT_SSN_8_DIGIT_DOB">
            <summary>
            PIN consisting of last four digits of the Social Security number and employee DOB as MMddyyyy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultPINType.LAST_4_DIGIT_EIN_FULL_BIRTH_YEAR">
            <summary>
            PIN consisting of last four digits of the EIN left padded with '0' and employee birth year as yyyy.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DefaultUserIdRule">
            <summary>
            Enum. Specifies the rule for building a default UserID
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DefaultUserIdRule.UserIdRuleDoNotCreateDefault">
            <summary>
            Do not create a default UserID
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EnrollmentLocation">
            <summary>
            Location of enrollment session
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentLocation.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentLocation.WorksiteLocation">
            <summary>
            Work place
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentLocation.Residence">
            <summary>
            Residence of the person
            </summary>
        </member>
        <member name="T:Selerix.Foundation.NewCoverageEnrollmentRule">
            <summary>
            New coverage enrollment rule.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.NewCoverageEnrollmentRule.OpenForEnrollment">
            <summary>
            Open for enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.NewCoverageEnrollmentRule.AutoEnroll">
            <summary>
            Auto Enroll.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.NewCoverageEnrollmentRule.CannotWaive">
            <summary>
            Cannot waive.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.NewCoverageEnrollmentRule.Waive">
            <summary>
            Waive.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.NewCoverageEnrollmentRule.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ExistingCoverageEnrollmentRule">
            <summary>
            Existing coverage enrollment rule.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.OpenForEnrollment">
            <summary>
            Open for enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.Recalculate">
            <summary>
            Recalculate.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.CarryForward">
            <summary>
            Carry Forward.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.Waive">
            <summary>
            Waive.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.CancelOnly">
            <summary>
            Cancel Only
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ExistingCoverageEnrollmentRule.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ConfirmWaiveEnrollmentRule">
            <summary>
            Waive confirmation
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.ConfirmWaiveEnrollmentRule.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ConfirmWaiveEnrollmentRule.DoNotConfirmWaive">
            <summary>
            Open for enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ConfirmWaiveEnrollmentRule.ConfirmWaive">
            <summary>
            Recalculate.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ConfirmWaiveEnrollmentRule.ConfirmWaiveIfNotLateEntrant">
            <summary>
            Carry Forward.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EnrollmentPreSelection">
            <summary>
            Specifies default pre-selection for Apply/Decline choice on application screen for coverage
            'Apply' - Apply coverage option will checked on aplication screen
            'Waive' - Waive coverage option will checked on aplication screen
            'Neither' - Apply and Waive options will unchecked on aplication screen
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentPreSelection.Apply">
            <summary>
            The apply
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentPreSelection.Waive">
            <summary>
            The waive
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentPreSelection.Neither">
            <summary>
            The neither
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PrerequisiteRules">
            <summary>
            Specifies prerequisite requirements to check
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.Gender">
            <summary>
            The gender
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.SSN">
            <summary>
            The SSN
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.MaritalStatus">
            <summary>
            The marital status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.HomePhone">
            <summary>
            The home phone
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PrerequisiteRules.WorkPhone">
            <summary>
            The work phone
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EnrollmentStatus">
            <summary>
            Enum. Indicates the enrollment status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.Trash">
            <summary>
            Trash.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.NotBegun">
            <summary>
            Not begun. Employee can enroll, but has not initiated the process. When an employee is created in Benefits-Selection by entering data in the New Employee screen, the employee’s Enrollment status is marked as “NotBegun”. If an employee has a status of “NotBegun”, then the enroller may choose to select the Auto-enroll option. Selecting this option will create applications for each plan based on the individual plan's auto enrollment rules. The employee’s enrollment status changes to “Complete”.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.NotEligible">
            <summary>
            Not eligible for enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.Incomplete">
            <summary>
            Incomplete. Employee has started the process, but not yet completed the application and any confirmation forms.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentStatus.Complete">
            <summary>
            Complete. Employee has completed the entire enrollment process, and has provided any digital signatures or other confirmation of benefit verification.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EnrollmentSessionType">
            <summary>
            The type of enrollment session.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentSessionType.Unknown">
            <summary>
            Unknown - unspecified.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentSessionType.FaceToFace">
            <summary>
            Face to Face enrollment occurred.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentSessionType.CallCenter">
            <summary>
            Enrollment was done through a call center.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentSessionType.Self">
            <summary>
            Enrollment was done by the Enrollee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollmentSessionType.HR_Admin">
            <summary>
            HR or some other administrator enrolled.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AcaAdministrativePeriod">
            <summary>
            Used with AcaStandardMeasurementViewModel and AcaInitialMeasurementViewModel
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaAdministrativePeriod.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaAdministrativePeriod.Days30">
            <summary>
            30-Days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaAdministrativePeriod.Days45">
            <summary>
            45-Days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaAdministrativePeriod.Days60">
            <summary>
            60-Days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaAdministrativePeriod.Days90">
            <summary>
            60-Days
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AcaEligibilityChanges">
            <summary>
            Type of ACA eligibility changes to track on the measurement report
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaEligibilityChanges.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaEligibilityChanges.StandardMeasurement">
            <summary>
            Standard Measurement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaEligibilityChanges.InitialMeasurementPeriod">
            <summary>
            Employees in Initial Measurement Period
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ACAInitialReportRange">
            <summary>
            Initial report range
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ACAInitialReportRange.Previous2Months">
            <summary>
            Previous 2 month.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ACAInitialReportRange.Previous3Months">
            <summary>
            Previous 3 month.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ACAInitialReportRange.Previous6Months">
            <summary>
            Previous 6 month.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ACAInitialReportRange.Previous12Months">
            <summary>
            Previous 12 month.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AcaMeasurementType">
            <summary>
            Used with AcaStandardMeasurementViewModel and AcaInitialMeasurementViewModel
            </summary>    
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaMeasurementType.Select">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaMeasurementType.HoursPerWeek">
            <summary>
            Lookback method - Hours Per Week
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaMeasurementType.HoursPerMonth">
            <summary>
            Monthly method - Hours Per Month
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AcaStabilityPeriod">
            <summary>
            Stability period
            </summary>    
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.ZeroMonths">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.SixMonths">
            <summary>
            6 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.SevenMonths">
            <summary>
            7 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.EightMonths">
            <summary>
            8 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.NineMonths">
            <summary>
            9 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.TenMonths">
            <summary>
            10 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.ElevenMonths">
            <summary>
            11 months
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaStabilityPeriod.TwelveMonths">
            <summary>
            12 months
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AcaTransitionDate">
            <summary>
            ACA Transition Date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaTransitionDate.EligibilityDate">
            <summary>
            Uses eligibility date for date of transition
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AcaTransitionDate.DateOfHire">
            <summary>
            Uses date of hire for date of transition
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ActivityResponseType">
            <summary>
            Activity Feed Response Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ActivityResponseType.UserViewedEmployeeInitiatedChat">
            <summary>
            User Viewed Employee Initiated a Chat session
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ActivityResponseType.UserEngagedEmployeeInChat">
            <summary>
            User joined Employee Chat
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ActivityResponseType.EmployeeAbandonedChat">
            <summary>
            Employee Abandoned Chat
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ActivityType">
            <summary>
            Activity Feed Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ActivityType.EmployeeInitiatedChat">
            <summary>
            Employee Initiated a Chat session
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.AddressType">
            <summary>
            Enum. Identifies the Address type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AddressType.Unknown">
            <summary>
            Unknown AddressType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AddressType.Home">
            <summary>
            Home address
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.AddressType.Mailing">
            <summary>
            Mailing Address
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmBeneficiaryType">
            <summary>
            Enum. Specifies the type of beneficiary.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmBeneficiaryType.Primary">
            <summary>
            Primary beneficiary.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmBeneficiaryType.Contingent">
            <summary>
            Contingent beneficiary.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.BorderRadius">
            <summary>
            Portal types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.BorderRadius.None">
            <summary>
            No border radius
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.BorderRadius.Small">
            <summary>
            Small border radius - 4px
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.BorderRadius.Medium">
            <summary>
            Medium border radius - 8px
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.BorderRadius.Large">
            <summary>
            Large border radius - 12px
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmCaseEventType">
            <summary>
            Enum. Specifies the case event type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmCaseEventType.Added">
            <summary>
            Case event type added.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmCaseEventType.Changed">
            <summary>
            Case event type changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmCaseEventType.UnLock">
            <summary>
            Case unlocked.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmCaseEventType.Deleted">
            <summary>
            Case deleted
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmEnrollmentLocation">
            <summary>
            Enum. Specifies the enrollment location.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmEnrollmentLocation.WorksiteLocation">
            <summary>
            On location at worksite.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmEnrollmentLocation.Residence">
            <summary>
            Applicant's residence.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmInterfaceOption">
            <summary>
            Enum. Specifies the interface options.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.NotShown">
            <summary>
            Interface option now shown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.Required">
            <summary>
            This interface option is required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.Optional">
            <summary>
            This interface option is optional.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.RequiredIfNew">
            <summary>
            This interface option is required, if new.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.ReadOnly">
            <summary>
            This interface option is read-only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.ReadOnlyIfNotNull">
            <summary>
            This interface option is read-only if it already has a value.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceOption.ReadOnlyIfNotNullRequiredIfNull">
            <summary>
            This interface option is read-only if it already has a value, but if blank would be required.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmValidationDocumentRequired">
            <summary>
            Enum. Specifies if validation documents are required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmValidationDocumentRequired.NotRequired">
            <summary>
            Validation documents are not required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmValidationDocumentRequired.Required">
            <summary>
            Validation documents are required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmValidationDocumentRequired.RequiredIfNew">
            <summary>
            Validation documents are required, if new.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmEnrollerRequirements">
            <summary>
            Enum. Specifies enroller requirements for documentation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmEnrollerRequirements.MustCollectDependentDocumentation">
            <summary>
            Dependent documentation is required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmEnrollerRequirements.CollectDocumentationIfProvided">
            <summary>
            Collect documentation, if provided.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmEnrollerRequirements.DoNotCollectDependentDocumentation">
            <summary>
            Do not collect dependent documentation.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmInterfaceLocation">
            <summary>
            Enum. Specifies the interface locations.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceLocation.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceLocation.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmInterfaceLocation.StatusPanel">
            <summary>
            Status panel.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ChatEndpoint">
            <summary>
            Chat endpoint
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ChatEndpoint.Browser">
            <summary>
            The browser
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ChatEventType">
            <summary>
            Chat event type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ChatEventType.OnMemberRemoved">
            <summary>
            The on member removed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ChatEventType.OnChannelDestroyed">
            <summary>
            The on channel destroyed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ChatEventType.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.CommunicationType">
            <summary>
            Screen Share Invite Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.CommunicationType.Phone">
            <summary>
            Employee Sends an Invite of Type PhoneCall
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.CommunicationType.Email">
            <summary>
            Employee Sends an Invite of Type Email
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.CommunicationType.SMS">
            <summary>
            Employee Sends an Invite of Type SMS
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ConnectionType">
            <summary>
            API and 3rd-Party connection types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConnectionType.Unset">
            <summary>
            Unset connection
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConnectionType.Sandbox">
            <summary>
            Sandbox connection
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConnectionType.Production">
            <summary>
            Production connection
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ContactMethod">
            <summary>
            Contact method.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ContactMethod.NotSet">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ContactMethod.Phone">
            <summary>
            Phone.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ContactMethod.Email">
            <summary>
            Email.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ContactMethod.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Container">
            <summary>
            Container display style
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Container.Default">
            <summary>
            Default container that constrains to set widths based on device or browser size
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Container.Fluid">
            <summary>
            Fluid containers render at the full width of its parent container, device, or browser
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.DateRange">
            <summary>
            Date range options
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Yesterday">
            <summary>
            Yesterday only
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Today">
            <summary>
            Today only
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Last7Days">
            <summary>
            Date minus 7 days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Last14Days">
            <summary>
            Date minus 14 days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Last30Days">
            <summary>
            Date minus 30 days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Last90Days">
            <summary>
            Date minus 90 days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.Last365Days">
            <summary>
            Date minus 365 days
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DateRange.All">
            <summary>
            No date range filter
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmDocumentType">
            <summary>
            Enum. Specifies the document type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmDocumentType.All">
            <summary>
            All types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmDocumentType.Application">
            <summary>
            The application.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmDocumentType.Waiver">
            <summary>
            The waiver.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmDocumentType.Cancelation">
            <summary>
            Cancellation.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.EmployeeSessionActivityType">
            <summary>
            Employee Session Activity Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.EmployeeSessionActivityType.EmployeeInactive">
            <summary>
            Employee is Inactive (not logged on)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.EmployeeSessionActivityType.EmployeeActive">
            <summary>
            Employee is Active (logged on)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.EmployeeSessionActivityType.EmployeeActiveWithChat">
            <summary>
            Employee is Active (logged on) and has an active chat session
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.EmployeeSessionActivityType.EmployeeActiveWithChatAndEnroller">
            <summary>
            Employee is Active (logged on) and has an active chat session with an enroller
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Employees.InviteEmployeeSendType">
            <summary>
            Enumeration for employee invitation send types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Employees.InviteEmployeeSendType.Unknown">
            <summary>
            Default unknown type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Employees.InviteEmployeeSendType.WorkEmail">
            <summary>
            Default unknown type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Employees.InviteEmployeeSendType.PersonalEmail">
            <summary>
            Default unknown type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Employees.InviteEmployeeSendType.Both">
            <summary>
            Default unknown type
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason">
            <summary>
            Failed delivery reason.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.Generic">
            <summary>
            Generic.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.IncorrectEmailFormat">
            <summary>
            Incorrect email format.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.EmailDeliveryFailed">
            <summary>
            Email delivery failed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.EmailBounce">
            <summary>
            Email got bounced.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.EmailDropped">
            <summary>
            Email got dropped.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.EmailUnsubscribed">
            <summary>
            Email attempt to send to unsubscribed recipient.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.IncorrectPhoneFormat">
            <summary>
            Incorrect phone format.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextDeliveryFailed">
            <summary>
            Text delivery failed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextQueueOverflow">
            <summary>
            Text queue overflow. Twilio error 30001.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextAccountSuspended">
            <summary>
            Text account suspended. Twilio error 30002.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextUnreachableDestinationHandset">
            <summary>
            Text unreachable destination handset. Twilio error 30003.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextMessageBlocked">
            <summary>
            Text message blocked. Twilio error 30004.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextUnknownDestinationHandset">
            <summary>
            Text unknown destination handset. Twilio error 30005.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextLandlineOrUnreachableCarrier">
            <summary>
            Text landline or unreachable carrier. Twilio error 30006.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextCarrierViolation">
            <summary>
            Text carrier violation. Twilio error 30007.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextUnknownError">
            <summary>
            Text unknown error. Twilio error 30008.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextMissingSegment">
            <summary>
            Text missing segment. Twilio error 30009.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextMessagePriceExceedsMaxPrice">
            <summary>
            Text message price exceeds max price. Twilio error 30010.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextMessageUnsubscribed">
            <summary>
            Text attempt to send to unsubscribed recipient. Twilio error 21610.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextInvalidToNumber">
            <summary>
            Text invalid 'To' number. Twilio error 21614.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.TextCarrierNetworkCongestion">
            <summary>
            Text carrier network congestion. Twilio error 30017.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.FailedDeliveryReason.AppDeliveryFailed">
            <summary>
            App delivery failed.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Engagement.ModificationSubType">
            <summary>
            Modification sub type used with engagement audit log.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignName">
            <summary>
            Campaign Name Change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignDescription">
            <summary>
            Campaign Description Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignStartDate">
            <summary>
            Campaign start date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignEndDate">
            <summary>
            Campaign end date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignMessageOpenGoal">
            <summary>
            Campaign Message Open Goal.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignSurveyCompletionGoal">
            <summary>
            Campaign Survey Completion Goal.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignUrlClickRateGoal">
            <summary>
            Campaign Click Rate Goal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignAudience">
            <summary>
            Campaign Recipients
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignBusinessGoals">
            <summary>
            Campaign Business Goals
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignEnabled">
            <summary>
            Campaign Enable
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignMessage">
            <summary>
            Campaign Message
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignSurvey">
            <summary>
            Campaign Survey
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignQuiz">
            <summary>
            Campaign Quiz
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignDisabled">
            <summary>
            Campaign Disabled.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignEventDrivenEnabled">
            <summary>
            Campaign Event Driven Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignEventDrivenDisabled">
            <summary>
            Campaign Event Driven Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignEvent">
            <summary>
            Campaign Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignDeliverToEveryoneEnabled">
            <summary>
            Campaign deliver to 'All Active Employees' Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignDeliverToEveryoneDisabled">
            <summary>
            Campaign deliver to 'All Active Employees' Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.CampaignMessageCategory">
            <summary>
            Campaign Message Category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizName">
            <summary>
            Campaign Name Change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizDescription">
            <summary>
            Quiz Description Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizStartDate">
            <summary>
            Quiz start date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizEndDate">
            <summary>
            Quiz end date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizEnabled">
            <summary>
            Quiz enable change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizOpenRateGoal">
            <summary>
            Quiz open rate goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizCompletionGoal">
            <summary>
            Quiz complation goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizClickRateGoal">
            <summary>
            Quiz click rate goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizPassRateGoal">
            <summary>
            Quiz Pass rate goal change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizAudience">
            <summary>
            Quiz Audience change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizQuestions">
            <summary>
            Quiz Questions change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizPassingScore">
            <summary>
            Quiz Passing score change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizGreetingMessage">
            <summary>
            Quiz greeting message change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizThankYouMessage">
            <summary>
            Quiz Thank you message change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizAnonymousResultsEnabled">
            <summary>
            Quiz Anonymous results change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizViewAnonymousEnabled">
            <summary>
            Quiz View Anonymous change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizMessage">
            <summary>
            Quiz Message.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizGreetingImage">
            <summary>
            Quiz greeting image.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizThankYouImage">
            <summary>
            Quiz thank you image.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizDisabled">
            <summary>
            Quiz disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyName">
            <summary>
            Survey Name Change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyDescription">
            <summary>
            Survey Description Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyStartDate">
            <summary>
            Survey start date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyEndDate">
            <summary>
            Survey end date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyEnabled">
            <summary>
            Survey Enable change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyOpenRateGoal">
            <summary>
            Survey Open Rate Goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyCompletionGoal">
            <summary>
            Survey Completion Goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyClickRateGoal">
            <summary>
            Suvey Click Rate Goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyAudience">
            <summary>
            Survey Audience change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyQuestions">
            <summary>
            Survey Questions change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyGreetingMessage">
            <summary>
            Survey Greeting Message changes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyThankYouMessage">
            <summary>
            Survey Thank you message change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyAnonymousResultsEnabled">
            <summary>
            Survey anonymous results change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyViewAnonymouslyEnabled">
            <summary>
            Survey view anonymously change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyMessage">
            <summary>
            Survey Message.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyGreetingImage">
            <summary>
            Survey greeting image.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyThankYouImage">
            <summary>
            Survey thank you image.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyDisabled">
            <summary>
            Quiz disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyAnonymousResultsDisabled">
            <summary>
            Survey Anonymous Results Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyViewAnonymouslyDisabled">
            <summary>
            Survey View Anonymously Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageName">
            <summary>
            Message Name change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageDescription">
            <summary>
            Message Description Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.ContentMessage">
            <summary>
            Content Message change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageEnabled">
            <summary>
            Message Enabled change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.TextMessage">
            <summary>
            Text message change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.EmailSubject">
            <summary>
            Email Subject change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.EmailBody">
            <summary>
            Email body change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageStartDate">
            <summary>
            Message start date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageEndDate">
            <summary>
            Message end date change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageDeliveryDate">
            <summary>
            Message Delivery Date Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageOpenRateGoal">
            <summary>
            Message Open Rate Goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageClickRateGoal">
            <summary>
            Message Click Rate Goal change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageViewAnonymouslyEnabled">
            <summary>
            Message view anonymous change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageFeedTitle">
            <summary>
            Message's Message Feed Title change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageFeedBody">
            <summary>
            Message's Message Feed Body change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageAudience">
            <summary>
            Message Audience change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminder">
            <summary>
            Message Reminder
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageContentImage">
            <summary>
            Message Content Image.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageDisabled">
            <summary>
            Message disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageViewAnonymouslyDisabled">
            <summary>
            Message view anonymous change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageEventDrivenEnabled">
            <summary>
            Message Event Driven Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageEventDrivenDisabled">
            <summary>
            Message Event Driven Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageEvent">
            <summary>
            Message Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageDeliverToEveryoneEnabled">
            <summary>
            Message deliver to 'All Active Employees' Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageDeliverToEveryoneDisabled">
            <summary>
            Message deliver to 'All Active Employees' Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageMessageCategory">
            <summary>
            Message Category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderScheduledFor">
            <summary>
            Message Reminder Scheduled For
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotOpenedEnabled">
            <summary>
            Message Reminder Not Opened Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotClickedEnabled">
            <summary>
            Message Reminder Not Clicked Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotCompletedEnabled">
            <summary>
            Message Reminder Not Completed Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotOpenedDisabled">
            <summary>
            Message Reminder Not Completed Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotClickedDisabled">
            <summary>
            Message Reminder Not Clicked Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderNotCompletedDisabled">
            <summary>
            Message Reminder Not Completed Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderName">
            <summary>
            Message Reminder Name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderDescription">
            <summary>
            Message Reminder Description
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderType">
            <summary>
            Message Reminder Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderAppSubject">
            <summary>
            Message Reminder App Subject.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderAppMessage">
            <summary>
            Message Reminder App Message
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderTextMessage">
            <summary>
            Message Reminder Text Message
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderEmailSubject">
            <summary>
            Message Reminder Email Subject
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageReminderEmailBody">
            <summary>
            Message Reminder Email body
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionText">
            <summary>
            Message Reminder Scheduled For
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionAnswers">
            <summary>
            Message Reminder Not Opened
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionCorrectFeedback">
            <summary>
            Question correct feedback
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionIncorrectFeedback">
            <summary>
            Question incorrect feedback
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionType">
            <summary>
            Question type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionAnswerValue">
            <summary>
            Question Answer Value
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionAnswerText">
            <summary>
            Question Answer Text
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionAnswerCorrect">
            <summary>
            Question Answer Correct True
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuestionAnswerIncorrect">
            <summary>
            Question Answer Correct False
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalName">
            <summary>
            Business Goal Name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalDescription">
            <summary>
            Business Goal Description
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalStartDate">
            <summary>
            Business Goal Start Date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalEndDate">
            <summary>
            Business Goal End Date.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalMeasureUnit">
            <summary>
            Business Goal Measure Unit.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalTargetValue">
            <summary>
            Business Goal Target Value.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.BusinessGoalResultValue">
            <summary>
            Business Goal Result Value.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizFeedbackModeEnabled">
            <summary>
            Quiz Feedback mode enabled.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizFeedbackModeDisabled">
            <summary>
            Quiz Feedback mode disabled.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizViewAnonymousDisabled">
            <summary>
            Quiz View Anonymous Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizAnonymousResultsDisabled">
            <summary>
            Quiz Anonymous Results Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizEventDrivenEnabled">
            <summary>
            Quiz Event Driven Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizEventDrivenDisabled">
            <summary>
            Quiz Event Driven Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizEvent">
            <summary>
            Quiz Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizDeliverToEveryoneEnabled">
            <summary>
            Quiz deliver to 'All Active Employees' Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizDeliverToEveryoneDisabled">
            <summary>
            Quiz deliver to 'All Active Employees' Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.QuizMessageCategory">
            <summary>
            Quiz message category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyEventDrivenEnabled">
            <summary>
            Survey Event Driven Enabled.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyEventDrivenDisabled">
            <summary>
            Survey Event Driven Disabled.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyEvent">
            <summary>
            Survey Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyDeliverToEveryoneEnabled">
            <summary>
            Survey deliver to 'All Active Employees' Enabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyDeliverToEveryoneDisabled">
            <summary>
            Survey deliver to 'All Active Employees' Disabled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SurveyMessageCategory">
            <summary>
            Survey Message Category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.Event">
            <summary>
            Event type on Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.SubEvent">
            <summary>
            Sub event on Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.EventScript">
            <summary>
            Script on Event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageCategoryName">
            <summary>
            Message Category Name Change
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageCategoryDescription">
            <summary>
            Message Category Description Change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageCategoryCustomSenderName">
            <summary>
            Message category custom sender name change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageCategoryRequired">
            <summary>
            Message category required change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationSubType.MessageCategoryOptional">
            <summary>
            Message category optional change.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Engagement.ModificationType">
            <summary>
            Modification type used with engagement audit log.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationType.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.ModificationType.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Engagement.NotificationType">
            <summary>
            Notification Enum
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.NotificationType.FailedDelivery">
            <summary>
            Failed Delivery Notification
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Engagement.TemplateType">
            <summary>
            Template Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.TemplateType.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Engagement.TemplateType.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Enrollment.Recommendations.RecommendationSource">
            <summary>
            Recommendation source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Enrollment.Recommendations.RecommendationSource.Unknown">
            <summary>
            Unknown source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Enrollment.Recommendations.RecommendationSource.BenSelect">
            <summary>
            BenSelect
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Enrollment.Recommendations.RecommendationSource.Nayya">
            <summary>
            Nayya
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Enrollment.Recommendations.RecommendationSource.Perky">
            <summary>
            Perky
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.FeedType">
            <summary>
            Type of object in activity
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FeedType.AllFeeds">
            <summary>
            Allow all feeds
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FeedType.EmployeeChat">
            <summary>
            Employee Chat request
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FeedType.AppointmentRequest">
            <summary>
            Employee Requesting an appointment
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.FileParameterType">
            <summary>
            File parameter type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.Unknown">
            <summary>
            The Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.Upload">
            <summary>
            The upload
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.ScheduledReport">
            <summary>
            The scheduled report
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.ReceivedReport">
            <summary>
            The received report
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.FileParameterType.FilePath">
            <summary>
            The file path
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.enmFormProviderType">
            <summary>
            Enum. Specifies the form provider type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.Default">
            <summary>
            Default document type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.PrudentialEOI">
            <summary>
            Prudential EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.AetnaEOI">
            <summary>
            Aetna EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.MetLifeEOI">
            <summary>
            MetLife EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.HartfordEOI">
            <summary>
            Hartford EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.AIGEOI">
            <summary>
            AIG EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.UnumEOI">
            <summary>
            AIG EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.LFGEOI">
            <summary>
            LFG EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.StandardEOI">
            <summary>
            Standard EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.DearbornEOI">
            <summary>
            Dearborn Life Insurance Company EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.GuardianEOI">
            <summary>
            Guardian EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.CignaEOI">
            <summary>
            Cigna EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.SunLifeEOI">
            <summary>
            Sun Life EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.BoonChapmanEOI">
            <summary>
            Boon Chapman EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.LfgMlpEOI">
            <summary>
            LFG MLP EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.StandardBrixEOI">
            <summary>
            Standard BRIX EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.RelianceStandardEOI">
            <summary>
            Reliance Standard EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.SymetraEOI">
            <summary>
            Symetra EOI bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.enmFormProviderType.BoonChapmanIPM">
            <summary>
            BoonChapman IPM as form provider bridge
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.HttpVerb">
            <summary>
            HTTP Verb types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.HttpVerb.GET">
            <summary>
            GET
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.HttpVerb.POST">
            <summary>
            POST
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.HttpVerb.PUT">
            <summary>
            PUT
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.HttpVerb.DELETE">
            <summary>
            DELETE
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.HttpVerb.PATCH">
            <summary>
            PATCH
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.IntegrationAction">
            <summary>
            Integration Event action
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Unset">
            <summary>
            Unset default value
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Approve">
            <summary>
            Approve events
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Reject">
            <summary>
            Reject events
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Resend">
            <summary>
            Resend events
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Delete">
            <summary>
            Delete events
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.Sync">
            <summary>
            Sync
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationAction.ProcessNow">
            <summary>
            Process events now
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ConfigurationType">
            <summary>
            Enum for integration configuration switches.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConfigurationType.None">
            <summary>
            No configurations are supported.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConfigurationType.Production">
            <summary>
            Production configuration.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ConfigurationType.Sandbox">
            <summary>
            Sandbox configuration.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.IntegrationEventDirection">
            <summary>
            Integration event direction enum
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationEventDirection.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationEventDirection.Inbound">
            <summary>
            The inbound
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationEventDirection.Outbound">
            <summary>
            The outbound
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.IntegrationProvider">
            <summary>
            Integration providers
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.Paylocity">
            <summary>
            Paylocity Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.WBEDX">
            <summary>
            WBEDX Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.Paycor">
            <summary>
            Paycor Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.Netchex">
            <summary>
            Netchex Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.Viventium">
            <summary>
            Viventium integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.ISolved">
            <summary>
            ISolved integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.ADP">
            <summary>
            ADP integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.Aflac">
            <summary>
            Everwell Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.HubSpot">
            <summary>
            HubSpot Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.BenSelectGroupWebHook">
            <summary>
            BenSelct Group Setup Web Hook integration.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationProvider.BenSelectGlobalWebHook">
            <summary>
            BenSelct Global Web Hook integration.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.IntegrationStatus">
            <summary>
            Integration
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationStatus.Unset">
            <summary>
            Unset value
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationStatus.Awaiting">
            <summary>
            Awaiting approval
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationStatus.Ready">
            <summary>
            Ready for processing
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationStatus.Success">
            <summary>
            Successfully processed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.IntegrationStatus.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.DeliveryStatus">
            <summary>
            Delivery status enum
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DeliveryStatus.OK">
            <summary>
            Delivery was ok.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.DeliveryStatus.Error">
            <summary>
            Delivery returned an error.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ReceiptStatus">
            <summary>
            Upload status enum
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReceiptStatus.OK">
            <summary>
            Upload was ok.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReceiptStatus.Error">
            <summary>
             Upload returned an error.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReceiptStatus.Warning">
            <summary>
            Upload returned an warning.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.ADP.ADPDepartmentSource">
            <summary>
            ADP department source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPDepartmentSource.Deparment">
            <summary>
            The deparment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPDepartmentSource.BusinessUnit">
            <summary>
            The business unit
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource">
            <summary>
            ADP job class source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource.BenefitsEligibilityClass">
            <summary>
            The benefits eligibility class
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource.UnionCode">
            <summary>
            The union code
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource.JobClass">
            <summary>
            The job class
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource.FLSA">
            <summary>
            The flsa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPJobClassSource.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.ADP.ADPLocationSource">
            <summary>
            ADP Location code
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPLocationSource.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPLocationSource.EEOEstablishment">
            <summary>
            The eeo establishment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.ADP.ADPLocationSource.PayrollGroupCode">
            <summary>
            The payroll group code
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.EventSource">
            <summary>
            Queue event source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.Unknown">
            <summary>
            Unknown source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.BenSelect">
            <summary>
            BenSelect source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.BenSelectGroupSetup">
            <summary>
            BenSelectGroupSetup source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.BenSelectGlobalSetup">
            <summary>
            BenSelectGlobalSetup source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.BenefitAgent">
            <summary>
            Benefit Agent source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.Payroll">
            <summary>
            Payroll integration source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.Payer">
            <summary>
            Payer integration source.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.Policy">
            <summary>The policy</summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.EventSource.Messaging">
            <summary>
            Messaging integration source.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.IntegrationPollingIntervalType">
            <summary>
            Enum for polling interval type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.IntegrationPollingIntervalType.Hours">
            <summary>
            The hours
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.IntegrationPollingIntervalType.Minutes">
            <summary>
            The minutes
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource">
            <summary>
            Enum for department source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource.Organization1">
            <summary>
            The organization1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource.Organization2">
            <summary>
            The organization2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource.Organization3">
            <summary>
            The organization3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource.Organization4">
            <summary>
            The organization4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedDepartmentSource.Organization5">
            <summary>
            The organization5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource">
            <summary>
            Enum for job class source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.EmploymentCategory">
            <summary>
            The Employment Category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.ACAStatus">
            <summary>
            The aca status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.EEOCategory">
            <summary>
            The eeo category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.Organization1">
            <summary>
            The organization1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.Organization2">
            <summary>
            The organization2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.Organization3">
            <summary>
            The organization3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.Organization4">
            <summary>
            The organization4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedJobClassSource.Organization5">
            <summary>
            The organization5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource">
            <summary>
            Enum for location source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.WorkLocationCode">
            <summary>
            The work location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.Organization1">
            <summary>
            The organization1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.Organization2">
            <summary>
            The organization2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.Organization3">
            <summary>
            The organization3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.Organization4">
            <summary>
            The organization4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.iSolved.ISolvedLocationSource.Organization5">
            <summary>
            The organization5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Paylocity.FrequencyOverride">
            <summary>
            Override deduction frequency for Paylocity
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.FrequencyOverride.Yes">
            <summary>
            The yes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.FrequencyOverride.No">
            <summary>
            The no
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocityGTLAmountSource">
            <summary>
            GTL amount source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocityGTLAmountSource.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocityGTLAmountSource.Units">
            <summary>
            The units
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocitySendFlexEmployeeCostType">
            <summary>
            SendFlexEmployeeCostType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocitySendFlexEmployeeCostType.Negative">
            <summary>
            Sent as negative amount
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Paylocity.PaylocitySendFlexEmployeeCostType.Positive">
            <summary>
            Sent as positive amount
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns">
            <summary>
            Supported integration columns for dashboard
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.ObjectType">
            <summary>
            The object type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.ObjectId">
            <summary>
            The object identifier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.EmployeeIdent">
            <summary>
            The employee ident
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.EmployeeId">
            <summary>
            The employee identifier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.EmployeeName">
            <summary>
            The employee name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.ObjectName">
            <summary>
            The object name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.SupportedDisplayColumns.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource">
            <summary>
            Enum for department source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource.CostCenter1">
            <summary>
            The cost center 1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource.CostCenter2">
            <summary>
            The cost center 2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource.CostCenter3">
            <summary>
            The cost center 3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource.CostCenter4">
            <summary>
            The cost center 4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumDepartmentSource.CostCenter5">
            <summary>
            The cost center 5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource">
            <summary>
            Enum for job class source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.EmployeeType">
            <summary>
            The employee type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.BenefitCategory">
            <summary>
            The benefit category
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.ACAStatus">
            <summary>
            The aca status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.CostCenter1">
            <summary>
            The cost center 1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.CostCenter2">
            <summary>
            The cost center 2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.CostCenter3">
            <summary>
            The cost center 3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.CostCenter4">
            <summary>
            The cost center 4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumJobClassSource.CostCenter5">
            <summary>
            The cost center 5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource">
            <summary>
            Enum for location source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.WorkLocation">
            <summary>
            The work location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CompanyName">
            <summary>
            The company name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.DivisionName">
            <summary>
            The division name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CompanyCode">
            <summary>
            The company code
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.DivisionCode">
            <summary>
            The division code
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CostCenter1">
            <summary>
            The cost center 1
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CostCenter2">
            <summary>
            The cost center 2
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CostCenter3">
            <summary>
            The cost center 3
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CostCenter4">
            <summary>
            The cost center 4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumLocationSource.CostCenter5">
            <summary>
            The cost center 5
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumPrimaryEmployeeSource">
            <summary>
            Source for primary employee determination in case of multiple employees with the same SSN in different Divisions
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumPrimaryEmployeeSource.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.Viventium.ViventiumPrimaryEmployeeSource.MaxHoursWorked">
            <summary>
            The maximum hours worked
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Integration.WBEDX.ChangeType">
            <summary>
            Change type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.WBEDX.ChangeType.CoverageChanges">
            <summary>
            The coverage changes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Integration.WBEDX.ChangeType.DemographicChanges">
            <summary>
            The demographic changes
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.LifeEventItemType">
            <summary>
            LifeEventItemType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Select">
            <summary>
            Select life event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.NewEmployee">
            <summary>
            NewEmployee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Rehire">
            <summary>
            Rehire
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.ChangeAddress">
            <summary>
            ChangeAddress
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Marriage">
            <summary>
            Marriage
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Divorce">
            <summary>
            Divorce
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Birth">
            <summary>
            Birth
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Death">
            <summary>
            Death
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.AgeLimit">
            <summary>
            AgeLimit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.ChangeBeneficiary">
            <summary>
            ChangeBeneficiary
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.ChangeSpouseEmployment">
            <summary>
            ChangeSpouseEmployment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.RegainDependent">
            <summary>
            RegainDependent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.LeaveOfAbsence">
            <summary>
            LeaveOfAbsence
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.ReturnFromLeave">
            <summary>
            ReturnFromLeave
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Retired">
            <summary>
            Retired
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.ReturnFromRetire">
            <summary>
            ReturnFromRetire
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.CoverageChange">
            <summary>
            CoverageChange
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.CourtOrderedCoverage">
            <summary>
            CourtOrderedCoverage
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.PIN">
            <summary>
            PIN
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LifeEventItemType.Reenroll">
            <summary>
            Reenroll
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.LoginResult">
            <summary>
            Login Status Code and Message
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.Unknown">
            <summary>
            Unknown
            </summary>        
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.Failure">
            <summary>
            General Login Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.TwoFactorAuthInvalid">
            <summary>
            Two Factor Auth Needed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.NonUnique">
            <summary>
            Non-unique Login Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.LogonLockWarning">
            <summary>
            Logon Lock Warning Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.LogonLock">
            <summary>
            Logon Locked Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.SelerixException">
            <summary>
            Selerix Exception Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.UndeterminableIPAddress">
            <summary>
            Undeterminable IP Address Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.NotAllowedFromIPAddress">
            <summary>
            Not Allowed From IP Address Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.PermissionDenied">
            <summary>
            Permission Denied Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.AccountNotActivated">
            <summary>
            Account Not Activated Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.AccountDormant">
            <summary>
            Account Dormant Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.AccountExpired">
            <summary>
            Account Expired Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.DataValidation">
            <summary>
            Data Validation Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.DataMissing">
            <summary>
            Data Missing Logon Failure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.LoginResult.CaseNotChosen">
            <summary>
            Case Not Chosen Logon Failure
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.NetchexDepartmentSource">
            <summary>
            Enum for department source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexDepartmentSource.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexDepartmentSource.Division">
            <summary>
            Division
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexDepartmentSource.BussinessUnit">
            <summary>
            Bissiness Unit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexDepartmentSource.Department">
            <summary>
            Department
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.NetchexJobClassSource">
            <summary>
            Enum for job class source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexJobClassSource.EmployeeType">
            <summary>
            The employee type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexJobClassSource.PayType">
            <summary>
            The pay type
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.NetchexLocationSource">
            <summary>
            Enum for location source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexLocationSource.CompanyCode">
            <summary>
            The Company code
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexLocationSource.Division">
            <summary>
            The Devision
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexLocationSource.BussinessUnit">
            <summary>
            The BussinessUnit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexLocationSource.Department">
            <summary>
            The Department
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.NetchexLocationSource.Location">
            <summary>
            The Location
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.OAuthType">
            <summary>
            OAauth Types enum
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.BASIC">
            <summary>
            Basic type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.OAUTH2_CLIENT_CREDENTIALS">
            <summary>
            Oauth2 (Client Credentials)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.OAUTH2_CLIENT_CREDENTIALS_BASIC">
            <summary>
            Oauth2 Basic (Client Credentials)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.OAUTH2_PASSWORD">
            <summary>
            Oauth2 (Password)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.OAUTH2_JWT">
            <summary>
            Oauth2 (JWT)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.CLIENT_CERT">
            <summary>
            Client Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.OAuthType.CLIENT_CREDENTIALS">
            <summary>
            Client credentials
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.PaycorDepartmentSource">
            <summary>
            Enum for department source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorDepartmentSource.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorDepartmentSource.DepartmentDescription">
            <summary>
            Department description
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.PaycorJobClassSource">
            <summary>
            Enum for job class source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorJobClassSource.BenefitClassification">
            <summary>
            The benefit classification
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorJobClassSource.PayGroup">
            <summary>
            The pay group
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorJobClassSource.StatusType">
            <summary>
            The status type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorJobClassSource.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.PaycorLocationSource">
            <summary>
            Enum for location source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorLocationSource.ClientID">
            <summary>
            The client identifier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorLocationSource.WorkLocation">
            <summary>
            The work location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorLocationSource.DepartmentDescription">
            <summary>
            The department description
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.PaycorLocationSource.PayGroup">
            <summary>
            The pay group
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Placement">
            <summary>
            Placement types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.Default">
            <summary>
            Default Placement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.Header">
            <summary>
            Header placement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.Jumbotron">
            <summary>
            Jumbotron placement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.BodyLeft">
            <summary>
            Body left placement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.BodyRight">
            <summary>
            Body right placement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Placement.Footer">
            <summary>
            Footer placement
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.Portal">
            <summary>
            Portal types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.General">
            <summary>
            General site
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.Admin">
            <summary>
            Admin site
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.Enroll">
            <summary>
            Enroll site
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.Agent">
            <summary>
            Benefit Agent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.HR">
            <summary>
            HR portal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.Engagement">
            <summary>
            Engagement portal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.Portal.Employee">
            <summary>
            Employee portal
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ReportEditorMode">
            <summary>
            View modes for the report editor
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportEditorMode.Simple">
            <summary>
            Simple mode - used in QuickReport.aspx
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportEditorMode.Full">
            <summary>
            Full mode - used when editing the report definition
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportEditorMode.Custom">
            <summary>
            Custom mode - used for custom category parameters
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ReportProcessStatus">
            <summary>
            Report Process Status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportProcessStatus.InQueue">
            <summary>
            InQueue
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportProcessStatus.Getting">
            <summary>
            Getting
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportProcessStatus.Processing">
            <summary>
            Processing
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportProcessStatus.NotExecuted">
            <summary>
            NotExecuted
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ReportProcessStatus.Complete">
            <summary>
            Complete
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.SiteSetupType">
            <summary>
            Site Setup types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.SiteSetupType.EngageCode">
            <summary>
            Engage code.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.SiteSetupType.ShortUrl">
            <summary>
            Short url.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.ThemeGroup">
            <summary>
            Theme group types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ThemeGroup.Legacy">
            <summary>
            Legacy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ThemeGroup.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ThemeGroup.Prime">
            <summary>
            Prime
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.ThemeGroup.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType">
            <summary>
            Location type to send two factor auth codes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType.Unknown">
            <summary>
            Default value, invalid option
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType.Email">
            <summary>
            Send to email address
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType.SMS">
            <summary>
            Send to text message to phone number
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType.Voice">
            <summary>
            Send requested two factor code via voice call
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.TwoFactorAuthRequestType.App">
            <summary>
            Send requested two factor code via OTP Authenticator app
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.UploadDisplayType">
            <summary>
            UploadDisplayType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadDisplayType.AllUploads">
            <summary>
            All uploads
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadDisplayType.SessionUploads">
            <summary>
            The session uploads
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.UploadOption">
            <summary>
            Upload option
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadOption.Unknown">
            <summary>
            Unknown location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadOption.EmployeePerson">
            <summary>
            Upload to employee person
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadOption.Person">
            <summary>
            Upload to person
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.UploadOption.Employee">
            <summary>
            Upload to employee
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Enumerations.WebHookAuthType">
            <summary>
            WebHook Auth Types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.WebHookAuthType.NONE">
            <summary>
            No authentication required
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Enumerations.WebHookAuthType.API_KEY">
            <summary>
            Use API Key for authentication and authorization
            </summary>
        </member>
        <member name="T:Selerix.Foundation.LifeEventProcessingStep">
            <summary>
            Indicates what step the event is on
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LifeEventProcessingStep.NotBegun">
            <summary>
            The employee has not begun processing the event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LifeEventProcessingStep.Completed">
            <summary>
            The event has been completed by the employee
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ApplicationCoverageReason">
            <summary>
            384 coverage termination codes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Add">
            <summary>
            Add.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Marriage">
            <summary>
            Marriage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Divorce">
            <summary>
            Divorce event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.LegalSeparation">
            <summary>
            Legal separation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.NameChange">
            <summary>
            Name change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.AddressChange">
            <summary>
            Address change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Transferred">
            <summary>
            Transferred.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.JobClassChanged">
            <summary>
            Job class change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentUnspecified">
            <summary>
            TerminatedEmploymentUnspecified
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.BirthOfChild">
            <summary>
            Birth of child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.AdoptionOfChild">
            <summary>
            Adoption of child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.DeathOfSpouse">
            <summary>
            Death of spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.DeathOfDependent">
            <summary>
            Death of dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.AgeLimitAttained">
            <summary>
            AgeLimitAttained
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.BeneficiaryChange">
            <summary>
            Beneficiary change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.SpouseEmploymentChange">
            <summary>
            Spouse employment change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.RegainDependent">
            <summary>
            Regain dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.SalaryChanged">
            <summary>
            Salary changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.LeaveOfAbsence">
            <summary>
            Leave of absence.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.ReturnFromLeave">
            <summary>
            Return from leave.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Rehire">
            <summary>
            Re-hire.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Declined">
            <summary>
            Declined by carrier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentLayoff">
            <summary>
            TerminatedEmploymentLayoff
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.WithdrawnByApplicant">
            <summary>
            WithdrawnByApplicant
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.CustomFieldChange">
            <summary>
            Custom field change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.ReturnFromRetire">
            <summary>
            Return from retire.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.PayGroupChange">
            <summary>
            Pay group change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentOther">
            <summary>
            TerminatedEmploymentOther
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentResignation">
            <summary>
            TerminatedEmploymentResignation
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.NumberOfHoursChange">
            <summary>
            Number of hours is changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.DependentDeleted">
            <summary>
            Dependent is manually deleted
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.COBRAStart">
            <summary>
            COBRA start date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.COBRAEnd">
            <summary>
            COBRA end date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.CourtOrder">
            <summary>
            Court-ordered enrollment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.CourtOrderAddDependent">
            <summary>
            Court-ordered enrollment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.WagesChanged">
            <summary>
            Wages Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.DateOfHireChange">
            <summary>
            Date of Hire changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.EligibilityDateChange">
            <summary>
            Eligibility date changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.FTERateChanged">
            <summary>
            FTE Rate Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminationDateChanged">
            <summary>
            Termination Date Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TitleChanged">
            <summary>
            Job title changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentRetired">
            <summary>
            TerminatedEmploymentRetired
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentVoluntary">
            <summary>
            TerminatedEmploymentVoluntary
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminationOfBenefits">
            <summary>
            TerminationOfBenefits
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentGrossMisconduct">
            <summary>
            TerminatedEmploymentGrossMisconduct
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEmploymentDeath">
            <summary>
            TerminatedEmploymentDeath
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ApplicationCoverageReason.TerminatedEndOfAssignment">
            <summary>
            TerminatedEndOfAssignment
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ExcelCellLocation">
            <summary>
            Used to describe a location on a spreadsheet
            </summary>
        </member>
        <member name="P:Selerix.Foundation.ExcelCellLocation.SheetName">
            <summary>
            The name of the spreadsheet for this cell.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.ExcelCellLocation.Row">
            <summary>
            The first row to write data to.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.ExcelCellLocation.Column">
            <summary>
            The first column to write data to.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.ExcelCellLocation.SheetIndex">
            <summary>
            The sheet index.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.ExcelCellLocation.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="sheetName"></param>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="T:Selerix.Foundation.DateExtensions">
            <summary>
            Date time extansion methods
            </summary>
        </member>
        <member name="M:Selerix.Foundation.DateExtensions.ToUtcEndOfDay(System.DateTime,System.String)">
            <summary>
            Converts to utc end of day.
            </summary>
            <param name="value">The value.</param>
            <param name="timeZoneId">The time zone identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.DateExtensions.ToUtcBeginningOfDay(System.DateTime,System.String)">
            <summary>
            Converts to utc beginning of day.
            </summary>
            <param name="value">The value.</param>
            <param name="timeZoneId">The time zone identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.DateExtensions.FromUtc(System.DateTime,System.String)">
            <summary>
            Froms the UTC.
            </summary>
            <param name="value">The value.</param>
            <param name="timeZoneId">The time zone identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.StringExtensions">
            <summary>
            string extensions
            </summary>
        </member>
        <member name="M:Selerix.Foundation.StringExtensions.TrimIfNotNull(System.String)">
            <summary>
            Does null check before string.Trim()
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.FormType">
            <summary>
            Enum. Indicates the type of form the applicant is completing.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.Application">
            <summary>
            Application.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.Replacement">
            <summary>
            Replacement.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.CoverageOutline">
            <summary>
            Coverage outline.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.PaymentAuthorization">
            <summary>
            Payment authorization.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.DependentStatus">
            <summary>
            Dependent status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.LeaveAuthorization">
            <summary>
            Leave authorization.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.PaidTimeOffAuthorization">
            <summary>
            Paid Time Off authorization.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.BenefitsVerification">
            <summary>
            The benefits verification
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormType.ACA">
            <summary>
            ACA
            </summary>
        </member>
        <member name="T:Selerix.Foundation.FormProviderType">
            <summary>
            Enum. Indicates the type of form provider.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.Internal">
            <summary>
            Internal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.PrudentialEOI">
            <summary>
            Prudential EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.AetnaEOI">
            <summary>
            Aetna EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.MetLifeEOI">
            <summary>
            MetLife EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.HartfordEOI">
            <summary>
            Hartford EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.AIGEOI">
            <summary>
            AIG EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.UnumEOI">
            <summary>
            Unum EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.LFGEOI">
            <summary>
            LFG EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.StandardEOI">
            <summary>
            Standard EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.DearbornEOI">
            <summary>
            Dearborn EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.GuardianEOI">
            <summary>
            Guardian EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.CignaEOI">
            <summary>
            Cigna EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.SunLifeEOI">
            <summary>
            SunLife EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.BoonChapmanEOI">
            <summary>
            Boon Chapman EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.LfgMlpEOI">
            <summary>
            LFG MLP EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.StandardBrixEOI">
            <summary>
            Standard BRIX EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.RelianceStandardEOI">
            <summary>
            Reliance Standard EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.SymetraEOI">
            <summary>
            Symetra EOI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormProviderType.BoonChapmanIPM">
            <summary>
            BoonChapman IPM as form provider bridge
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SignatureMode">
            <summary>
            Enum. Indicates the type of signature used to sign the application.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.PinOrDigitized">
            <summary>
            Pin or digitized.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.Pin">
            <summary>
            Pin.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.DigitizedSignature">
            <summary>
            Digitized signature.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.VoiceConfirmation">
            <summary>
            Voice confirmation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.PINorDigitizedorVoice">
            <summary>
            PINorDigitizedorVoice
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureMode.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ILog">
            <summary>
            Interface ILog
            </summary>
        </member>
        <member name="P:Selerix.Foundation.ILog.IsFatalEnabled">
            <summary>
            Gets a value indicating whether this instance is fatal enabled.
            </summary>
            <value><c>true</c> if this instance is fatal enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.ILog.IsDebugEnabled">
            <summary>
            Gets a value indicating whether this instance is debug enabled.
            </summary>
            <value><c>true</c> if this instance is debug enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.ILog.IsErrorEnabled">
            <summary>
            Gets a value indicating whether this instance is error enabled.
            </summary>
            <value><c>true</c> if this instance is error enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.ILog.IsInfoEnabled">
            <summary>
            Gets a value indicating whether this instance is information enabled.
            </summary>
            <value><c>true</c> if this instance is information enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.ILog.IsWarnEnabled">
            <summary>
            Gets a value indicating whether this instance is warn enabled.
            </summary>
            <value><c>true</c> if this instance is warn enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Selerix.Foundation.ILog.Debug(System.Object)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Debug(System.Object,System.Exception)">
            <summary>
            Debugs the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.DebugFormat(System.String,System.Object[])">
            <summary>
            Debugs the format.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.DebugData(System.Object,System.String,System.Boolean)">
            <summary>
            Debug the specified message and attach data file.
            </summary>
            <param name="message">The message.</param>
            <param name="data">Attached data.</param>
            <param name="isXml">true if attached data is xml.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Fatal(System.Object)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Fatal(System.Object,System.Exception)">
            <summary>
            Fatals the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.FatalFormat(System.String,System.Object[])">
            <summary>
            Fatals the format.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Error(System.Object)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Error(System.Object,System.Exception)">
            <summary>
            Errors the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.ErrorFormat(System.String,System.Object[])">
            <summary>
            Errors the format.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Info(System.Object)">
            <summary>
            Informations the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Info(System.Object,System.Exception)">
            <summary>
            Informations the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.InfoFormat(System.String,System.Object[])">
            <summary>
            Informations the format.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Warn(System.Object)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.Warn(System.Object,System.Exception)">
            <summary>
            Warns the specified message.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Selerix.Foundation.ILog.WarnFormat(System.String,System.Object[])">
            <summary>
            Warns the format.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Selerix.Foundation.Images.BitonalConverter">
            <summary> 
                <see href="http://www.codeproject.com/Articles/15186/Bitonal-TIFF-Image-Converter-for-NET" /> 
            </summary> 
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.ConvertToRGB(System.Drawing.Bitmap)">
            <summary>
            Converts to RGB.
            </summary>
            <param name="original">The original image.</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.ConvertToBitonal(System.Drawing.Bitmap)">
            <summary>
            Converts to bitonal image.
            </summary>
            <param name="original">The original.</param>
            <returns>Bitmap.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.FlattenTiff(System.String,System.String)">
            <summary>
            Flattens the tiff.
            </summary>
            <param name="filename">The filename.</param>
            <param name="newfile">The newfile.</param>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.GetEncoderInfo(System.String)">
            <summary>
            Gets the encoder information.
            </summary>
            <param name="mimeType">Type of the MIME.</param>
            <returns>ImageCodecInfo.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.CopyToBpp(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Copies a bitmap into a 1bpp/8bpp bitmap of the same dimensions, fast
            </summary>
            <param name="b">original bitmap</param>
            <param name="bpp">1 or 8, target bpp</param>
            <returns>a 1bpp copy of the bitmap</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.SplashImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Draws a bitmap onto the screen. Note: this will be overpainted
            by other windows when they come to draw themselves. Only use it
            if you want to draw something quickly and can't be bothered with forms.
            </summary>
            <param name="b">the bitmap to draw on the screen</param>
            <param name="x">x screen coordinate</param>
            <param name="y">y screen coordinate</param>
        </member>
        <member name="M:Selerix.Foundation.Images.BitonalConverter.FaqCopyTo1bpp(System.Drawing.Bitmap)">
            <summary>
            Copies a bitmap into a 1bpp bitmap of the same dimensions, slowly, using code from Bob Powell's GDI+ faq http://www.bobpowell.net/onebit.htm
            </summary>
            <param name="b">original bitmap</param>
            <returns>a 1bpp copy of the bitmap</returns>
        </member>
        <member name="T:Selerix.Foundation.Images.TiffUtil">
            <summary>
            Utilities to work with tiff images
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Images.TiffUtil"/> class.
            </summary>
            <param name="tempPath">The temp path.</param>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getPageCount(System.String)">
            <summary>
            Gets the page count.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getPageCount(System.Drawing.Image)">
            <summary>
            Gets the page count.
            </summary>
            <param name="img">The img.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImages(System.Drawing.Image,System.Int32[])">
            <summary>
            Gets the tiff images.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="pageNumbers">The page numbers.</param>
            <returns>System.Drawing.Image[][].</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImages(System.Drawing.Image)">
            <summary>
            Gets the tiff images.
            </summary>
            <param name="sourceImage">The source image.</param>
            <returns>System.Drawing.Image[][].</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImages(System.String,System.Int32[])">
            <summary>
            Gets the tiff images.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="pageNumbers">The page numbers.</param>
            <returns>System.Drawing.Image[][].</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImage(System.String,System.Int32)">
            <summary>
            Gets the tiff image.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="pageNumber">The page number.</param>
            <returns>System.Drawing.Image.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImage(System.Drawing.Image,System.Int32)">
            <summary>
            Gets the tiff image.
            </summary>
            <param name="sourceImage">The source image.</param>
            <param name="pageNumber">The page number.</param>
            <returns>System.Drawing.Image.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.getTiffImage(System.String,System.String,System.Int32)">
            <summary>
            Gets the tiff image.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="targetFile">The target file.</param>
            <param name="pageNumber">The page number.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.splitTiffPages(System.String,System.String)">
            <summary>
            Splits the tiff pages.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="targetDirectory">The target directory.</param>
            <returns>System.String[][].</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.splitTiffPages(System.Drawing.Image)">
            <summary>
            Splits the tiff pages.
            </summary>
            <param name="sourceImage">The source image.</param>
            <returns>System.Drawing.Image[][].</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.mergeTiffPages(System.String[],System.String)">
            <summary>
            Merges the tiff pages.
            </summary>
            <param name="sourceFiles">The source files.</param>
            <param name="targetFile">The target file.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.mergeTiffPages(System.String,System.String,System.Int32[])">
            <summary>
            Merges the tiff pages.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="targetFile">The target file.</param>
            <param name="pageNumbers">The page numbers.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.mergeTiffPagesAlternate(System.String,System.String,System.Int32[])">
            <summary>
            Merges the tiff pages alternate.
            </summary>
            <param name="sourceFile">The source file.</param>
            <param name="targetFile">The target file.</param>
            <param name="pageNumbers">The page numbers.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.mergeTiffStreams(System.IO.MemoryStream[])">
            <summary>
            Merges the tiff streams.
            </summary>
            <param name="tifsStream">The tifs stream.</param>
            <returns>System.IO.MemoryStream.</returns>
        </member>
        <member name="M:Selerix.Foundation.Images.TiffUtil.JoinTiffImages(System.String[],System.String,System.Drawing.Imaging.EncoderValue)">
            <summary>
            This function will join the TIFF file with a specific compression format
            </summary>
            <param name="imageFiles">string array with source image files</param>
            <param name="outFile">target TIFF file to be produced</param>
            <param name="compressEncoder">compression codec enum</param>
        </member>
        <member name="T:Selerix.Foundation.IRateParam">
            <summary>
            Rate parameter interface
            </summary>
        </member>
        <member name="P:Selerix.Foundation.IRateParam.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Selerix.Foundation.IRateParam.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsTier">
            <summary>
            Determines whether this instance is tier.
            </summary>
            <returns>
              <c>true</c> if this instance is tier; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsAge">
            <summary>
            Determines whether this instance is age.
            </summary>
            <returns>
              <c>true</c> if this instance is age; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsBenefitLevel">
            <summary>
            Determines whether [is benefit level].
            </summary>
            <returns>
              <c>true</c> if [is benefit level]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsGender">
            <summary>
            Determines whether this instance is gender.
            </summary>
            <returns>
              <c>true</c> if this instance is gender; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsMultipleOfSalary">
            <summary>
            Determines whether [is multiple of salary].
            </summary>
            <returns>
              <c>true</c> if [is multiple of salary]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsPercentOfSalary">
            <summary>
            Determines whether [is percent of salary].
            </summary>
            <returns>
              <c>true</c> if [is percent of salary]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsBenefitAmount(System.Boolean)">
            <summary>
            Determines whether [is benefit amount] [the specified find exact match].
            </summary>
            <param name="findExactMatch">if set to <c>true</c> [find exact match].</param>
            <returns>
              <c>true</c> if [is benefit amount] [the specified find exact match]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsUnits">
            <summary>
            Determines whether this instance is units.
            </summary>
            <returns>
              <c>true</c> if this instance is units; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsRelationship">
            <summary>
            Determines whether this instance is relationship.
            </summary>
            <returns>
              <c>true</c> if this instance is relationship; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.IRateParam.IsState">
            <summary>
            Determines whether this instance is state.
            </summary>
            <returns>
              <c>true</c> if this instance is state; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Selerix.Foundation.IRateParam.ParamType">
            <summary>
            Gets or sets the type of the parameter.
            </summary>
            <value>
            The type of the parameter.
            </value>
        </member>
        <member name="T:Selerix.Foundation.IVersionObject`1">
            <summary>
            Interface IVersionObject
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.GetUniqueID(`0)">
            <summary>
            Gets the unique identifier.
            </summary>
            <param name="model">The model.</param>
            <returns>Guid.</returns>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.SetUniqueID(`0,System.Guid)">
            <summary>
            Sets the unique identifier.
            </summary>
            <param name="model">The model.</param>
            <param name="guid">The unique identifier.</param>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.Commit(`0)">
            <summary>
            Commits the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.Revert(`0,System.Int32)">
            <summary>
            Reverts the specified model.
            </summary>
            <param name="model">The model.</param>
            <param name="version">The version.</param>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.Save(`0)">
            <summary>
            Saves the specified model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.GetVersionFileAsString(`0,System.Int32)">
            <summary>
            Gets the version file as string.
            </summary>
            <param name="model">The model.</param>
            <param name="version">The version.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.IVersionObject`1.GetVersionHistory(`0)">
            <summary>
            Gets the version history.
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;VersionInformation&gt;.</returns>
        </member>
        <member name="T:Selerix.Foundation.ILockableObject`1">
            <summary>
            Interface ILockableObject
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetUserIDsWithAccess(`0)">
            <summary>
            Gets the user i ds with access.
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetUserIDsWithAccess(`0,System.Collections.Generic.List{System.Int32})">
            <summary>
            Sets the user i ds with access.
            </summary>
            <param name="model">The model.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetUserAndGroupIDsWithAccess(`0)">
            <summary>
            Gets the user and group i ds with access.
            </summary>
            <param name="model">The model.</param>
            <returns>List&lt;System.Int32&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetUserAndGroupIDsWithAccess(`0,System.Collections.Generic.List{System.Int32})">
            <summary>
            Sets the user and group i ds with access.
            </summary>
            <param name="model">The model.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetUnlockedForSession(`0)">
            <summary>
            Gets the unlocked for session.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetIsLocked(`0)">
            <summary>
            Gets the is locked.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetIsLocked(`0,System.Boolean)">
            <summary>
            Sets the is locked.
            </summary>
            <param name="model">The model.</param>
            <param name="locked">if set to <c>true</c> [locked].</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetLockIfUnlockedButCaseLocked(`0)">
            <summary>
            Gets the lock if unlocked but case locked.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SessionUnlock(`0)">
            <summary>
            Sessions the unlock.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SessionLock(`0)">
            <summary>
            Sessions the lock.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetIsCopyConfigurable(`0)">
            <summary>
            Gets the is copy configurable.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetIsExportConfigurable(`0)">
            <summary>
            Gets the is export configurable.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetIsScheduleConfigurable(`0)">
            <summary>
            Gets the is schedule configurable.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetDisableCopyWhenLocked(`0)">
            <summary>
            Gets the disable copy when locked.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetDisableCopyWhenLocked(`0,System.Boolean)">
            <summary>
            Sets the disable copy when locked.
            </summary>
            <param name="model">The model.</param>
            <param name="disableCopyWhenLocked">if set to <c>true</c> [disable copy when locked].</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetDisableExportWhenLocked(`0)">
            <summary>
            Gets the disable export when locked.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetDisableExportWhenLocked(`0,System.Boolean)">
            <summary>
            Sets the disable export when locked.
            </summary>
            <param name="model">The model.</param>
            <param name="disableExportWhenLocked">if set to <c>true</c> [disable export when locked].</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetDisableSchedule(`0)">
            <summary>
            Gets the disable schedule.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetDisableSchedule(`0,System.Boolean)">
            <summary>
            Sets the disable schedule.
            </summary>
            <param name="model">The model.</param>
            <param name="disableSchedule">if set to <c>true</c> [disable schedule].</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetName(`0)">
            <summary>
            Gets the name.
            </summary>
            <param name="model">The model.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetFileExtension(`0)">
            <summary>
            Gets the file extension.
            </summary>
            <param name="model">The model.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetMostRecentComment(`0)">
            <summary>
            Gets the most recent comment.
            </summary>
            <param name="model">The model.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetMostRecentComment(`0,System.String)">
            <summary>
            Sets the most recent comment.
            </summary>
            <param name="model">The model.</param>
            <param name="mostRecentComment">The most recent comment.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetLastChangedBy(`0)">
            <summary>
            Gets the last changed by.
            </summary>
            <param name="model">The model.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetLastChangedBy(`0,System.String)">
            <summary>
            Sets the last changed by.
            </summary>
            <param name="model">The model.</param>
            <param name="lastChangedBy">The last changed by.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetAsOfDate(`0)">
            <summary>
            Gets as of date.
            </summary>
            <param name="model">The model.</param>
            <returns>System.Nullable&lt;DateTime&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.SetAsOfDate(`0,System.Nullable{System.DateTime})">
            <summary>
            Sets as of date.
            </summary>
            <param name="model">The model.</param>
            <param name="asOfDate">As of date.</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetObjectTypeName(`0)">
            <summary>
            Gets the name of the object type.
            </summary>
            <param name="model">The model.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.GetGlobal(`0)">
            <summary>
            Gets the global.
            </summary>
            <param name="model">The model.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.Update(`0,System.Boolean)">
            <summary>
            Updates the specified model.
            </summary>
            <param name="model">The model.</param>
            <param name="updateAccessList">if set to <c>true</c> [update access list].</param>
        </member>
        <member name="M:Selerix.Foundation.ILockableObject`1.Update(`0,System.Boolean,System.DateTime)">
            <summary>
            Updates the specified model.
            </summary>
            <param name="model">The model.</param>
            <param name="updateAccessList">if set to <c>true</c> [update access list].</param>
            <param name="asofdate">The asofdate.</param>
        </member>
        <member name="T:Selerix.Foundation.VersionInformation">
            <summary>
            Plugin version Info
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.VersionInformation.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.VersionInformation.User">
            <summary>
            Gets or sets the user.
            </summary>
            <value>The user.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.VersionInformation.ChangeDate">
            <summary>
            Gets or sets the change date.
            </summary>
            <value>The change date.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.VersionInformation.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>The comment.</value>
            <remarks></remarks>
        </member>
        <member name="P:Selerix.Foundation.VersionInformation.Size">
            <summary>
            Gets or sets the size of archive
            </summary>
            <value>The size.</value>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.VersionInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.VersionInformation.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.VersionInformation"/> class.
            </summary>
            <param name="properties">The properties.</param>
            <remarks></remarks>
        </member>
        <member name="M:Selerix.Foundation.VersionInformation.ToDictionary">
            <summary>
            Toes the dictionary of version properties
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="T:Selerix.Foundation.JScriptRuntimeException">
            <summary>
            Thrown for JScript runtime errors.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.JScriptRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.JScriptRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.JScriptRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.JScriptRuntimeException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Selerix.Foundation.JScriptRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.JScriptRuntimeException"/> class.
            </summary>
            <param name="message">The message that displays when the exception is thrown.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="M:Selerix.Foundation.JScriptRuntimeException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.JScriptRuntimeException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="xml">The XML.</param>
            <param name="redirectURL">The redirect URL.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="T:Selerix.Foundation.SelerixJScriptRuntimeException">
            <summary>
            A custom exception used for displaying error messages
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SelerixJScriptRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixJScriptRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SelerixJScriptRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixJScriptRuntimeException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Selerix.Foundation.SelerixJScriptRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixJScriptRuntimeException"/> class.
            </summary>
            <param name="message">The message that displays when the exception is thrown.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="M:Selerix.Foundation.SelerixJScriptRuntimeException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixJScriptRuntimeException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="xml">The XML.</param>
            <param name="redirectURL">The redirect URL.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="T:Selerix.Foundation.LogManager">
            <summary>
            Class LogManager.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.LogManager.Configure">
            <summary>
            Configures log.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.LogManager.ConfigureAndWatch(System.IO.FileInfo)">
            <summary>
            Configures log from configuration file.
            </summary>
            <param name="configFile">The configuration file.</param>
        </member>
        <member name="M:Selerix.Foundation.LogManager.GetLogger(System.String)">
            <summary>
            Gets the logger.
            </summary>
            <param name="name">The name.</param>
            <returns>ILog.</returns>
        </member>
        <member name="M:Selerix.Foundation.LogManager.GetLogger(System.Type)">
            <summary>
            Gets the logger.
            </summary>
            <param name="type">The type.</param>
            <returns>ILog.</returns>
        </member>
        <member name="M:Selerix.Foundation.LogManager.GetLogDirectory">
            <summary>
            Gets the log directory.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Selerix.Foundation.LogManager.GetLogFilePath">
            <summary>
            Gets the root log file path if file logging is enabled.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.MessageReminderType">
            <summary>
            Message Reminder Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MessageReminderType.Standard">
            <summary>
            Standard
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MessageReminderType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:Selerix.Foundation.NamedMutex">
            <summary>
            A named mutex is better than a synclock because it works across process boundaries. Example: using (var mutex = new NamedMutex("WriteToLogFile")) {
            </summary>
        </member>
        <member name="M:Selerix.Foundation.NamedMutex.#ctor(System.String)">
            <summary>
            Creates a named mutex and locks it until the object goes out of scope. Example: using (var mutex = new NamedMutex("WriteToLogFile")) {
            </summary>
            <param name="name">The name of the mutex.</param>
        </member>
        <member name="M:Selerix.Foundation.NamedMutex.Dispose">
            <summary>
            Implement IDisposable. Do not make this method virtual. A derived class should not be able to override this method.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.NamedMutex.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the
            runtime from inside the finalizer and you should not reference
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">True if called from user code</param>
        </member>
        <member name="T:Selerix.Foundation.PayHistoryWageType">
            <summary>
            Enum PayHistoryWageType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PayHistoryWageType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PayHistoryWageType.Hourly">
            <summary>
            The hourly
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PayHistoryWageType.Salary">
            <summary>
            The salary
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PaymentType">
            <summary>
            Enum. Specifies the attributes of how an applicant pays for coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.Payroll">
            <summary>
            Payroll.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.Bankdraft">
            <summary>
            Bank draft.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.Creditcard">
            <summary>
            Credit card.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.Invoice">
            <summary>
            Invoice.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.AuthorizeNetPaymentProvider">
            <summary>
            Payment using an AuthorizeNet Payment Provider.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.PaylogixPaymentProvider">
            <summary>
            Payment using an Paylogix Payment Provider.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PaymentType.PiopacPaymentProvider">
            <summary>
            Payment using an PIOPAC Payment Provider.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CreditType">
            <summary>
            Enum. Specifies the credit card type. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CreditType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CreditType.AmericanExpress">
            <summary>
            AmericanExpress. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CreditType.Mastercard">
            <summary>
            Mastercard.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CreditType.Visa">
            <summary>
            Visa.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CreditType.Discover">
            <summary>
            Discover
            </summary>
        </member>
        <member name="T:Selerix.Foundation.BankType">
            <summary>
            Enum. Specifies if the account is a checking or savings account.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankType.Checking">
            <summary>
            Checking.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankType.Saving">
            <summary>
            Saving.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.BankAccountType">
            <summary>
            Enum. Specifies the type of bank account.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankAccountType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankAccountType.Personal">
            <summary>
            Personal.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.BankAccountType.Corporate">
            <summary>
            Corporate.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PresentationType">
            <summary>
            Presentation type enumeration.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.Document">
            <summary>
            Document.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.Link">
            <summary>
            Link.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.Video">
            <summary>
            Video.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.Website">
            <summary>
            Website.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationType.TextBank">
            <summary>
            TextBank.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PresentationPlace">
            <summary>
            Presentation place.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationPlace.Main">
            <summary>
            The main
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationPlace.DecisionSupportResources">
            <summary>
            The decision support resources
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PresentationPlace.AdvertisingResources">
            <summary>
            Advertising resources
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ProductType">
            <summary>
            Enum. Indicates the product type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Unknown">
            <summary>
            Unknown product type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Health">
            <summary>
            Health product.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Dental">
            <summary>
            Dental product.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Vision">
            <summary>
            Vision product.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.PrescriptionDrugs">
            <summary>
            Prescription drugs.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.HealthSavingsAccount">
            <summary>
            Health Savings Account.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.HealthCareFSA">
            <summary>
            Health Care FSA.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.DependentCareFSA">
            <summary>
            Dependent Care FSA.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.ShortTermDisability">
            <summary>
            Short-Term Disability.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.LongTermDisability">
            <summary>
            Long-Term Disability.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.BasicTermLifeandADD">
            <summary>
            Basic Term Life and ADD.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.OptionalTermLife">
            <summary>
            Optional Term Life.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.OptionalADD">
            <summary>
            Optional AD&amp;D.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.SpouseLife">
            <summary>
            Spouse Life.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.ChildLife">
            <summary>
            Child Life.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Accident">
            <summary>
            Accident.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.CriticalIllness">
            <summary>
            Critical illness.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Cancer">
            <summary>
            Cancer.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.UniversalLife">
            <summary>
            Universal Life.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.WholeLife">
            <summary>
            Whole Life.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Product401k">
            <summary>
            Product 401(k).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Product403b">
            <summary>
            Product 403(b).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.ADD">
            <summary>
            Accidental Death &amp; Dismemberment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.EAP">
            <summary>
            EAP / Mental Health
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.EducationSavings">
            <summary>
            Education Savings
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.HealthReimbursementAccount">
            <summary>
            Health Reimbursement Account
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.HealthSupplement">
            <summary>
            Health Supplement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.HomeAuto">
            <summary>
            Home / Auto
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Hospitalization">
            <summary>
            Hospitalization
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.TermLifeInsurance">
            <summary>
            Term Life Insurance
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.LongTermCare">
            <summary>
            Long-Term Care
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Membership">
            <summary>
            Membership dues
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Parking">
            <summary>
            Parking
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.PetInsurance">
            <summary>
            Pet Insurance
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.RetirementSavings">
            <summary>
            Retirement Savings
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Transit">
            <summary>
            Transit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.WellnessPreventiveCare">
            <summary>
            Wellness / Preventive Care
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Telemedicine">
            <summary>
            Telemedicine.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.OneView">
            <summary>
            OneView.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Aflac_SNG">
            <summary>
            Aflac_SNG.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Aflac_AWES">
            <summary>
            Aflac_AWES.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Aflac_Both">
            <summary>
            Aflac_Both.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.AFProductOnly">
            <summary>
            American Fidelity Product Only engine.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.AFEnroll">
            <summary>
            American Fidelity Enroll engine.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Harmony">
            <summary>
            Harmony Connect engine
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.WashingtonNational">
            <summary>
            Washington National Bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Everwell">
            <summary>
            Everwell Bridge (Aflac)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ProductType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EngineName">
            <summary>
            Engine type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Unknown">
            <summary>
            Unknown product type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.NT">
            <summary>NT Engine</summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.MembershipPlan">
            <summary>
            Membership Plan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.TSA">
            <summary>
            BenefitAgent Savings Plan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.SB1">
            <summary>
            SB1 [Salary-based Benefit, 1-tier]
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.DB1">
            <summary>
            DB1 [Defined Benefit, 1-tier]
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.FSA">
            <summary>
            FSA [Flexible Spending Account]
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Dummy">
            <summary>
            Dummy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.DBN">
            <summary>
            DBN [Defined Benefit, N-tier]
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.SmartApp">
            <summary>
            BenefitAgent Bridge (SmartApp)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.CORE">
            <summary>
            BenefitAgent CORE
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.UNUM">
            <summary>
            BenefitAgent Bridge (UNUM)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.PTO">
            <summary>
            BenefitAgent PTO
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.UL">
            <summary>
            BenefitAgent UL
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Flex">
            <summary>
            BenefitAgent Flex
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.CI">
            <summary>
            BenefitAgent CI
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.AllApp">
            <summary>
            BenefitAgent Bridge (AllApp)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.TexasLife">
            <summary>
            BenefitAgent Bridge (Texas Life)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.OneView">
            <summary>
            BenefitAgent Bridge (OneView)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.AFProduct">
            <summary>
            BenefitAgent Bridge (AF Product Only)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.INGLink">
            <summary>
            BenefitAgent Bridge (INGLink)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.AFEnroll">
            <summary>
            BenefitAgent Bridge (AFEnroll)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.HarmonyConnect">
            <summary>
            Harmony Connect Bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.BostonMutualBridge">
            <summary>
            Boston Mutual Bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.BenefitFocus">
            <summary>
            BenefitFocus Bridge
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.WashingtonNational">
            <summary>
            BenefitAgent Bridge (Washington National)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Everwell">
            <summary>
            Everwell Bridge (Aflac)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.SecurityMutual">
            <summary>The security mutual</summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Allstate">
            <summary>The allstate</summary>
        </member>
        <member name="F:Selerix.Foundation.EngineName.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.QuestionAnswerLocation">
            <summary>
            Location of answer control related to question
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerLocation.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerLocation.Auto">
            <summary>
            Let system calculate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerLocation.Right">
            <summary>
            Right of question
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerLocation.Under">
            <summary>
            Under of question
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerLocation.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.QuestionAnswerDirection">
            <summary>
            Direction of answer control
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerDirection.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerDirection.Auto">
            <summary>
            Let system calculate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerDirection.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerDirection.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionAnswerDirection.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.MaskType">
            <summary>
            MaskType
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Currency">
            <summary>
            The currency
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Percent">
            <summary>
            The percent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Secure">
            <summary>
            The secure
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MaskType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Selerix.Foundation.QuestionType">
            <summary>
            Enum. Specifies the attributes of the question form type; for example, if the question is a combo box.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.YesNo">
            <summary>
            Yes/No.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Combobox">
            <summary>
            Combo box.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Radiobutton">
            <summary>
            Radio button.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Checkbox">
            <summary>
            Checkbox.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Weight">
            <summary>
            Weight.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Textbox">
            <summary>
            Textbox.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Memo">
            <summary>
            Memo.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.MedicalDetail">
            <summary>
            Medical detail.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.State">
            <summary>
            State.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.TableDetail">
            <summary>
            Table detail.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.DateTime">
            <summary>
            Date/Time.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Currency">
            <summary>
            Currency.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Numeric">
            <summary>
            Numeric.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Percent">
            <summary>
            Percent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.CheckboxListQuestion">
            <summary>
            Checkbox list question.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.SSN">
            <summary>
            Social Security number question.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Label">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.RadioGroup">
            <summary>
            Radio group.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Occupation">
            <summary>
            Occupation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.CountryOfCitenzship">
            <summary>
            Country of citizenship.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.PriorName">
            <summary>
            Prior name.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.StateOfBirth">
            <summary>
            The state of birth
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.TrueFalse">
            <summary>
            True/False.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.TriggeredBy">
            <summary>
            Enum TriggeredBy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TriggeredBy.Always">
            <summary>
            Always asked
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TriggeredBy.Election">
            <summary>
            Election of plan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TriggeredBy.Waiver">
            <summary>
            Waiver of plan
            </summary>
        </member>
        <member name="T:Selerix.Foundation.QuestionHorizontalAlign">
            <summary>
            Indicates the horizontal alignment of the questions on the questionnaire form.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionHorizontalAlign.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionHorizontalAlign.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionHorizontalAlign.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionHorizontalAlign.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionHorizontalAlign.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.QuestionRepeatDirection">
            <summary>
            Indicates the repeat direction of radio button type questions.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionRepeatDirection.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionRepeatDirection.Horizontal">
            <summary>
            Horizontal.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionRepeatDirection.Vertical">
            <summary>
            Vertical.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.QuestionRepeatDirection.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.RateCalculationHelper">
            <summary>
            Class RateCalculationHelper.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.RateCalculationHelper.AnnualToPayCheck(System.Decimal,System.Int32,Selerix.Foundation.enmRoundingMode)">
            <summary>
            Annual to pay check.
            </summary>
            <param name="decPremium">The decimal premium.</param>
            <param name="DeductionFrequency">The deduction frequency.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.RateCalculationHelper.RoundAmount(System.Decimal,System.Decimal,Selerix.Foundation.enmRoundingMode)">
            <summary>
            Rounds the amount.
            </summary>
            <param name="Amount">The amount.</param>
            <param name="Factor">The factor.</param>
            <param name="Mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.RateCalculationHelper.MonthlyToPayCheck(System.Decimal,System.Int32,Selerix.Foundation.enmRoundingMode)">
            <summary>
            Monthly to pay check.
            </summary>
            <param name="decPremium">The dec premium.</param>
            <param name="DeductionFrequency">The deduction frequency.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.RateCalculationHelper.PayCheckToMonthly(System.Decimal,System.Int32)">
            <summary>
            Paycheck to monthly.
            </summary>
            <param name="decPremium">The dec premium.</param>
            <param name="DeductionFrequency">The deduction frequency.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.RateParamType">
            <summary>
            Editable parameter type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Numeric">
            <summary>
            The numeric
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Decimal">
            <summary>
            The decimal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Text">
            <summary>
            The text
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Tier">
            <summary>
            The tier
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.State">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Relationship">
            <summary>
            The relationship
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.FixedList">
            <summary>
            The fixed list
            </summary>
        </member>
        <member name="F:Selerix.Foundation.RateParamType.Age">
            <summary>
            The age
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Frequency">
            <summary>
            Enum. Specifies the number of times per year the premium is paid.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.Yearly">
            <summary>
            The premium is paid yearly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.SemiAnnual">
            <summary>
            The premium is paid Semi-Annually.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_3">
            <summary>
            3 deductions per year
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.Quarterly">
            <summary>
            The premium is paid quarterly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_5">
            <summary>
            5 deductions per year
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_6">
            <summary>
            6 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_7">
            <summary>
            7 deductions per year
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_8">
            <summary>
            8 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_9">
            <summary>
            9 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_10">
            <summary>
            10 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_11">
            <summary>
            11 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.Monthly">
            <summary>
            Monthly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_13">
            <summary>
            13 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_14">
            <summary>
            14 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_15">
            <summary>
            15 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_16">
            <summary>
            16 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_17">
            <summary>
            17 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_18">
            <summary>
            18 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_19">
            <summary>
            19 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_20">
            <summary>
            20 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_21">
            <summary>
            21 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_22">
            <summary>
            22 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_23">
            <summary>
            23 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.SemiMonthly">
            <summary>
            Semi-Monthly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_25">
            <summary>
            25 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.BiWeekly">
            <summary>
            Bi-Weekly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_27">
            <summary>
            27 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_28">
            <summary>
            28 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_29">
            <summary>
            29 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_30">
            <summary>
            30 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_31">
            <summary>
            31 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_32">
            <summary>
            32 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_33">
            <summary>
            33 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_34">
            <summary>
            34 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_35">
            <summary>
            35 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_36">
            <summary>
            36 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_37">
            <summary>
            37 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_38">
            <summary>
            38 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_39">
            <summary>
            39 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_40">
            <summary>
            40 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_41">
            <summary>
            41 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_42">
            <summary>
            42 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_43">
            <summary>
            43 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_44">
            <summary>
            44 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_45">
            <summary>
            45 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_46">
            <summary>
            46 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_47">
            <summary>
            47 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_48">
            <summary>
            48 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_49">
            <summary>
            49 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_50">
            <summary>
            50 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_51">
            <summary>
            51 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.Weekly">
            <summary>
            Weekly.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_53">
            <summary>
            53 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_60">
            <summary>
            60 deductions per year.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Frequency.PerYear_260">
            <summary>
            260 deductions per year.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Tier">
            <summary>
            Enum. Specifies the coverage tier of the insured.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.NoCoverage">
            <summary>
            No coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeOnly">
            <summary>
            Employee only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeSpouse">
            <summary>
            Employee + Spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeChildren">
            <summary>
            Employee + Children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Family">
            <summary>
            Employee + Family.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.SpouseOnly">
            <summary>
            Spouse only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.ChildrenOnly">
            <summary>
            Children only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.SpouseChildren">
            <summary>
            Spouse + Children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Employee1">
            <summary>
            Employee + 1 dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Employee2">
            <summary>
            Employee + 2 dependents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Employee3">
            <summary>
            Employee + 3 dependents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Employee4">
            <summary>
            Employee + 4 dependents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.ParentGrandparent">
            <summary>
            Parent + Grandparent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeChild">
            <summary>
            Employee + 1 Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.Employee2Children">
            <summary>
            Employee + 2 Children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeSpouseChild">
            <summary>
            Employee + Spouse + 1 Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.FamilyDual">
            <summary>
            Dual Family - Employee + Spouse Employee + Children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.SpouseDual">
            <summary>
            Dual Family - Employee + Spouse Employee + Children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.ChildGrandchild">
            <summary>
            Child/Grandchild
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Tier.EmployeeSpouse2Children">
            <summary>
            Employee + Spouse + 2 Children.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.TierCode">
            <summary>
            Enum. Specifies the code associated with a specific tier.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.NA">
            <summary>
            Not Applicable.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.EO">
            <summary>
            Employee only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.ES">
            <summary>
            Employee + spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.EC">
            <summary>
            Employee + child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.FA">
            <summary>
            Employee + family.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.SO">
            <summary>
            Spouse only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.CO">
            <summary>
            Child only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.SC">
            <summary>
            Spouse + children.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E1">
            <summary>
            Employee + 1 Dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E2">
            <summary>
            Employee + 2 Dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E3">
            <summary>
            Employee + 3 Dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E4">
            <summary>
            Employee + 4 Dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.PG">
            <summary>
            Parent + Grandparent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E1C">
            <summary>
            Employee + 1 Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.E2C">
            <summary>
            Employee + 2 Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.ESC">
            <summary>
            Employee + Spouse + 1 Child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.FA2">
            <summary>
            Dual Family (Employee + Spouse Employee + Children).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.ES2">
            <summary>
            Employee + Spouse (Dual)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.CG">
            <summary>
            Child/Grandchild
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TierCode.ES2C">
            <summary>
            Employee + Spouse + 2 Children.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider">
            <summary>
            Password check rules configuration provider.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.BreakOnCheckFail">
            <summary>
            Break check on any check fail
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordHistoryCount">
            <summary>
            How many old password to remember in history for reusability check.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinLength">
            <summary>
            Password minimum length.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMaxLength">
            <summary>
            Password maximum length.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinDigits">
            <summary>
            Minimum amount digits to include.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMaxRepeatingCharacters">
            <summary>
            Maximum amount of repeating characters.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordDoesntContainLoginName">
            <summary>
            Password shouldn't contain login name.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordDoesntStartWithLoginName">
            <summary>
            Password shouldn't start with login name.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordDoesntEqualLoginName">
            <summary>
            Password shouldn't equal to login name.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMaxValidityDays">
            <summary>
            For how many days password doesn't expire.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinUpperCaseLetters">
            <summary>
            Minimum amount of upper case characters.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinLowerCaseLetters">
            <summary>
            Minimum amonut of lower case characters.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinSpecialCharacters">
            <summary>
            Minimum amount of special characters.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordCharacterRules">
            <summary>
            List of character rules to check.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider.PasswordMinCharacterRulesToApply">
            <summary>
            Minimum amount of character rules to pass validation.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordCheckRules">
            <summary>
            Password check rules.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.OK">
            <summary>
            OK.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_EMPTY">
            <summary>
            Password is empty.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_SHORT">
            <summary>
            Password is too short.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_LONG">
            <summary>
            Password is too long.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_DIGITS">
            <summary>
            Password must contain digits.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_EQUAL_EMPLOYEEID">
            <summary>
            Password is equal to employee id.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_STARTS_EMPLOYEEID">
            <summary>
            Password starts with employee id.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_CONTAINS_EMPLOYEEID">
            <summary>
            Password contains employee id.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_EQUAL_EMPLOYEE_SSN">
            <summary>
            Password is equal to employee ssn.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_EQUAL_USERNAME">
            <summary>
            Password is equal user name.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_STARTS_USERNAME">
            <summary>
            Password starts with user name.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_CONTAINS_USERNAME">
            <summary>
            Password contains employee user name.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_TOO_SIMILAR_USERNAME">
            <summary>
            Password and user name is similar.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_REPEATING_CHARACTERS">
            <summary>
            Password contains repeating characters.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_REUSED">
            <summary>
            Password has been used in past already.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_UPPER_CASE">
            <summary>
            Password must contain upper case character.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_LOWER_CASE">
            <summary>
            Password must contain lower character.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_SPEC_CHAR">
            <summary>
            Password must contain special character.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_ALPHANUMERIC">
            <summary>
            Password must contain alphanumeric character.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_MUST_CONTAIN_MIXEDCASE">
            <summary>
            Password must contain upper case and lower case characters.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordCheckRules.PASSWORD_IN_USER_NOTE">
            <summary>
            Password mustnot be contained in user note.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordHasher">
            <summary>
            Identity password hasher.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordHasher.#ctor(Selerix.Foundation.Security.PasswordHasherOptions)">
            <summary>
            Creates a new instance of <see cref="T:Selerix.Foundation.Security.PasswordHasher"/>.
            </summary>
            <param name="options">The options for this instance.</param>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordHasher.HashPassword(System.String)">
            <summary>
            Returns a hashed representation of the supplied <paramref name="password"/>.
            </summary>
            <param name="password">The password to hash.</param>
            <returns>A hashed representation of the supplied <paramref name="password"/>.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordHasher.VerifyHashedPassword(System.String,System.String)">
            <summary>
            Returns a <see cref="T:Selerix.Foundation.PasswordVerificationResult"/> indicating the result of a password hash comparison.
            </summary>
            <param name="hashedPassword">The hash value for a user's stored password.</param>
            <param name="providedPassword">The password supplied for comparison.</param>
            <returns>A <see cref="T:Selerix.Foundation.PasswordVerificationResult"/> indicating the result of a password hash comparison.</returns>
            <remarks>Implementations of this method should be time consistent.</remarks>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordHasher.CalculateOneTimePassword(System.Byte[])">
            <summary>
            Calculates the one time password.
            </summary>
            <param name="secret">The secret.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordHasher.CalculateOneTimePasswords(System.Byte[])">
            <summary>
            Calculates the one time passwords.
            </summary>
            <param name="secret">The secret.</param>
            <returns>IList of System.Int32</returns>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordHasherOptions">
            <summary>
            Password hasher options.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordHasherOptions.CompatibilityMode">
            <summary>
            Gets or sets the compatibility mode used when hashing passwords. Defaults to 'ASP.NET Identity version 3'.
            </summary>
            <value>
            The compatibility mode used when hashing passwords.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordHasherOptions.IterationCount">
            <summary>
            Gets or sets the number of iterations used when hashing passwords using PBKDF2. Default is 100,000.
            </summary>
            <value>
            The number of iterations used when hashing passwords using PBKDF2.
            </value>
            <remarks>
            This value is only used when the compatibility mode is set to 'V2'.
            The value must be a positive integer. 
            </remarks>
        </member>
        <member name="T:Selerix.Foundation.Security.KeyDerivationPrf">
            <summary>
            Specifies the PRF which should be used for the key derivation algorithm.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.KeyDerivationPrf.HMACSHA1">
            <summary>
            The HMAC algorithm (RFC 2104) using the SHA-1 hash function (FIPS 180-4).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.KeyDerivationPrf.HMACSHA256">
            <summary>
            The HMAC algorithm (RFC 2104) using the SHA-256 hash function (FIPS 180-4).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.KeyDerivationPrf.HMACSHA512">
            <summary>
            The HMAC algorithm (RFC 2104) using the SHA-512 hash function (FIPS 180-4).
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordHasherCompatibilityMode">
            <summary>
            Password hasher compatability version.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordHasherCompatibilityMode.V1">
            <summary>
            Version 1, uses MD5 hash function.
            Format: { md5 }
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordHasherCompatibilityMode.V2">
            <summary>
            Version 2, uses PBKDF2 with HMAC-SHA256, 128-bit salt, 256-bit subkey, 10000 iterations.
            Format: { 0x01, prf (UInt32), iter count (UInt32), salt length (UInt32), salt, subkey }
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.KeyDerivation">
            <summary>
            Provides algorithms for performing key derivation.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Security.KeyDerivation.Pbkdf2(System.String,System.Byte[],Selerix.Foundation.Security.KeyDerivationPrf,System.Int32,System.Int32)">
            <summary>
            Performs key derivation using the PBKDF2 algorithm.
            </summary>
            <param name="password">The password from which to derive the key.</param>
            <param name="salt">The salt to be used during the key derivation process.</param>
            <param name="prf">The pseudo-random function to be used in the key derivation process.</param>
            <param name="iterationCount">The number of iterations of the pseudo-random function to apply
            during the key derivation process.</param>
            <param name="numBytesRequested">The desired length (in bytes) of the derived key.</param>
            <returns>The derived key.</returns>
            <remarks>
            The PBKDF2 algorithm is specified in RFC 2898.
            </remarks>
        </member>
        <member name="T:Selerix.Foundation.Security.Pbkdf2Util">
            <summary>
            Internal base class used for abstracting away the PBKDF2 implementation since the implementation is OS-specific.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.IPbkdf2Provider">
            <summary>
            Internal interface used for abstracting away the PBKDF2 implementation since the implementation is OS-specific.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.ManagedPbkdf2Provider">
            <summary>
            A PBKDF2 provider which utilizes the managed hash algorithm classes as PRFs.
            This isn't the preferred provider since the implementation is slow, but it is provided as a fallback.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordStrengthChecker">
            <summary>
            Class PasswordStrengthChecker.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_EMPTY">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_SHORT">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_LONG">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_EQUAL_EMPLOYEEID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_STARTS_EMPLOYEEID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_CONTAINS_EMPLOYEEID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_EQUAL_EMPLOYEE_SSN">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_EQUAL_EMPLOYEE_USERID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_STARTS_EMPLOYEE_USERID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_CONTAINS_EMPLOYEE_USERID">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_REPEATING_CHARACTERS">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_REUSED">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_MUST_CONTAIN_DIGITS">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_MUST_CONTAIN_UPPER_CASE">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_MUST_CONTAIN_LOWER_CASE">
            
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.ERROR_PASSWORD_MUST_CONTAIN_SPEC_CHAR">
            
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration">
            <summary>
            Class Configuration.
            Implements the <see cref="T:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider" />
            </summary>
            <seealso cref="T:Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider" />
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.BreakOnCheckFail">
            <summary>
            Break check on any check fail
            </summary>
            <value><c>true</c> if [break on check fail]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinLength">
            <summary>
            Gets or sets the minimum length of the password.
            </summary>
            <value>The minimum length of the password.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMaxLength">
            <summary>
            Gets or sets the maximum length of the password.
            </summary>
            <value>The maximum length of the password.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMaxRepeatingCharacters">
            <summary>
            Gets or sets the password maximum repeating characters.
            </summary>
            <value>The password maximum repeating characters.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordCharacterRules">
            <summary>
            Gets or sets the password character rules.
            </summary>
            <value>The password character rules.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinCharacterRulesToApply">
            <summary>
            Gets or sets the password minimum character rules to apply.
            </summary>
            <value>The password minimum character rules to apply.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinDigits">
            <summary>
            Gets or sets the password minimum digits.
            </summary>
            <value>The password minimum digits.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinLetters">
            <summary>
            Gets or sets the password minimum letters.
            </summary>
            <value>The password minimum letters.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinUpperCaseLetters">
            <summary>
            Gets or sets the password minimum upper case letters.
            </summary>
            <value>The password minimum upper case letters.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinLowerCaseLetters">
            <summary>
            Gets or sets the password minimum lower case letters.
            </summary>
            <value>The password minimum lower case letters.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMinSpecialCharacters">
            <summary>
            Gets or sets the password minimum special characters.
            </summary>
            <value>The password minimum special characters.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordHistoryCount">
            <summary>
            Gets or sets the password history count.
            </summary>
            <value>The password history count.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordDoesntContainLoginName">
            <summary>
            Password shouldn't contain login name.
            </summary>
            <value><c>true</c> if [password doesnt contain login name]; otherwise, <c>false</c>.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordDoesntStartWithLoginName">
            <summary>
            Password shouldn't start with login name.
            </summary>
            <value><c>true</c> if [password doesnt start with login name]; otherwise, <c>false</c>.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordDoesntEqualLoginName">
            <summary>
            Password shouldn't equal to login name.
            </summary>
            <value><c>true</c> if [password doesnt equal login name]; otherwise, <c>false</c>.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.PasswordMaxValidityDays">
            <summary>
            For how many days password doesn't expire.
            </summary>
            <value>The password maximum validity days.</value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Security.PasswordStrengthChecker.Configuration"/> class.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordRule">
            <summary>
            Delegate PasswordRule
            </summary>
            <param name="password">The password.</param>
            <param name="errorMessage">The error message.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Rules">
            <summary>
            Gets the rules.
            </summary>
            <value>The rules.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.Config">
            <summary>
            Gets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Selerix.Foundation.Security.PasswordStrengthChecker.NotAllowedWords">
            <summary>
            Gets or sets the not allowed words.
            </summary>
            <value>The not allowed words.</value>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.#ctor(Selerix.Foundation.Security.IPasswordCheckRulesConfigurationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.Security.PasswordStrengthChecker"/> class.
            </summary>
            <param name="checkerConfig">The checker configuration.</param>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.Init(System.Collections.Generic.ISet{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Initializes the specified rules to ignore.
            </summary>
            <param name="rulesToIgnore">The rules to ignore.</param>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.AddRules(Selerix.Foundation.Security.PasswordStrengthChecker.PasswordRule[])">
            <summary>
            Adds the rules.
            </summary>
            <param name="passwordRules">The password rules.</param>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.Verification(System.String)">
            <summary>
            Verifications the specified password.
            </summary>
            <param name="password">The password.</param>
            <returns>List&lt;PasswordCheckRules&gt;.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.GetErrorMessage(Selerix.Foundation.Security.PasswordCheckRules)">
            <summary>
            Produce error message for invalid password result.
            </summary>
            <param name="failedRule">Password validation result</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordEmptyCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the empty check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordShortCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the short check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordLongCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the long check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordMaxRepeatingCharCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the maximum repeating character check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordNotAllowedWordsCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the not allowed words check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="F:Selerix.Foundation.Security.PasswordStrengthChecker.SpecialChars">
            <summary>
            The special chars
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Security.PasswordStrengthChecker.PasswordCharacterRulesCheck(System.String,System.Collections.Generic.List{Selerix.Foundation.Security.PasswordCheckRules})">
            <summary>
            Passwords the character rules check.
            </summary>
            <param name="password">The password.</param>
            <param name="failedRules">The failed rules.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Selerix.Foundation.Security.RandomNumberGenerator">
            <summary>
            Random number generator class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Security.RandomNumberGenerator.NextInt">
            <summary>
            Returns next random integer greater or equal 0.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Security.RandomNumberGenerator.NextInt(System.Int32,System.Int32)">
            <summary>
            Returns next random integer in range between minValue and maxValue.
            </summary>
            <param name="minValue">Min value.</param>
            <param name="maxValue">Max value</param>
        </member>
        <member name="M:Selerix.Foundation.Security.RandomNumberGenerator.NextBytes(System.Byte[])">
            <summary>
            Fills the elements of a specified array of bytes with random numbers.
            </summary>
            <param name="buffer">An array of bytes to contain random numbers.</param>
        </member>
        <member name="T:Selerix.Foundation.SelerixException">
            <summary>
            Defines the properties of a thrown exception.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SelerixException.Xml">
            <summary>
            Stores the xml data that was processing at the time of the exception.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SelerixException.RedirectURL">
            <summary>
            Redirects the user to a different url after the exception is thrown. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SelerixException.FullDisclosure">
            <summary>
            Indicates if full disclosure required for exception processing.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SelerixException.DebugMessages">
            <summary>
            List of debug messages attached to exception
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SelerixException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixException"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SelerixException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Selerix.Foundation.SelerixException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixException"/> class.
            </summary>
            <param name="message">The message that displays when the exception is thrown.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="M:Selerix.Foundation.SelerixException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SelerixException"/> class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="xml">The XML.</param>
            <param name="redirectURL">The redirect URL.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="T:Selerix.Foundation.LogOnlyException">
            <summary>
            Log only inner exception
            </summary>
            <seealso cref="T:Selerix.Foundation.SelerixException" />
        </member>
        <member name="M:Selerix.Foundation.LogOnlyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.LogOnlyException"/> class.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.LogOnlyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.LogOnlyException"/> class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Selerix.Foundation.LogOnlyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.LogOnlyException"/> class.
            </summary>
            <param name="message">The message that displays when the exception is thrown.</param>
            <param name="inner">The inner exception value - the set of exceptions that led to the current exception.</param>
        </member>
        <member name="T:Selerix.Foundation.SignatureDataType">
            <summary>
            Enum. Specifies the type of signature data.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.Pin">
            <summary>
            Pin
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.TopazSignaturePad">
            <summary>
            Topaz signature pad.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.VoiceConformation">
            <summary>
            Voice conformation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.Timestamp">
            <summary>
            Timestamp.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.Bitmap">
            <summary>
            Bitmap.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.EncryptedBitmap">
            <summary>
            Encrypted bitmap.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.VoiceConformationFile">
            <summary>
            Voice conformation file.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureDataType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SignatureOwnerType">
            <summary>
            Enum. Indicates the source of the signature.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureOwnerType.Employee">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureOwnerType.Enroller">
            <summary>
            Enroller.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureOwnerType.Spouse">
            <summary>
            Spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SignatureOwnerType.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmSignatureMode">
            <summary>
            Enum. Specifies the signature mode, whether it's digitized, voice confirmation, etc.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.PINorDigitized">
            <summary>
            PIN or digitized signature.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.PIN">
            <summary>
            PIN.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.DigitizedSignature">
            <summary>
            Digitized signature.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.VoiceConfirmation">
            <summary>
            Voice confirmation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.PINOrVoice">
            <summary>
            PIN or voice.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.PINorDigitizedorVoice">
            <summary>
            PIN/Digitized/Voice
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureMode.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmSignatureOwnerType">
            <summary>
            Enum. Specifies the type of signature of the owner, whether employee or enroller.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureOwnerType.Employee">
            <summary>
            Employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureOwnerType.Enroller">
            <summary>
            Enroller.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureOwnerType.Spouse">
            <summary>
            Spouse.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmSignatureDataType">
            <summary>
            Enum. Specifies the signature data type; for example, PIN or Topaz.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.PIN">
            <summary>
            PIN
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.TopazSignaturePad">
            <summary>
            Topaz signature pad.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.VoiceConformation">
            <summary>
            Voice confirmation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.Bitmap">
            <summary>
            Bitmap
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.EncryptedBitmap">
            <summary>
            Encrypted bitmap.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmSignatureDataType.VoiceConformationFile">
            <summary>
            Voice confirmation file.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SoftwareVersion">
            <summary>
            Application software version
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SoftwareVersion.#ctor(System.String,System.DateTime)">
            <summary>
            SoftwareVersion ctor
            </summary>
            <param name="build">Application build version</param>
            <param name="date">Application build date</param>
        </member>
        <member name="P:Selerix.Foundation.SoftwareVersion.BuildVersion">
            <summary>
            Application build version
            </summary>
        </member>
        <member name="P:Selerix.Foundation.SoftwareVersion.BuildDate">
            <summary>
            Application build date
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SoftwareVersion.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.SortAttribute">
            <summary>
            Sorts attributes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SortAttribute.Sort">
            <summary>
            The sort
            </summary>
        </member>
        <member name="M:Selerix.Foundation.SortAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Selerix.Foundation.SortAttribute"/> class.
            </summary>
            <param name="sort">The sort.</param>
        </member>
        <member name="T:Selerix.Foundation.enmEmployeeEnrollmentStatus">
            <summary>
            Enum. Specifies the employee enrollment status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatus.NotBegun">
            <summary>
            Enrollment has not begun.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatus.NotEligible">
            <summary>
            Not eligible for enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatus.Incomplete">
            <summary>
            Enrollment incomplete.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatus.Complete">
            <summary>
            Enrollment complete.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmEmployeeEnrollmentStatusCode">
            <summary>
            Enum. Specifies the code for the employee enrollment status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatusCode.NB">
            <summary>
            NB (Not begun).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatusCode.NE">
            <summary>
            NE (Not eligible).
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatusCode.PE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeEnrollmentStatusCode.CE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmEmployeeStatus">
            <summary>
            Enum. Specifies the employment status of the employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.Active">
            <summary>
            Employee is active.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.LeaveOfAbsence">
            <summary>
            Employee is on leave of absence.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.InActive">
            <summary>
            Employee is inactive.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.Terminated">
            <summary>
            Employee is terminated.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.COBRA">
            <summary>
            Employee is covered by COBRA.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmEmployeeStatus.Retired">
            <summary>
            Employee is retired.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmProductEnrollmentStatus">
            <summary>
            Enum. Specifies the product enrollment status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmProductEnrollmentStatus.NotSeen">
            <summary>
            Not seen.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmProductEnrollmentStatus.NotComplete">
            <summary>
            Product enrollment not complete.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmProductEnrollmentStatus.Complete">
            <summary>
            Product enrollment is complete.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmProductEnrollmentStatus.Waived">
            <summary>
            Product enrollment is waived.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.TransmittalType">
            <summary>Enum. Type of transmittal container.</summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.UploadApplicants">
            <summary>
            Upload of transactions. Example census upload.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.UploadPortfolio">
            <summary>
            Upload group information
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.UploadAgents">
            <summary>
            The upload agents
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.Query">
            <summary>
            Generic search of data based on provided template.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.Download">
            <summary>
            Download of data.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.SyncUpload">
            <summary>
            Synchronization of data from laptop to the server.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.SyncDownload">
            <summary>
            Synchronization of data down to laptop.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.SyncFromPortfolio">
            <summary>
            Synchronization of data from one portfolio to another.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetApplicants">
            <summary>
            Get list of available applicants in current session.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetAgents">
            <summary>
            The get agents
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.AuthenticateApplicant">
            <summary>
            Authentication of Applicant. Example employee login.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.AuthenticateUser">
            <summary>
            Authentication of User. Example agent login.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetPortfolio">
            <summary>
            Get current group configuration.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetEligibility">
            <summary>
            The get eligibility
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetOfferings">
             <summary>
            Returns list of available offerings and their prerequisites.
             </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetRates">
            <summary>
            Get list of available rates, riders, benefit levels for given applicant.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetIllustration">
            <summary>
            Get illustration of available rates.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetQuestions">
            <summary>
            Get list of questions that need to be presented to user.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetPrequalifyingQuestions">
            <summary>
            Get list of prequalifying questions that need to be presented to user.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.GetDocuments">
            <summary>
            Get list of documents that require signature or review.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.ValidateEnrollment">
            <summary>
            The validate enrollment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TransmittalType.UploadLifeEvent">
            <summary>
            Upload life event
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SortingDirection">
            <summary>
            Represents the direction of sorting for a column.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SortingDirection.Ascending">
            <summary>
            The ascending
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SortingDirection.Descending">
            <summary>
            The descending
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Languages">
            <summary>
            Enum. Indicates the language.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.English_Canada">
            <summary>
            English (Canada)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.French_Canada">
            <summary>
            French (Canada)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Languages.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.LanguagesAvailable">
            <summary>
            Specifies the available languages.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LanguagesAvailable.Unknown">
            <summary>
            Unknown language.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LanguagesAvailable.EN">
            <summary>
            English.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LanguagesAvailable.SP">
            <summary>
            Spanish.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.LanguagesAvailable.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Nation">
            <summary>
            Enum. Specifies a nation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.USA">
            <summary>
            United States of America
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Canada">
            <summary>
            Canada
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Russia">
            <summary>
            Russia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Egypt">
            <summary>
            Egypt
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SouthAfrica">
            <summary>
            South Africa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Greece">
            <summary>
            Greece
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Netherlands">
            <summary>
            Netherlands (the)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Belgium">
            <summary>
            Belgium
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.France">
            <summary>
            France
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Spain">
            <summary>
            Spain
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Hungary">
            <summary>
            Hungary
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Yugoslavia">
            <summary>
            Yugoslavia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Italy">
            <summary>
            Italy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Romania">
            <summary>
            Romania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Switzerland">
            <summary>
            Switzerland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Czechloslovakia">
            <summary>
            Czechloslovakia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Austria">
            <summary>
            Austria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.UK">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Denmark">
            <summary>
            Denmark
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Sweden">
            <summary>
            Sweden
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Norway">
            <summary>
            Norway
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Poland">
            <summary>
            Poland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Germany">
            <summary>
            Germany
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Peru">
            <summary>
            Peru
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mexico">
            <summary>
            Mexico
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cuba">
            <summary>
            Cuba
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Argentina">
            <summary>
            Argentina
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Brazil">
            <summary>
            Brazil
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Chile">
            <summary>
            Chile
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Colombia">
            <summary>
            Colombia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Venezuela">
            <summary>
            Venezuela
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Malaysia">
            <summary>
            Malaysia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Australia">
            <summary>
            Australia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Indonesia">
            <summary>
            Indonesia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Philippines">
            <summary>
            Philippines
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NewZealand">
            <summary>
            New Zealand
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Singapore">
            <summary>
            Singapore
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Thailand">
            <summary>
            Thailand
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Japan">
            <summary>
            Japan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SouthKorea">
            <summary>
            South Korea (Republic of)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Vietnam">
            <summary>
            Vietnam
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.China">
            <summary>
            China
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Turkey">
            <summary>
            Turkey
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.India">
            <summary>
            India
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Pakistan">
            <summary>
            Pakistan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Afghanistan">
            <summary>
            Afghanistan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SriLanka">
            <summary>
            Sri Lanka
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Burma">
            <summary>
            Myanmar (Burma)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Iran">
            <summary>
            Iran
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SouthSudan">
            <summary>
            South Sudan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Morocco">
            <summary>
            Morocco
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Algeria">
            <summary>
            Algeria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Tunisia">
            <summary>
            Tunisia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Libya">
            <summary>
            Libya
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Gambia">
            <summary>
            Gambia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Senegal">
            <summary>
            Senegal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mauritania">
            <summary>
            Mauritania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mali">
            <summary>
            Mali
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guinea">
            <summary>
            Guinea
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.IvoryCoast">
            <summary>
            Ivory Coast
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.BurkinaFaso">
            <summary>
            Burkina Faso
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Niger">
            <summary>
            Niger (the)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Togo">
            <summary>
            Togo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Benin">
            <summary>
            Benin, Republic Of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mauritius">
            <summary>
            Mauritius
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Liberia">
            <summary>
            Liberia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SierraLeone">
            <summary>
            Sierra Leone
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ghana">
            <summary>
            Ghana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Nigeria">
            <summary>
            Nigeria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Chad">
            <summary>
            Chad
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CentralAfricanRepublic">
            <summary>
            Central African Republic
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cameroon">
            <summary>
            Cameroon
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CapeVerde">
            <summary>
            Cape Verde
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SaoTome">
            <summary>
            Sao Tome
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.EquatorialGuinea">
            <summary>
            Equatorial Guinea
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Gabon">
            <summary>
            Gabon
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bahamas">
            <summary>
            Bahamas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CongoKinshasa">
            <summary>
            Congo (Kinshasa)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Angola">
            <summary>
            Angola, Republic of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.GuineaBissau">
            <summary>
            Guinea-Bissau
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Barbados">
            <summary>
            Barbados
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.AscensionIslands">
            <summary>
            Ascension Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Sudan">
            <summary>
            Sudan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Rwanda">
            <summary>
            Rwanda
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ethiopia">
            <summary>
            Ethiopia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Somalia">
            <summary>
            Somalia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Djibouti">
            <summary>
            Djibouti
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kenya">
            <summary>
            Kenya
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Tanzania">
            <summary>
            Tanzania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Uganda">
            <summary>
            Uganda
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Burundi">
            <summary>
            Burundi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mozambique">
            <summary>
            Mozambique
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Zambia">
            <summary>
            Zambia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Madagascar">
            <summary>
            Madagascar
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.ReunionIsland">
            <summary>
            Reunion Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Zimbabwe">
            <summary>
            Zimbabwe
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Namibia">
            <summary>
            Namibia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Malawi">
            <summary>
            Malawi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Lesotho">
            <summary>
            Lesotho
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Botswana">
            <summary>
            Botswana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.AntiguaBarbuda">
            <summary>
            Antigua/Barbuda
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Comoros">
            <summary>
            Comoros Federal And Islamic Republic Of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.BritishVirginis">
            <summary>
            Virgin Islands (British)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.StHelena">
            <summary>
            St Helena
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Aruba">
            <summary>
            Aruba
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.FaroeIslands">
            <summary>
            Faeroe Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Greenland">
            <summary>
            Greenland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cayman">
            <summary>
            Cayman Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Gibraltar">
            <summary>
            Gibraltar
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Portugal">
            <summary>
            Portugal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Luxembourg">
            <summary>
            Luxembourg
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ireland">
            <summary>
            Ireland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Iceland">
            <summary>
            Iceland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Albania">
            <summary>
            Albania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Malta">
            <summary>
            Malta
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cyprus">
            <summary>
            Cyprus
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Finland">
            <summary>
            Finland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bulgaria">
            <summary>
            Bulgaria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Lithuania">
            <summary>
            Lithuania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Latvia">
            <summary>
            Latvia 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Estonia">
            <summary>
            Estonia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Moldova">
            <summary>
            Moldova
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Armenia">
            <summary>
            Armenia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Belarus">
            <summary>
            Belarus
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Andorra">
            <summary>
            Andorra
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SanMarino">
            <summary>
            San Marino
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ukraine">
            <summary>
            Ukraine
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Serbia">
            <summary>
            Serbia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Montenegro">
            <summary>
            Montenegro
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kosovo">
            <summary>
            Kosovo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Croatia">
            <summary>
            Croatia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Slovenia">
            <summary>
            Slovenia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.BosniaHerzegovina">
            <summary>
            Bosnia-Herzegovina
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Macedonia">
            <summary>
            North Macedonia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CzechRepublic">
            <summary>
            Czech Republic
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Slovakia">
            <summary>
            Slovakia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Liechtenstein">
            <summary>
            Liechtenstein
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bermuda">
            <summary>
            Bermuda
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Grenada">
            <summary>
            Grenada
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.FalklandIslands">
            <summary>
            Falkland Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Belize">
            <summary>
            Belize
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guatemala">
            <summary>
            Guatemala
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.ElSalvador">
            <summary>
            El Salvador
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Honduras">
            <summary>
            Honduras
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Nicaragua">
            <summary>
            Nicaragua
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CostaRica">
            <summary>
            Costa Rica
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.StPierre">
            <summary>
            St Pierre and Miguelon
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Haiti">
            <summary>
            Haiti
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guadeloupe">
            <summary>
            Guadeloupe
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bolivia">
            <summary>
            Bolivia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guyana">
            <summary>
            Guyana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ecuador">
            <summary>
            Ecuador
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.FrenchGuiana">
            <summary>
            French Guiana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Paraguay">
            <summary>
            Paraguay
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Martinique">
            <summary>
            Martinique (French Antilles)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Suriname">
            <summary>
            Suriname
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Uruguay">
            <summary>
            Uruguay
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NetherlandsAntilles">
            <summary>
            Netherlands Antilles
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.TurksCaicosIs">
            <summary>
            Turks/Caicos Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Montserrat">
            <summary>
            Montserrat
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Saipan">
            <summary>
            Saipan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guam">
            <summary>
            Guam
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Antarctica">
            <summary>
            Antarctica 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Brunei">
            <summary>
            Brunei
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Nauru">
            <summary>
            Nauru
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.PapuaNewGuinea">
            <summary>
            Papua New Guinea
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.TongaIslands">
            <summary>
            Tonga Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SolomonIslands">
            <summary>
            Solomon Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Vanuatu">
            <summary>
            Vanuatu Republic Of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Fiji">
            <summary>
            Fiji
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.WallisIslands">
            <summary>
            Wallis And Futuna Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CookIslands">
            <summary>
            Cook Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Niue">
            <summary>
            Niue
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.AmericanSamoa">
            <summary>
            American Samoa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Samoa">
            <summary>
            Samoa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kiribati">
            <summary>
            Kiribati
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NewCaledonia">
            <summary>
            New Caledonia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Tuvalu">
            <summary>
            Tuvalu
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.FrenchPolynesia">
            <summary>
            French Polynesia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Micronesia">
            <summary>
            Micronesia (Federated States of)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.MarshallIslands">
            <summary>
            Marshall Islands (the)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.StLucia">
            <summary>
            St. Lucia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Dominica">
            <summary>
            Dominica
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.StVincent">
            <summary>
            St. Vincent and the Grenadines
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.DominicanRepublic">
            <summary>
            Dominican Republic
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NorthKorea">
            <summary>
            North Korea (Democratic People's Republic of)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.HongKong">
            <summary>
            Hong Kong
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Macao">
            <summary>
            Macao
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cambodia">
            <summary>
            Cambodia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Laos">
            <summary>
            Laos
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.TrinidadTobago">
            <summary>
            Trinidad and Tobago
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.StKittsNevis">
            <summary>
            St. Kitts/Nevis
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Jamaica">
            <summary>
            Jamaica
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bangladesh">
            <summary>
            Bangladesh
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Taiwan">
            <summary>
            Taiwan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Lebanon">
            <summary>
            Lebanon
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Jordan">
            <summary>
            Jordan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Syria">
            <summary>
            Syria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Iraq">
            <summary>
            Iraq
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kuwait">
            <summary>
            Kuwait
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SaudiArabia">
            <summary>
            Saudi Arabia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Yemen">
            <summary>
            Yemen
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Oman">
            <summary>
            Oman
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.UnitedArabEmirates">
            <summary>
            United Arab Emirates
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Israel">
            <summary>
            Israel
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bahrain">
            <summary>
            Bahrain
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Qatar">
            <summary>
            Qatar
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Bhutan">
            <summary>
            Bhutan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Nepal">
            <summary>
            Nepal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Tajikistan">
            <summary>
            Tajikistan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Turkmenistan">
            <summary>
            Turkmenistan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Azerbaijan">
            <summary>
            Azerbaijan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Georgia">
            <summary>
            Georgia, Republic of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Uzbekistan">
            <summary>
            Uzbekistan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Anguilla">
            <summary>
            Anguilla
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Panama">
            <summary>
            Panama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CoteDIvorie">
            <summary>
            Cote D'Ivorie
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Eritrea">
            <summary>
            Eritrea
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kazakhstan">
            <summary>
            Kazakhstan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Kyrgyzstan">
            <summary>
            Kyrgyzstan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Cocos">
            <summary>
            Cocos Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Mongolia">
            <summary>
            Mongolia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.BouvetIsland">
            <summary>
            Bouvet Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Seychelles">
            <summary>
            Seychelles
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.BritishIndianOceanTerritory">
            <summary>
            British Indian Ocean Territory
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CocoaIslands">
            <summary>
            Cocoa Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.WesternSamoa">
            <summary>
            Samoa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.EastTimor">
            <summary>
            East Timor
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.FrenchSouthernTerritioies">
            <summary>
            French Southern Territioies
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.HeardIsland">
            <summary>
            Heard Island and McDonald Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.MayotteIsland">
            <summary>
            Mayotte
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.PitcarinIslands">
            <summary>
            Pitcarin Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SvalbardIsland">
            <summary>
            Svalbard and Jan Mayen Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Tokelau">
            <summary>
            Tokelau
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Maldives">
            <summary>
            Maldives
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.ChristmasIslands">
            <summary>
            Christmas Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NorfolkIsland">
            <summary>
            Norfolk Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Curacao">
            <summary>
            Curacao
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CongoBrazzaville">
            <summary>
            Congo (Brazzaville)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Monaco">
            <summary>
            Monaco
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.HolySee">
            <summary>
            Holy See (Vatican)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.DiegoGarcia">
            <summary>
            Diego Garcia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Swaziland">
            <summary>
            Swaziland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Palestine">
            <summary>
            Palestine, State of
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Akrotiri">
            <summary>
            Akrotiri
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Ashmore">
            <summary>
            Ashmore and Cartier Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.ClippertonIslands">
            <summary>
            Clipperton Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.CoralSeaIslands">
            <summary>
            Coral Sea Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Dhekelia">
            <summary>
            Dhekelia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Guernsey">
            <summary>
            Guernsey
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.IsleofMan">
            <summary>
            Isle of Man
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Jersey">
            <summary>
            Jersey
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.NorthernMarianaIslands">
            <summary>
            Northern Mariana Islands (the)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.PuertoRico">
            <summary>
            Puerto Rico
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SaintBarthelemy">
            <summary>
            Saint Barthélemy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SaintMartin">
            <summary>
            Saint Martin (French part)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SintMaarten">
            <summary>
            Sint Maarten (Dutch part)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.SouthGeorgiaSouthSandwichIslands">
            <summary>
            South Georgia and the South Sandwich Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.TimorLeste">
            <summary>
            Timor-Leste
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.USMinorOutlyingIslands">
            <summary>
            United States Minor Outlying Islands (the)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.VirginIslandsUS">
            <summary>
            Virgin Islands (U.S.)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.WesternSahara">
            <summary>
            Western Sahara
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Nation.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.State">
            <summary>
            Enum. Specifies the state.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AL">
            <summary>
            Alabama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AK">
            <summary>
            Alaska
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AS">
            <summary>
            American Samoa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AZ">
            <summary>
            Arizona
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AR">
            <summary>
            Arkansas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_CA">
            <summary>
            California
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_CO">
            <summary>
            Colorado
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_CT">
            <summary>
            Connecticut
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_DE">
            <summary>
            Delaware
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_DC">
            <summary>
            District of Columbia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_FM">
            <summary>
            Federated States of Micronesia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_FL">
            <summary>
            Florida
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_GA">
            <summary>
            Georgia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_GU">
            <summary>
            Guam
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_HI">
            <summary>
            Hawaii
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_ID">
            <summary>
            Idaho
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_IL">
            <summary>
            Illinois
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_IN">
            <summary>
            Indiana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_IA">
            <summary>
            Iowa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_KS">
            <summary>
            Kansas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_KY">
            <summary>
            Kentucky
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_LA">
            <summary>
            Louisiana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_ME">
            <summary>
            Maine
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MH">
            <summary>
            Marshall Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MD">
            <summary>
            Maryland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MA">
            <summary>
            Massachusetts
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MI">
            <summary>
            Michigan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MN">
            <summary>
            Minnesota
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MS">
            <summary>
            Mississippi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MO">
            <summary>
            Missouri
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MT">
            <summary>
            Montana
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NE">
            <summary>
            Nebraska
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NV">
            <summary>
            Nevada
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NH">
            <summary>
            New Hampshire
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NJ">
            <summary>
            New Jersey
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NM">
            <summary>
            New Mexico
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NY">
            <summary>
            New York
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_NC">
            <summary>
            North Carolina
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_ND">
            <summary>
            North Dakota
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_MP">
            <summary>
            Northern Mariana Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_OH">
            <summary>
            Ohio
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_OK">
            <summary>
            Oklahoma
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_OR">
            <summary>
            Oregon
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_PW">
            <summary>
            Palau Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_PA">
            <summary>
            Pennsylvania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_PR">
            <summary>
            Puerto Rico
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_RI">
            <summary>
            Rhode Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_SC">
            <summary>
            South Carolina
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_SD">
            <summary>
            South Dakota
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_TN">
            <summary>
            Tennessee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_TX">
            <summary>
            Texas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_UT">
            <summary>
            Utah
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_VT">
            <summary>
            Vermont
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_VI">
            <summary>
            Virgin Islands
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_VA">
            <summary>
            Virginia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_WA">
            <summary>
            Washington
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_WV">
            <summary>
            West Virginia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_WI">
            <summary>
            Wisconsin
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_WY">
            <summary>
            Wyoming
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AA">
            <summary>
            Armed Forces Americas (except Canada)
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AE">
            <summary>
            Armed Forces Canada, Africa, Europe, Middle East
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_AP">
            <summary>
            US Armed Forces Pacific
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.USA_GB">
            <summary>
            US Naval Station Guantanamo Bay, Cuba
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_AB">
            <summary>
            Alberta
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_BC">
            <summary>
            British Columbia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_MB">
            <summary>
            Manitoba
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_NB">
            <summary>
            New Brunswick
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_NL">
            <summary>
            AKA NL Newfoundland and Labrador
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_NT">
            <summary>
            Northwest Territories
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_NS">
            <summary>
            Nova Scotia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_ON">
            <summary>
            Ontario
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_PE">
            <summary>
            Prince Edward Island
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_QC">
            <summary>
            Quebec
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_SK">
            <summary>
            Saskatchewan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_YT">
            <summary>
            Yukon Territory
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.CAN_NU">
            <summary>
            Nunavut
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_ACT">
            <summary>
            Australian Capital Territory
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_NSW">
            <summary>
            New South Wales
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_NT">
            <summary>
            Northern Territory
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_QL">
            <summary>
            Queensland
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_SA">
            <summary>
            South Australia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_TAS">
            <summary>
            Tasmania
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_VIC">
            <summary>
            Victoria
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.AUS_WA">
            <summary>
            Western Australia
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_AICHI">
            <summary>
            Aichi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_AKITA">
            <summary>
            Akita
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_AOMORI">
            <summary>
            Aomori
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_CHIBA">
            <summary>
            Chiba
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_EHIME">
            <summary>
            Ehime
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_FUKUI">
            <summary>
            Fukui
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_FUKUOKA">
            <summary>
            Fukuoka
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_FUKUSHIMA">
            <summary>
            Fukushima
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_GIFU">
            <summary>
            Gifu
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_GUNMA">
            <summary>
            Gunma
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_HIROSHIMA">
            <summary>
            Hiroshima
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_HOKKAIDO">
            <summary>
            Hokkaido
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_HYOGO">
            <summary>
            Hyogo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_IBARAKI">
            <summary>
            Ibaraki
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_ISHIKAWA">
            <summary>
            Ishikawa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_IWATE">
            <summary>
            Iwate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KAGAWA">
            <summary>
            Kagawa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KAGOSHIMA">
            <summary>
            Kagoshima
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KANAGAWA">
            <summary>
            Kanagawa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KOUCHI">
            <summary>
            Kouchi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KUMAMOTO">
            <summary>
            Kumamoto
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_KYOTO">
            <summary>
            Kyoto
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_MIE">
            <summary>
            Mie
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_MIYAGI">
            <summary>
            Miyagi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_MIYAZAKI">
            <summary>
            Miyazaki
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_NAGANO">
            <summary>
            Nagano
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_NAGASAKI">
            <summary>
            Nagasaki
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_NARA">
            <summary>
            Nara
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_NIIGATA">
            <summary>
            Niigata
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_OITA">
            <summary>
            Oita
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_OKAYAMA">
            <summary>
            Okayama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_OKINAWA">
            <summary>
            Okinawa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_OSAKA">
            <summary>
            Osaka
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_SAGA">
            <summary>
            Saga
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_SAITAMA">
            <summary>
            Saitama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_SHIGA">
            <summary>
            Shiga
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_SHIMANE">
            <summary>
            Shimane
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_SHIZUOKA">
            <summary>
            Shizuoka
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_TOCHIGI">
            <summary>
            Tochigi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_TOKUSHIMA">
            <summary>
            Tokushima
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_TOKYO">
            <summary>
             Tokyo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_TOTTORI">
            <summary>
            Tottori
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_TOYAMA">
            <summary>
            Toyama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_WAKAYAMA">
            <summary>
            Wakayama
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_YAMAGATA">
            <summary>
            Yamagata
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_YAMAGUCHI">
            <summary>
            Yamaguchi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.JPN_YAMANASHI">
            <summary>
            Yamanashi
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_AGS">
            <summary>
            Aguascalientes
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_BC">
            <summary>
            Baja California
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_BCS">
            <summary>
            Baja California Sur
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_CAMP">
            <summary>
            Campeche
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_CHIS">
            <summary>
            Chiapas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_CHIH">
            <summary>
            Chihuahua
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_COAH">
            <summary>
            Coahuila
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_COL">
            <summary>
            Colima
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_DF">
            <summary>
            Distrito Federal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_DGO">
            <summary>
            Durango
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_GTO">
            <summary>
            Guanajuato
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_GRO">
            <summary>
            Guerrero
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_HGO">
            <summary>
            Hidalgo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_JAL">
            <summary>
            Jalisco
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_MEX">
            <summary>
            México
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_MICH">
            <summary>
            Michoacan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_MOR">
            <summary>
            Morelos
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_NAY">
            <summary>
            Nayarit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_NL">
            <summary>
            Nuevo León
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_OAX">
            <summary>
            Oaxaca
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_PUE">
            <summary>
            Puebla
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_QRO">
            <summary>
            Querétaro
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_QR">
            <summary>
            Quintana Roo
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_SLP">
            <summary>
            San Luis Potos
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_SIN">
            <summary>
            Sinaloa
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_SON">
            <summary>
            Sonora
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_TAB">
            <summary>
            Tabasco
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_TAMPS">
            <summary>
            Tamaulipas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_TLAX">
            <summary>
            Tlaxcala
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_VER">
            <summary>
            Veracruz
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_YUC">
            <summary>
            Yucatán
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.MEX_ZAC">
            <summary>
            Zacatecas
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_GAUTENG">
            <summary>
            Gauteng
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_WESTERNCAPE">
            <summary>
            Western Cape
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_NORTHPROVINCE">
            <summary>
            Northern Province
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_NWPROVINCE">
            <summary>
            Northwest Province
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_KWZULUNATAL">
            <summary>
            Kwa Zulu Natal
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_EASTCAPE">
            <summary>
            Eastern Cape
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_FREESTATE">
            <summary>
            Freestate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_NORTHCAPE">
            <summary>
            Northern Cape
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ZA_MPUMALANGA">
            <summary>
            Mpumalanga
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.ALL_STATES">
            <summary>
            All states
            </summary>
        </member>
        <member name="F:Selerix.Foundation.State.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Gender">
            <summary>
            Enum. Specifies the gender type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Gender.Unknown">
            <summary>
            Unknown gender type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Gender.Male">
            <summary>
            Male.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Gender.Female">
            <summary>
            Female.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Gender.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Gender.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="T:Selerix.Foundation.GenderExtension">
            <summary>
            Gender related extension methods.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.GenderExtension.ParseAsGender(System.String)">
            <summary>
            Parse string into gender.
            </summary>
            <param name="str">The gender string.</param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.GenderExtension.ToGenderCode(Selerix.Foundation.Gender)">
            <summary>
            Convert gender enum value into string code.
            </summary>
            <param name="gender">The gender enum value.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.InterfaceOption">
            <summary>
            Mode of current accessibility to an object.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.NotShown">
            <summary>
            Will not be visible on user interface.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.Required">
            <summary>
            Will be required.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.Optional">
            <summary>
            Optional.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.RequiredIfNew">
            <summary>
            Required only if new person.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.ReadOnly">
            <summary>
            Read only.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.ReadOnlyIfNotNull">
            <summary>
            Read only if not null.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfaceOption.ReadOnlyIfNotNullRequiredIfNull">
            <summary>
            This interface option is read-only if it already has a value, but if blank would be required.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.InterfacePosition">
            <summary>
            Default location of element
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfacePosition.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfacePosition.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.InterfacePosition.NavigationPanel">
            <summary>
            Navigation panel.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SpecialRoleType">
            <summary>
            Possible special role types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpecialRoleType.None">
            <summary>
            No special role type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpecialRoleType.Enroller">
            <summary>
            Enroller role when coming from BenefitAgent
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpecialRoleType.HR">
            <summary>
            HR role when coming from BenefitAgent
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EnrollerType">
            <summary>
            Possible types that an enroller might be.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollerType.Unknown">
            <summary>
            Unknown type - not specified.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollerType.FaceToFace">
            <summary>
            Face to Face - enroller can see and talk to the enrollee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollerType.CallCenter">
            <summary>
            Call Center - enrollment is occurring remotely
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollerType.FaceToFaceORCallCenter">
            <summary>
            Both - the enroller can be either a Face to Face or a Call Center enroller.  
            They will need to be prompted to determine which role they're fulfilling at time of enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EnrollerType.HR_Admin">
            <summary>
            HR / Admin - The enroller is internal to the Employer.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CaseSourceType">
            <summary>
            Specifies the source of the case
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseSourceType.Unknown">
            <summary>
            Unknown source
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseSourceType.BenAdmin">
            <summary>
            Case from Benefit Select
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseSourceType.BenefitAgent">
            <summary>
            Case generated by Benefit Agent
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CaseType">
            <summary>
            Case type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseType.Production">
            <summary>
            Official, production version of the case containing live data.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseType.Training">
            <summary>
            Temporary case for training purposes. May contain temporary copy of production data, 
            but only for training purposes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseType.Demo">
            <summary>
            Demo case. Should not contain production data.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseType.Test">
            <summary>
            Test case - Temporary case used for testing. Depending on situation, 
            may contain copy of production data, but only for testing purposes. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseType.Archive">
            <summary>
            Archived version of a case. Records are being retained for historical purposes. 
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CaseEventSubClass">
            <summary>
            Enum. Case setup event sub types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.NoSubClass">
            <summary>
            Empty sub class.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.TypeChanged">
            <summary>
            Case type changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.InfoChanged">
            <summary>
            Case info changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.CustomFieldChanged">
            <summary>
            Custom field changed. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.PlanYearChanged">
            <summary>
            Case Plan Year changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.LocationChanged">
            <summary>
            Location changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.DepartmentChanged">
            <summary>
            Department changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.JobClassChanged">
            <summary>
            Job Class changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.PayGroupChanged">
            <summary>
            Payroll location changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.PlanChanged">
            <summary>
            Plan changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.PlanProductChanged">
            <summary>
            Case product changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CaseEventSubClass.EdiChanged">
            <summary>
            EDI parameters changed.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.SpouseSignatureMode">
            <summary>
            Enum. Specifies the spouse signature mode, whether sign during enrollment, sign separately or all modes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpouseSignatureMode.All">
            <summary>
            Allow all modes.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpouseSignatureMode.SignTogether">
            <summary>
            Sign during enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.SpouseSignatureMode.SignSeparately">
            <summary>
            Sign separately
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EventSubClassExtensions">
            <summary>
            Life event extension methods.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.EventSubClassExtensions.IsTerminationEvent(Selerix.Foundation.EventSubClass)">
            <summary>
            Check if life event class is a termination event.
            </summary>
            <param name="lifeEvent">Life event class.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.EventSubClass">
            <summary>
            Enum. Indicates the specific type of event.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Added">
            <summary>
            Added.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Marriage">
            <summary>
            Marriage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Divorce">
            <summary>
            Divorce.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.LegalSeparation">
            <summary>
            Legal separation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.NameChange">
            <summary>
            Name change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.AddressChange">
            <summary>
            Address change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Transferred">
            <summary>
            Transferred.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.JobClassChanged">
            <summary>
            Job class change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Terminated">
            <summary>
            Terminated.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.BirthOfChild">
            <summary>
            Birth of child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.AdoptionOfChild">
            <summary>
            Adoption of child.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DeathOfSpouse">
            <summary>
            Death of spouse.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DeathOfDependent">
            <summary>
            Death of dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DependentAgeLimit">
            <summary>
            Dependent age limit.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.BeneficiaryChange">
            <summary>
            Beneficiary change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.SpouseEmploymentChange">
            <summary>
            Spouse employment change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EnableReEnrollment">
            <summary>
            Enable re-enrollment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.RegainDependent">
            <summary>
            Regain dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.SalaryChanged">
            <summary>
            Salary changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.MarriageAddDependent">
            <summary>
            Marriage, add dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DivorceAddDependent">
            <summary>
            Divorce, add dependent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.AutoEnroll">
            <summary>
            Auto-enroll.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.LeaveOfAbsence">
            <summary>
            Leave of absence.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.ReturnFromLeave">
            <summary>
            Return from leave.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Rehire">
            <summary>
            Re-hire.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Retired">
            <summary>
            Retired.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.CustomFieldChange">
            <summary>
            Custom field change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.ReturnFromRetire">
            <summary>
            Return from retire.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.PayGroupChange">
            <summary>
            Pay group change.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.TerminatedEmploymentOther">
            <summary>
            Employee Termination Other
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.TerminatedEmploymentResignation">
            <summary>
            Employee Termination Resignation
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.NumberOfHoursChange">
            <summary>
            Number of hours is changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DependentDeleted">
            <summary>
            Dependent is manually deleted
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EmailCommunicationSent">
            <summary>
            An email was sent to the employee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.COBRAStart">
            <summary>
            COBRA start date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.COBRAEnd">
            <summary>
            COBRA end date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EmployeeIDChange">
            <summary>
            Employee ID changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.CourtOrder">
            <summary>
            Court-ordered enrollment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.CourtOrderAddDependent">
            <summary>
            Court-ordered enrollment
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.WagesChanged">
            <summary>
            Wages Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.PINChanged">
            <summary>
            PIN Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.DateOfHireChange">
            <summary>
            Date of Hire changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EligibilityDateChange">
            <summary>
            Eligibility date changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.UserIDChanged">
            <summary>
            User ID changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.FTERateChanged">
            <summary>
            FTE Rate Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.AsOfDateChanged">
            <summary>
            As Of Date Changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.TerminationDateChanged">
            <summary>
            Termination Date Changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.CoverageChange">
            <summary>
            Change of coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.PaymentChanged">
            <summary>
            Change of Payment.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.BankNameChanged">
            <summary>
            Change of Bank Name.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.BankAddressChanged">
            <summary>
            Change of Bank Address.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EnrollmentStatusChanged">
            <summary>
            Enrollment status changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.TitleChanged">
            <summary>
            Job Title changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.EmailMessageSent">
            <summary>
            An email was sent to the employee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.TextMessageSent">
            <summary>
            An text message was sent to the employee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.AppMessageSent">
            <summary>
            An app message was sent to the employee
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClass.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EventSubClassEx">
            <summary>
            Enum. Employee payroll event sub types.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.NoSubClass">
            <summary>
            Empty sub class.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.MaritalStatusChanged">
            <summary>
            Marital status changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.HomeAddressChanged">
            <summary>
            Employee address changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.LocationChanged">
            <summary>
            Employee location changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.JobClassChanged">
            <summary>
            Job class changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.EmploymentStatusChanged">
            <summary>
            Employment status changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.SalaryChanged">
            <summary>
            Salary changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.PayGroupChanged">
            <summary>
            Pay group changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.NumberOfHoursChanged">
            <summary>
            Number of hours changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.EmployeeIdChanged">
            <summary>
            Employe id changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.WagesChanged">
            <summary>
            Wages changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.DateOfHireChanged">
            <summary>
            Date of hire changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.EligibilityDateChanged">
            <summary>
            Eligibility date changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.FTERateChanged">
            <summary>
            FTE rate changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.TerminationDateChanged">
            <summary>
            Termination date changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.PaymentInfoChanged">
            <summary>
            Payment info changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.EnrollmentStatusChanged">
            <summary>
            Enrollment status changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.TitleChanged">
            <summary>
            Job Title changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.Rehire">
            <summary>
            Rehire
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.ExEventBase">
            <summary>
            Extended event offset.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.EmailChanged">
            <summary>
            Email changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.Email2Changed">
            <summary>
            Personal email changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.PTOBalanceChanged">
            <summary>
            PTO Balance changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.PTOCostChanged">
            <summary>
            PTO const changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.OvertimeChanged">
            <summary>
            Overtime changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.StockOptionGrantValueChanged">
            <summary>
            Stock option grant value changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.BonusChanged">
            <summary>
            Bonus changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.MedicareTaxChanged">
            <summary>
            Medicare tax changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.FederalUnemploymentTaxChanged">
            <summary>
            Federal unemployment tax changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.StateUnemploymentTaxChanged">
            <summary>
            State unemployment tax changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.SocialSecurityTaxChanged">
            <summary>
            Social security tax changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.FederalTaxChanged">
            <summary>
            Federal tax changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.WorkersCompChanged">
            <summary>
            Workers comp changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.CommissionsChanged">
            <summary>
            Commissions changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.PayrollFrequencyChanged">
            <summary>
            Payroll frequency changed
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.Transfer">
            <summary>
            The transfer event
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventSubClassEx.ManualSync">
            <summary>
            Sync event.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ChangeReason">
            <summary>
            Change reason
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.Death">
            <summary>
            The death
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.Divorce">
            <summary>
            The divorce
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.Marriage">
            <summary>
            The marriage
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.OverAge">
            <summary>
            The over age
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ChangeReason.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.MemberSearch">
            <summary>
            Member search
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MemberSearch.SSN">
            <summary>
            The SSN
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MemberSearch.Ident">
            <summary>
            The ident
            </summary>
        </member>
        <member name="T:Selerix.Foundation.EventClass">
            <summary>
            Enum. Indicates the event type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventClass.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventClass.Added">
            <summary>
            Added.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventClass.Changed">
            <summary>
            Changed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventClass.Deleted">
            <summary>
            Deleted.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.EventClass.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.DependentVerificationDocument">
            <summary>
            Enum DependentVerificationDocument
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.NoDocumentationProvided">
            <summary>
            no documentation provided
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.AdoptionPapers">
            <summary>
            adoption papers
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.BirthCertificate">
            <summary>
            birth certificate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.CourtOrder">
            <summary>
            court order
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.DomesticPartnerAffidavit">
            <summary>
            domestic partner affidavit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.DriversLicense">
            <summary>
            drivers license
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.LegalGuardianshipPapers">
            <summary>
            legal guardianship papers
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.InsuranceCard">
            <summary>
            insurance card
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.MarriageCertificate">
            <summary>
            marriage certificate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.Passport">
            <summary>
            passport
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.SocialSecurityCard">
            <summary>
            social security card
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.UtilityBill">
            <summary>
            utility bill
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.OtherApprovedDocument">
            <summary>
            other approved document
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.TaxReturn">
            <summary>
            tax return
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.MortgageStatement">
            <summary>
            mortgage statement
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.MarriageLicenseApplication">
            <summary>
            marriage license application
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.VerificationLetter">
            <summary>
            verification letter
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.ClassSchedule">
            <summary>
            class schedule
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.CanceledCheck">
            <summary>
            canceled check
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.GrandchildAffidavitVerificationDocument">
            <summary>
            grandchild affidavit verification document
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.CommonLawMarriageAffidavit">
            <summary>
            common law marriage affidavit
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.IRSMarriageCert">
            <summary>
            IRS/Marriage Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.MarriageCertUtilityBill">
            <summary>
            Marriage Cert/Utility Bill
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.IRSBirthCert">
            <summary>
            IRS/Birth Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.BirthCertCourtDocsForAdoptedChildren">
            <summary>
            Birth Cert/Court Docs-For Adopted children
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.BirthCertMedicalDisabilityCert">
            <summary>
            Birth Cert/Medical Disability Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.IRSMedicalDisabilityCert">
            <summary>
            IRS/Medical Disability Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.AffidavitToVerifySpouse">
            <summary>
            Affidavit to verify Spouse
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.IRSSeparationAgreement">
            <summary>
            Separation Agreement/IRS
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.DomesticPartnerAffidavitJointMortgage">
            <summary>
            Domestic Partner Affidavit/Joint Mortgage or Tenancy
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.DomesticPartnerAffidavitJointBank">
            <summary>
            Domestic Partner Affidavit/Joint Bank or Liabilities
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.DomesticPartnerAffidavitDriversLicense">
            <summary>
            Domestic Partner Affidavit/Driver’s License or State ID
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.NaturalizationCertBirthAbroad">
            <summary>
            Naturalization Cert or Report of Birth Abroad
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.NaturalCertBirthAbroadMedDisabilityCert">
            <summary>
            Natural. Cert or Report of Birth Abroad/Med. Disability Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.AdoptionPapersMedicalDisabilityCert">
            <summary>
            Adoption Papers/Medical Disability Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.LegalPapersMedicalDisabilityCert">
            <summary>
            Legal guardianship papers/Medical Disability Cert
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.IRSDomesticPartnerAffidavit">
            <summary>
            Domestic Partner Affidavit/IRS
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.UtilityDomesticPartnerAffidavit">
            <summary>
            Domestic Partner Affidavit/IRS
            </summary>
        </member>
        <member name="F:Selerix.Foundation.DependentVerificationDocument.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.MappingCategory">
            <summary>
            Specifies the mapping category.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Department">
            <summary>
            Department.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.PhoneType">
            <summary>
            Phone type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.JobClass">
            <summary>
            Job class.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.EmployeeStatus">
            <summary>
            Employee status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Relationship">
            <summary>
            Relationship.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Plan">
            <summary>
            Plan.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.CoverageType">
            <summary>
            Coverage type.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Question">
            <summary>
            Product question.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.PayerProduct">
            <summary>
            Payer product.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Location">
            <summary>
            Location.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.PayrollLocation">
            <summary>
            Payroll location.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.Documents">
            <summary>
            Documents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.DependentVerificationDocuments">
            <summary>
            Dependent verification documents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.MappingCategory.PlanQuestion">
            <summary>
            Plan question
            </summary>
        </member>
        <member name="T:Selerix.Foundation.OfferingEnrollmentStyle">
            <summary>
            Offering enrollment style.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.OfferingEnrollmentStyle.Default">
            <summary>
            Side by side.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.OfferingEnrollmentStyle.SideBySide">
            <summary>
            Side by side.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.OfferingEnrollmentStyle.Tabular">
            <summary>
            Tabular.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.AssociationType">
            <summary>
            User Association Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.AssociationType.None">
            <summary>
            None or Unset
            </summary>
        </member>
        <member name="F:Selerix.Foundation.AssociationType.Employer">
            <summary>
            Employer Associations
            </summary>
        </member>
        <member name="F:Selerix.Foundation.AssociationType.Broker">
            <summary>
            Broker Associations
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ThemeAssetType">
            <summary>
            Theme Asset Type
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.CSS">
            <summary>
            The CSS
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.Font">
            <summary>
            The font
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.JavaScript">
            <summary>
            The java script
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ThemeAssetType.Video">
            <summary>
            The video
            </summary>
        </member>
        <member name="T:Selerix.Foundation.CertificateType">
            <summary>
            Type of certificate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.CertificateType.FtpCertificate">
            <summary>Certificates used for ftp</summary>
        </member>
        <member name="F:Selerix.Foundation.CertificateType.GeneralCertificate">
            <summary>General purpose certificates</summary>
        </member>
        <member name="F:Selerix.Foundation.CertificateType.MicrosoftEnhancedCryptoProviderCertificate">
            <summary>MicrosoftEnhancedCryptoProviderCertificate certificates</summary>
        </member>
        <member name="T:Selerix.Foundation.Permission">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Permission.Read">
            <summary>
            Can read
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Permission.Write">
            <summary>
            Can write
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Permission.Share">
            <summary>
            Can share with other users
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PermissionEventType">
            <summary>
            User changes Permission Types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PermissionEventType.AddPermission">
            <summary>Add a permission for a role + security id</summary>
        </member>
        <member name="F:Selerix.Foundation.PermissionEventType.DeletePermission">
            <summary>Delete a permission for a role + security id</summary>
        </member>
        <member name="F:Selerix.Foundation.PermissionEventType.AddRole">
            <summary>Add a new role</summary>
        </member>
        <member name="F:Selerix.Foundation.PermissionEventType.DeleteRole">
            <summary>Delete an existing role</summary>
        </member>
        <member name="F:Selerix.Foundation.PermissionEventType.RenameRole">
            <summary>Rename a role</summary>
        </member>
        <member name="T:Selerix.Foundation.UserEventType">
            <summary>
            User changes event types
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.CreateAccount">
            <summary>
            The create account
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.LockAccount">
            <summary>
            The lock account
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.UnlockAccount">
            <summary>
            The unlock account
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeEffectiveDate">
            <summary>
            The change effective date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeTerminationDate">
            <summary>
            The change termination date
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AddRole">
            <summary>
            The add role
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.DeleteRole">
            <summary>
            The delete role
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangePassword">
            <summary>
            The change password
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ConfirmEmail">
            <summary>
            The confirm email
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeLoginName">
            <summary>
            The change login name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeName">
            <summary>
            The change name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeEmail">
            <summary>
            The change email
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AddEmployerAssociation">
            <summary>
            The add employer association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AddBrokerAssociation">
            <summary>
            The add broker association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AddPayerAssociation">
            <summary>
            The add payer association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.RemoveEmployerAssociation">
            <summary>
            The remove employer association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.RemoveBrokerAssociation">
            <summary>
            The remove broker association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.RemovePayerAssociation">
            <summary>
            The remove payer association
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AddLocation">
            <summary>
            The add location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.RemoveLocation">
            <summary>
            The remove location
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeCertificate">
            <summary>
            The change certificate
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.ChangeIPAddressRestriction">
            <summary>
            The change ip address restriction
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.AccessCase">
            <summary>
            User accessed case
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.DeleteCase">
            <summary>
            The delete case
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.UndeleteCase">
            <summary>
            The undelete case
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.DeleteUser">
            <summary>
            User has been marked as deleted
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.RenameCase">
            <summary>
            Rename a case
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UserEventType.HrxChange">
            <summary>
            Hrx settings changed
            </summary>
        </member>
        <member name="T:Selerix.Foundation.PasswordVerificationResult">
            <summary>
            Specifies the results for password verification.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PasswordVerificationResult.Failed">
            <summary>
            Indicates password verification failed.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PasswordVerificationResult.Success">
            <summary>
            Indicates password verification was successful.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.PasswordVerificationResult.SuccessRehashNeeded">
            <summary>
            Indicates password verification was successful however the password was encoded using a deprecated algorithm
            and should be rehashed and updated.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.enmRoundingMode">
            <summary>
            Enum for rounding.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.NoRound">
            <summary>
            No rounding.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.RoundDown">
            <summary>
            Round down.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.Round">
            <summary>
            Alias for Financial.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.RoundUp">
            <summary>
            Round up.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.Math">
            <summary>
            Math rounding.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.enmRoundingMode.Financial">
            <summary>
            Financial rounding.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.ScriptPlace">
            <summary>
            Specifies where the script is located.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.Plan">
            <summary>
            Plan
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.Presentation">
            <summary>
            Presentation.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.Question">
            <summary>
            Question.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.Form">
            <summary>
            Form.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.Product">
            <summary>
            Product.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.TextBank">
            <summary>
            Textbank.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.BenefitAgent">
            <summary>
            BenefitAgent.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.ScriptPlace.BenRecommend">
            <summary>
            BenRecommend advertishing
            </summary>
        </member>
        <member name="T:Selerix.Foundation.TextBankSearchScope">
            <summary>
            Enum TextBankSearchScope
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchScope.Local">
            <summary>
            The local
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchScope.Global">
            <summary>
            The global
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchScope.Both">
            <summary>
            The both
            </summary>
        </member>
        <member name="T:Selerix.Foundation.TextBankSearchMode">
            <summary>
            Enum TextBankSearchMode
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchMode.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchMode.Content">
            <summary>
            The content
            </summary>
        </member>
        <member name="F:Selerix.Foundation.TextBankSearchMode.Both">
            <summary>
            The both
            </summary>
        </member>
        <member name="T:Selerix.Foundation.FormFormat">
            <summary>
            Form format
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.PDF">
            <summary>
            The PDF
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.TiffG4">
            <summary>
            The tiff g4
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.TiffLZW">
            <summary>
            The tiff LZW
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.TiffMono">
            <summary>
            The tiff mono
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.Tiff24">
            <summary>
            The tiff24
            </summary>
        </member>
        <member name="F:Selerix.Foundation.FormFormat.Png24">
            <summary>
            The PNG24
            </summary>
        </member>
        <member name="T:Selerix.Foundation.UploadMode">
            <summary>
            Specifies the upload mode.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.Undefined">
            <summary>
            Upload mode is undefined.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.Employee">
            <summary>
            Upload mode is employee.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.CoverageRepair">
            <summary>
            Upload mode is coverage repair.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.Coverage">
            <summary>
            Upload mode is coverage.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.EmployeeDependents">
            <summary>
            Update employee and dependents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.CoverageDependents">
            <summary>
            Update coverage and dependents.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.CoverageNotPrimaryInsured">
            <summary>
            Updates coverages. Doesn't update primary insured for existing coverages matched by policy number. 
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadMode.LifeEvents">
            <summary>
            Update Employee and Dependents, process Life events and update coverages
            </summary>
        </member>
        <member name="T:Selerix.Foundation.UploadXMLStatus">
            <summary>
            Enum. Specifies the xml upload status.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.OK">
            <summary>
            Upload was ok.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.Error">
            <summary>
            Attempted upload returned an error.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.InitProcess">
            <summary>
            Upload is initializing the process.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.PrepareInput">
            <summary>
            Upload is preparing input.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.Running">
            <summary>
            Upload running.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.Stopping">
            <summary>
            Upload stopping.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.UploadSummary">
            <summary>
            A summary of the upload.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.DownloadSummary">
            <summary>
            A summary of the download.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.UploadXMLStatus.InstallUpdateSummary">
            <summary>
            Install update summary.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Validators.CreditCardValidator">
            <summary>
            CreditCardValidator object
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Validators.CreditCardValidator.IsValid(System.String,Selerix.Foundation.CreditType)">
            <summary>
            Determines whether the specified card number is valid.
            </summary>
            <param name="cardNumber">The card number.</param>
            <param name="cardType">Type of the card.</param>
            <returns>
            	<c>true</c> if the specified card number is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Validators.CreditCardValidator.IsValidCardType(System.String,Selerix.Foundation.CreditType)">
            <summary>
            Will ensure that the card is a valid length for the card type. If the
            card type isn't recognised it will return false by default.
            </summary>
            <param name="cardNumber">The card number.</param>
            <param name="cardType">Type of the card.</param>
            <returns>
            	<c>true</c> if [is valid card type] [the specified card number]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Selerix.Foundation.Validators.CreditCardValidator.ValidateCardNumber(System.String)">
            <summary>
            Performs a validation using Luhn's Formula.
            </summary>
            <param name="cardNumber">The card number.</param>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Workflow.IWorkflow`1">
            <summary>
            Defines and process some business work process.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflow`1.WorkflowId">
            <summary>
            Work flow id.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Workflow.IWorkflow`1.GetProcessor">
            <summary>
            Returns instance of workflow processor.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Selerix.Foundation.Workflow.IWorkflowProcessor`1">
            <summary>
            Processes workflow.
            </summary>
        </member>
        <member name="M:Selerix.Foundation.Workflow.IWorkflowProcessor`1.Process(Selerix.Foundation.Workflow.IWorkflowTask{`0})">
            <summary>
            Process workflow item.
            </summary>
            <param name="workflowItem">The workflow item.</param>
            <returns>The result of process</returns>
        </member>
        <member name="M:Selerix.Foundation.Workflow.IWorkflowProcessor`1.PollingInterval(Selerix.Foundation.Workflow.IWorkflowTask{`0})">
            <summary>
            Polling interval for workflow item.
            </summary>
            <param name="workflowItem"></param>
            <returns></returns>
        </member>
        <member name="M:Selerix.Foundation.Workflow.IWorkflowProcessor`1.SetSuspended(Selerix.Foundation.Workflow.IWorkflowTask{`0},System.String)">
            <summary>
            Sets the suspended.
            </summary>
            <param name="workflowItem">The workflow item.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Selerix.Foundation.Workflow.IWorkflowProcessor`1.CreatePostCommunicationTask(`0)">
            <summary>
            Create post communication task.
            </summary>
            <param name="workflowTaskID">The workflow id.</param>
        </member>
        <member name="T:Selerix.Foundation.Workflow.ResultStatus">
            <summary>
            Enum. Specifies the status of a result.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.OK">
            <summary>
            OK.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.Error">
            <summary>
            ERROR.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.Warning">
            <summary>
            WARNING.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.MissedArtifacts">
            <summary>
            Missed artifacts.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.TryAgain">
            <summary>
            Try again.
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.ResultStatus.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Workflow.EMailTemplateName">
            <summary>
            Email template name
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.ACA_IRS_UPLOAD">
            <summary>
            The ac a_ ir s_ upload
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.ACA_IRS_STATUS">
            <summary>
            The ac a_ ir s_ status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.ACA_SUMMARY_COMPLETE">
            <summary>
            The ac a_ summar y_ complete
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.ACA_FORMS_COMPLETE">
            <summary>
            The ac a_ form s_ complete
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.EMailTemplateName.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Workflow.IWorkflowResult">
            <summary>
            Workflow process result
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowResult.Status">
            <summary>
            Status object.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowResult.Warnings">
            <summary>
            Gets or sets the warnings.
            </summary>
            <value>The warnings.</value>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowResult.Error">
            <summary>
            Error object.
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Workflow.WorkflowTaskStatus">
            <summary>
            Workflow Task Status
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.WorkflowTaskStatus.NotStarted">
            <summary>
            The not started
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.WorkflowTaskStatus.Process">
            <summary>
            The process
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.WorkflowTaskStatus.Complete">
            <summary>
            The complete
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.WorkflowTaskStatus.Cancelled">
            <summary>
            The cancelled
            </summary>
        </member>
        <member name="F:Selerix.Foundation.Workflow.WorkflowTaskStatus.Fail">
            <summary>
            The fail
            </summary>
        </member>
        <member name="T:Selerix.Foundation.Workflow.IWorkflowTask`1">
            <summary>
            Workflow item to be processed.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.CreateDate">
            <summary>
            Gets the create date.
            </summary>
            <value>
            The create date.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.AsOfDate">
            <summary>
            As Of Date.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.WorkflowTaskId">
            <summary>
            Work flow task id.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.Interactive">
            <summary>
            Does it require manual user attention.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.LastError">
            <summary>
            Last error.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.LastAttemptDate">
            <summary>
            Last attempt date.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.NumberOfAttempts">
            <summary>
            Number of attempts.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.Suspended">
            <summary>
            Is suspended.
            </summary>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Selerix.Foundation.Workflow.IWorkflowTask`1"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Selerix.Foundation.Workflow.IWorkflowTask`1.UserID">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="T:Selerix.BusinessObjects.DecisionSupport.IProductSettings`1">
            <summary>
            Product projection settings base interface.
            </summary>
            <typeparam name="T">The type of Id key.</typeparam>
        </member>
        <member name="P:Selerix.BusinessObjects.DecisionSupport.IProductSettings`1.ProductId">
            <summary>
            Product ID.
            </summary>
        </member>
        <member name="P:Selerix.BusinessObjects.DecisionSupport.IProductSettings`1.PlanId">
            <summary>
            Plan ID.
            </summary>
        </member>
        <member name="T:Selerix.ConfigStorage.IConfigModelObject">
            <summary>
            Configuration object interface
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigModelObject.RelativePath">
            <summary>
            Gets or sets the path to the current object.
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigModelObject.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigModelObject.PK">
            <summary>
            Gets or sets the PK.
            </summary>
            <value>The PK.</value>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigModelObject.Initialized">
            <summary>
            TRUE - if config was prepared by Server and ready to use.
            FALSE - just loaded from storage and ready to be prepared by Server
            </summary>
        </member>
        <member name="M:Selerix.ConfigStorage.IConfigModelObject.LoadChildXmlConfig">
            <summary>
            Loads dependent configuration. Like Report intializes template configuration here.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Selerix.ConfigStorage.IConfigModelObject.SaveChildXmlConfig">
            <summary>
            Saves child configurations.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Selerix.ConfigStorage.IConfigObject">
            <summary>
            IConfigObject Interface. All config objects should implement this interface.
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigObject.UniqueID">
            <summary>
            Guid of configuration object.
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigObject.FolderGuid">
            <summary>
            Guid of parent folder object.
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigObject.FileName">
            <summary>
            Path to object config file.
            </summary>
        </member>
        <member name="P:Selerix.ConfigStorage.IConfigObject.AsOfDate">
            <summary>
            Last change of the object
            </summary>
        </member>
    </members>
</doc>
